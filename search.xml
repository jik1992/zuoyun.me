<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Awesome frontend</title>
    <url>/2014/12/19/0003-Awesome%20frontend/</url>
    <content><![CDATA[<p>这个月逛了一个月的github,基本上上班没事就点两下,发现真的是个宝库,我都快成点赞狂魔了,里面很多不错的组件希望以后能够用到,这里收集了一下做下总结.</p>
<h3 id="高级组件"><a href="#高级组件" class="headerlink" title="高级组件"></a>高级组件</h3><p>1.pace</p>
<blockquote>
<p>一个ajax动态进度条的组件,也就是ghost后台用的顶部一个小<code>progress bar</code>,发现国外网站都支持这个组件, 淘宝网也用到了<br><br><a href="https://github.com/HubSpot/pace" target="_blank" rel="noopener">https://github.com/HubSpot/pace</a></p>
</blockquote>
<p>2.reveal</p>
<blockquote>
<p>一个js实现的ppt制作插件,有个基于这个组件实现的在线ppt制作的网站<a href="slides.com">slides</a>不错的,国内的话红杏使用过这个.<br><br><a href="https://slides.com" target="_blank" rel="noopener">https://slides.com</a><br><br><a href="https://github.com/hakimel/reveal.js" target="_blank" rel="noopener">https://github.com/hakimel/reveal.js</a></p>
</blockquote>
<p>3.node-webkit</p>
<blockquote>
<p>这个比较厉害,webkit内核与node封装开放本地api,打包纯html5桌面应用利器,国内 有道词典和为知笔记使用的框架heX是由这个衍生的, 国外的Adobe的brackets是由另一个webkit app framework也是类似框架, koala使用的这款框架,国人开发 :)<br><br><a href="https://github.com/rogerwang/node-webkit" target="_blank" rel="noopener">https://github.com/rogerwang/node-webkit</a><br><br><a href="http://hex.youdao.com/zh-cn/index.html" target="_blank" rel="noopener">http://hex.youdao.com/zh-cn/index.html</a></p>
</blockquote>
<p>4.intro/pageguide</p>
<blockquote>
<p>一个引导页组件,做新手引导用的, 最低支持到ie9,效果很赞<br><br><a href="https://github.com/usablica/intro.js" target="_blank" rel="noopener">https://github.com/usablica/intro.js</a><br><br><a href="https://github.com/tracelytics/pageguide" target="_blank" rel="noopener">https://github.com/tracelytics/pageguide</a></p>
</blockquote>
<p>5.hackathon-starter</p>
<blockquote>
<p>sso社区接口大整合<br><br><a href="https://github.com/sahat/hackathon-starter" target="_blank" rel="noopener">https://github.com/sahat/hackathon-starter</a></p>
</blockquote>
<p>6.gitbook</p>
<blockquote>
<p>以markdown格式生成开源图书,目前国内有人改造用于生产环境, 具体请看为知笔记帮助项目也开源<br><br><a href="https://github.com/GitbookIO/gitbook" target="_blank" rel="noopener">https://github.com/GitbookIO/gitbook</a><br><br><a href="https://github.com/codepiano/gitbook" target="_blank" rel="noopener">https://github.com/codepiano/gitbook</a></p>
</blockquote>
<p>7.onepage-scroll</p>
<blockquote>
<p>单页全屏滚动,使用的非常多了<br><br><a href="https://github.com/peachananr/onepage-scroll" target="_blank" rel="noopener">https://github.com/peachananr/onepage-scroll</a></p>
</blockquote>
<p>8.raphael</p>
<blockquote>
<p>矢量图会话, 这个是在一个国外的设计类webapp的编辑器上看到的,暂时不知道应用场景<br><br><a href="https://github.com/DmitryBaranovskiy/raphael" target="_blank" rel="noopener">https://github.com/DmitryBaranovskiy/raphael</a></p>
</blockquote>
<p>9.codemirror</p>
<blockquote>
<p>在线代码编辑器用这个库做语法高亮<br><a href="https://github.com/codemirror/CodeMirror" target="_blank" rel="noopener">https://github.com/codemirror/CodeMirror</a></p>
</blockquote>
<p>10.photoswipe/magnific-popup</p>
<blockquote>
<p>图片幻灯片库,多平台兼容<br><br><a href="http://photoswipe.com/" target="_blank" rel="noopener">http://photoswipe.com/</a><br><br><a href="https://github.com/dimsemenov/Magnific-Popup" target="_blank" rel="noopener">https://github.com/dimsemenov/Magnific-Popup</a></p>
</blockquote>
<p>11.marked/markdown-js</p>
<blockquote>
<p>markdown parse库<br><br><a href="https://github.com/chjj/marked" target="_blank" rel="noopener">https://github.com/chjj/marked</a><br><br><a href="https://github.com/evilstreak/markdown-js" target="_blank" rel="noopener">https://github.com/evilstreak/markdown-js</a></p>
</blockquote>
<p>12.mermaid </p>
<blockquote>
<p>Generation of diagrams and flowcharts from text in a similar manner as markdown<br><br><a href="https://github.com/knsv/mermaid" target="_blank" rel="noopener">https://github.com/knsv/mermaid</a></p>
</blockquote>
<ol start="13">
<li>headjs/modernizer<blockquote>
<p>一个前端浏览器api封装库,可以检测ie和屏幕信息,一个兼容层垫片<br><br><a href="https://github.com/headjs/headjs" target="_blank" rel="noopener">https://github.com/headjs/headjs</a></p>
</blockquote>
</li>
</ol>
<p>14.jquery_lazyload</p>
<blockquote>
<p>图片懒加载<br><br><a href="https://github.com/tuupola/jquery_lazyload" target="_blank" rel="noopener">https://github.com/tuupola/jquery_lazyload</a></p>
</blockquote>
<p>15.storejs</p>
<blockquote>
<p>本地存储兼容层 <br><br><a href="https://github.com/marcuswestin/store.js" target="_blank" rel="noopener">https://github.com/marcuswestin/store.js</a></p>
</blockquote>
<p>16.whenjs</p>
<blockquote>
<p>异步的ajax请求<br><br><a href="https://github.com/cujojs/when" target="_blank" rel="noopener">https://github.com/cujojs/when</a></p>
</blockquote>
<p>17.vivus</p>
<blockquote>
<p>svg动画实现库,挺有意思<br><br><a href="https://github.com/maxwellito/vivus" target="_blank" rel="noopener">https://github.com/maxwellito/vivus</a></p>
</blockquote>
<p>18.jquery-qcode</p>
<blockquote>
<p>二维码生成插件<br><br><a href="https://github.com/jeromeetienne/jquery-qrcode" target="_blank" rel="noopener">https://github.com/jeromeetienne/jquery-qrcode</a></p>
</blockquote>
<p>19.audiojs/mediajs</p>
<blockquote>
<p>html5 audio标签的垫片 video 垫片<br><br><a href="https://github.com/kolber/audiojs" target="_blank" rel="noopener">https://github.com/kolber/audiojs</a><br><br><a href="https://github.com/etianen/html5media" target="_blank" rel="noopener">https://github.com/etianen/html5media</a></p>
</blockquote>
<ol start="20">
<li>webuploader<blockquote>
<p>百度出品!  文件上传垫片<br><br><a href="https://github.com/fex-team/webuploader" target="_blank" rel="noopener">https://github.com/fex-team/webuploader</a></p>
</blockquote>
</li>
</ol>
<p>21.jquery.hotkeys</p>
<blockquote>
<p>快捷键隐射 <br><br><a href="https://github.com/tzuryby/jquery.hotkeys" target="_blank" rel="noopener">https://github.com/tzuryby/jquery.hotkeys</a></p>
</blockquote>
<p>22.animate.css</p>
<blockquote>
<p>这个项目66666,  css动画效果<br><a href="https://github.com/daneden/animate.css" target="_blank" rel="noopener">https://github.com/daneden/animate.css</a></p>
</blockquote>
<p>23.easy ticker</p>
<blockquote>
<p>公告栏插件<br><br><a href="http://www.aakashweb.com/demos/jquery-easy-ticker/" target="_blank" rel="noopener">http://www.aakashweb.com/demos/jquery-easy-ticker/</a></p>
</blockquote>
<h3 id="图标类"><a href="#图标类" class="headerlink" title="图标类"></a>图标类</h3><p>1.Material Design Icons</p>
<blockquote>
<p>Google开源的material风格的开源图标</p>
</blockquote>
<p>2.twemoji</p>
<blockquote>
<p>挺好看的<br><br><a href="https://github.com/twitter/twemoji" target="_blank" rel="noopener">https://github.com/twitter/twemoji</a></p>
</blockquote>
<p>3.evil-icons</p>
<blockquote>
<p>一套不错的图标<br><br><a href="https://github.com/outpunk/evil-icons" target="_blank" rel="noopener">https://github.com/outpunk/evil-icons</a></p>
</blockquote>
<p>4.source-hans/source-han-sans-sc</p>
<blockquote>
<p>思源字体<br><br><a href="https://github.com/wweir/source-han-sans-sc" target="_blank" rel="noopener">https://github.com/wweir/source-han-sans-sc</a><br><br><a href="https://github.com/adobe-fonts/source-han-sans" target="_blank" rel="noopener">https://github.com/adobe-fonts/source-han-sans</a></p>
</blockquote>
<h3 id="敏捷开发"><a href="#敏捷开发" class="headerlink" title="敏捷开发"></a>敏捷开发</h3><p>1.coffeejs/docco</p>
<blockquote>
<p>这是个不错的语法糖,和koala组合可以实时编译, 跳js坑.  同样发现 微软的typescript和Google的dirtjs也都不错.docco是coffee的文档构建工具<br><br><a href="https://github.com/jashkenas/coffeescript" target="_blank" rel="noopener">https://github.com/jashkenas/coffeescript</a><br><br><a href="https://github.com/jashkenas/docco" target="_blank" rel="noopener">https://github.com/jashkenas/docco</a></p>
</blockquote>
<p>2.Yeoman/TodoMVC</p>
<blockquote>
<p>Google官方推荐脚手架,配置angularjs项目,打包bower,grunt.  已经试用,很不错,过几天出个教程<br>后者也是一个不错的项目<br><br><a href="https://github.com/tastejs/todomvc" target="_blank" rel="noopener">https://github.com/tastejs/todomvc</a><br><br><a href="https://github.com/yeoman/yeoman" target="_blank" rel="noopener">https://github.com/yeoman/yeoman</a></p>
</blockquote>
<p>3.Topcoat</p>
<blockquote>
<p>轻量级前端开发框架,风格很不错<br><br><a href="https://github.com/topcoat/topcoat" target="_blank" rel="noopener">https://github.com/topcoat/topcoat</a></p>
</blockquote>
<p>4.loopback/express/koa</p>
<blockquote>
<p>基于nodejs的服务端mvc开发框架<br><br><a href="http://loopback.io/" target="_blank" rel="noopener">http://loopback.io/</a></p>
</blockquote>
<p>5.jsdoc3/apidoc</p>
<blockquote>
<p>js的文档构建工具<br><br><a href="https://github.com/jsdoc3/jsdoc" target="_blank" rel="noopener">https://github.com/jsdoc3/jsdoc</a></p>
</blockquote>
<blockquote>
<p><a href="http://apidocjs.com/example/#" target="_blank" rel="noopener">http://apidocjs.com/example/#</a> api-User-PutUser</p>
</blockquote>
<p>6.nodejieba</p>
<blockquote>
<p>jieba分词的的nodejs版本<br><br><a href="https://github.com/aszxqw/nodejieba" target="_blank" rel="noopener">https://github.com/aszxqw/nodejieba</a></p>
</blockquote>
<p>7.appframework</p>
<blockquote>
<p>mit协议的webapp开发框架, 被intel收购了<br><br><a href="https://github.com/01org/appframework" target="_blank" rel="noopener">https://github.com/01org/appframework</a></p>
</blockquote>
<p>8.koala</p>
<blockquote>
<p>自动压缩打包工具,类似 file watch,  webstorm和grunt都有类似实现,但这个很方便,公司前端在用<br><br><a href="https://github.com/oklai/koala" target="_blank" rel="noopener">https://github.com/oklai/koala</a></p>
</blockquote>
<p>9.hex</p>
<blockquote>
<p>静态blog生成<br><br><a href="https://github.com/netease-youdao/hex" target="_blank" rel="noopener">https://github.com/netease-youdao/hex</a></p>
</blockquote>
<h3 id="angularjs系列"><a href="#angularjs系列" class="headerlink" title="angularjs系列"></a>angularjs系列</h3><p>1.material </p>
<blockquote>
<p>material风格的anglurjs ui设计库,动画效果赞!<br><br><a href="https://github.com/angular/material" target="_blank" rel="noopener">https://github.com/angular/material</a></p>
</blockquote>
<p>2.jsgen</p>
<blockquote>
<p>anglurjs中文站 <br><br><a href="https://github.com/zensh/jsgen" target="_blank" rel="noopener">https://github.com/zensh/jsgen</a></p>
</blockquote>
<p>3.angularjs-hotkeys</p>
<blockquote>
<p>快捷键映射<br><br><a href="https://github.com/chieffancypants/angular-hotkeys" target="_blank" rel="noopener">https://github.com/chieffancypants/angular-hotkeys</a></p>
</blockquote>
<p>4.angularjs-ui</p>
<blockquote>
<p>ui框架基于bootstrap3<br><br><a href="http://angular-ui.github.io/" target="_blank" rel="noopener">http://angular-ui.github.io/</a></p>
</blockquote>
<p>5.intro</p>
<blockquote>
<p><a href="https://github.com/mendhak/angular-intro.js" target="_blank" rel="noopener">https://github.com/mendhak/angular-intro.js</a></p>
</blockquote>
<p>6.tc-angular-charts</p>
<blockquote>
<p>angular图标组件<br><br><a href="https://github.com/carlcraig/tc-angular-chartjs" target="_blank" rel="noopener">https://github.com/carlcraig/tc-angular-chartjs</a></p>
</blockquote>
<h3 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h3><p>1.http-api-assigin</p>
<blockquote>
<p>介绍restful风格的http api设计,很短,干货<br><br><a href="https://github.com/interagent/http-api-design" target="_blank" rel="noopener">https://github.com/interagent/http-api-design</a></p>
</blockquote>
<p>2.500lines</p>
<blockquote>
<p>各种教程大杂烩,500解决一个项目,精品. 里面有很多名人的例子<br><br><a href="https://github.com/aosabook/500lines" target="_blank" rel="noopener">https://github.com/aosabook/500lines</a></p>
</blockquote>
<p>3.angular-app</p>
<blockquote>
<p>anglurjs教程<br><br><a href="https://github.com/angular-app/angular-app" target="_blank" rel="noopener">https://github.com/angular-app/angular-app</a></p>
</blockquote>
<p>4.devdocs</p>
<blockquote>
<p>各种前端语言api refence guide<br><br><a href="http://devdocs.io/cpp/" target="_blank" rel="noopener">http://devdocs.io/cpp/</a></p>
</blockquote>
<h3 id="推荐网站"><a href="#推荐网站" class="headerlink" title="推荐网站"></a>推荐网站</h3><p>1.大数据分析,可以对接Google分析</p>
<blockquote>
<p>kissmetrics.com</p>
</blockquote>
<p>2.响应式布局设计</p>
<blockquote>
<p><a href="https://froont.com/" target="_blank" rel="noopener">https://froont.com/</a></p>
</blockquote>
<p>3.算法教程</p>
<blockquote>
<p><a href="http://zh.visualgo.net/" target="_blank" rel="noopener">http://zh.visualgo.net/</a></p>
</blockquote>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>about</tag>
      </tags>
  </entry>
  <entry>
    <title>学习总结--高级语言,天马行空乱想</title>
    <url>/2014/12/20/0004-%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93--%E9%AB%98%E7%BA%A7%E8%AF%AD%E8%A8%80,%E5%A4%A9%E9%A9%AC%E8%A1%8C%E7%A9%BA%E4%B9%B1%E6%83%B3/</url>
    <content><![CDATA[<p>如今语言已经不再语言特性和运行时上找准卖点, 各语言越来越相近,相互互补,共同进步.<br>思考,如何快速的入门一门语言投入生产,构建健壮的软件. 避免锤子效应,灵活的在场景下切换不同语言.利用各个语言的生态.</p>
<p>从汇编开始, 三目/两目/单目运算符, 地址引用/值引用/偏移, 寄存器, goto循环 到 虚拟机结构演进,系统级的kvm 或是语言虚拟机jvm 或是应用层集装箱docker</p>
<h4 id="feature"><a href="#feature" class="headerlink" title="feature"></a>feature</h4><ul>
<li>api/feature/gc/current</li>
<li>强类型/弱类型   静态型/动态型</li>
<li>冯诺依曼体系:条件/循环/过程</li>
<li>语法,声明</li>
<li>集合操作/基础算法库</li>
<li>function/object oriented/procedure oriented</li>
</ul>
<h4 id="强大的生态"><a href="#强大的生态" class="headerlink" title="强大的生态"></a>强大的生态</h4><ul>
<li>runtime anaylsis/tools-&gt;oom/lock</li>
<li>gc anaylsis/tools-&gt;optimize</li>
<li>framework-&gt;orm/mvc/resful/db driver</li>
<li>build tools-&gt;dependence mangment/moudle/configrable</li>
<li>doc tools/code style-&gt;maintainable</li>
<li>ci/review/git/bugTracking-&gt;for scrum/kanban</li>
<li>ide-&gt;fast coding :)</li>
<li>kinds of library/unit/kit -&gt; safe/stable</li>
<li>kinds of documents/reference guide/bbs-&gt; upgrade</li>
</ul>
<h4 id="dev-ops"><a href="#dev-ops" class="headerlink" title="dev/ops"></a>dev/ops</h4><ul>
<li>kvm/emnu  所谓企业云计算的基本构件,性能上也不错的</li>
<li>docker    这个有生态,有自己的库和生态,十分优秀</li>
</ul>
<h4 id="未来趋势"><a href="#未来趋势" class="headerlink" title="未来趋势"></a>未来趋势</h4><ul>
<li>自动化  </li>
<li>异步    </li>
<li>分布式  </li>
</ul>
<h4 id="三把大刀"><a href="#三把大刀" class="headerlink" title="三把大刀"></a>三把大刀</h4><ul>
<li>queue-&gt;  rocketMQ/ONES MQS DISRUPTOR</li>
<li>cache-&gt;  redius/memacache</li>
<li>distributed-&gt; elasticsearch/dubbo</li>
</ul>
<blockquote>
<p>云计算的本质 网络多租户共享运维资源,快速发布稳定架构的程序</p>
</blockquote>
<p>web应用的优势, 使用html/css/js把页面的结构,内容,表现层完整的分离, 良性构建ui  而不是oo的复杂.<br><br>趋势,  碎片化严重 ,mc的typescipt,Google的dirt,opensource的coffee.标准的统一必然是一场战争,是无法良好投入生产的.<br>趋势,  桌面化, 编程桌面应用, 附带nodejs-webkit/webkit app framework,使用统一的html5容器, 即保留丰富的js生态库,和快速的前端发布, 规避浏览器标准碎片,跳出”浏览器” 抢占桌面市场.</p>
<p>同时,前后分离/模块化/restful有利于升级,可维护</p>
<p>一个良好构造的响应头:<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    msg:<span class="string">""</span></span><br><span class="line">    result:<span class="string">"success"</span></span><br><span class="line">    data:[&#123;&#125;,&#123;&#125;]</span><br><span class="line">    apiname:xxxx</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>manage</tag>
      </tags>
  </entry>
  <entry>
    <title>Fiddler4 Tools</title>
    <url>/2014/12/21/0005-Fiddler4%20Tools/</url>
    <content><![CDATA[<blockquote>
<p>&nbsp;&nbsp;&nbsp;&nbsp;有开源协议,这个可以免费用的,基本原理是监听系统的8888端口, 然后把所有的http请求代理到本地的8888,就可以使用了,这里代替方案有  postclient plugin for chrome and development tools 也挺好用<br>还有一个比较底层的 wireshark</p>
</blockquote>
<h3 id="fiddler笔记"><a href="#fiddler笔记" class="headerlink" title="fiddler笔记"></a>fiddler笔记</h3><ol>
<li>代理监听 127.0.0.1 8888  </li>
<li>两种代理模式<figure class="highlight plain"><figcaption><span>``` buffering ```</span></figcaption><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">#### 使用场景</span><br><span class="line">1. host配置</span><br><span class="line">2. 接口调试</span><br><span class="line">3. bugfix</span><br><span class="line">4. 性能分析</span><br><span class="line"></span><br><span class="line">### 功能</span><br><span class="line"> 1. 增加备注 comment</span><br><span class="line"> 2. replay 重新回放</span><br><span class="line"> 3. filter </span><br><span class="line"> 4. debug</span><br><span class="line"> 5. stream/buffer</span><br><span class="line"> 6. decode</span><br><span class="line"> 7. process filter</span><br><span class="line"> 8. console</span><br><span class="line"> 9. rules-&gt;automatice breakpoint</span><br><span class="line"></span><br><span class="line">### 状态栏</span><br><span class="line"> 1. statistic -&gt; rtt(往返时间)-&gt;showchart</span><br><span class="line"> 2. inspectors解包-&gt; request(header/cookice)/response(textview/json)</span><br><span class="line"> 3. autoresponder文件代理-&gt;拖拽,替换响应,save-&gt;fixbug</span><br><span class="line"> 4. composer前后端接口联调-&gt;拖拽, execute,重发</span><br><span class="line"> 5. timeline网站性能分析-&gt;</span><br><span class="line"></span><br><span class="line">### 使用场景:</span><br><span class="line"> 1. host配置(不配置hosts文件)  tools-&gt;host remapping -&gt;replay a request/ responder</span><br><span class="line"> 2. composer-&gt;重发请求</span><br><span class="line"> 3. add-ons-&gt;fiddler script-&gt; change speed</span><br><span class="line"> 4. add-ons-&gt;format javasctipt beatuy/ traffic differ</span><br><span class="line"> </span><br><span class="line">### 移动端监控</span><br><span class="line">* 服务端暴露端口到外网</span><br><span class="line">![](http://img.sandseasoft.com/image/b/aa/ba207cba465683ed61c471e72dd18.png)</span><br><span class="line"></span><br><span class="line">* 移动端配置proxy 转发</span><br><span class="line">* 本地资源目录动态映射</span><br><span class="line">```language-bash</span><br><span class="line">use AutoReponder</span><br><span class="line">regex:^https://sjbg.ghzq.com.cn/MIMP(?&lt;args&gt;.*)$</span><br><span class="line"></span><br><span class="line">*redir:http://10.211.55.26:8888$&#123;args&#125;</span><br></pre></td></tr></table></figure></li>
</ol>
<p>慕课网的视频<br><a href="http://www.imooc.com/learn/37" target="_blank" rel="noopener">http://www.imooc.com/learn/37</a></p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>tools</tag>
      </tags>
  </entry>
  <entry>
    <title>VPN 搭建全攻略</title>
    <url>/2014/12/22/0006-VPN%20%E6%90%AD%E5%BB%BA%E5%85%A8%E6%94%BB%E7%95%A5/</url>
    <content><![CDATA[<h1 id="方案一-PPTP"><a href="#方案一-PPTP" class="headerlink" title="方案一 PPTP"></a>方案一 PPTP</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 安装</span><br><span class="line">sudo apt-get install pptpd</span><br><span class="line"># 配置ip分配</span><br><span class="line">sudo vi /etc/pptpd.conf  </span><br><span class="line">localip 192.168.0.1</span><br><span class="line">remoteip 192.168.0.234-238,192.168.0.245</span><br><span class="line"># 配置dns路由</span><br><span class="line">sudo vi /etc/ppp/pptpd-options </span><br><span class="line">ms-dns 8.8.8.8</span><br><span class="line">ms-dns 8.8.4.4</span><br><span class="line"># 配置登录账号</span><br><span class="line">sudo vi /etc/ppp/chap-secrets </span><br><span class="line">admin pptpd admin *</span><br><span class="line"></span><br><span class="line"># 重启</span><br><span class="line">sudo /etc/init.d/pptpd restart </span><br><span class="line"># 开启转发</span><br><span class="line">vi /etc/sysctl.conf</span><br><span class="line">net.ipv4.ip_forward=1</span><br><span class="line"># 生效</span><br><span class="line">sudo sysctl -p </span><br><span class="line"></span><br><span class="line"># 安装iptables</span><br><span class="line">sudo apt-get install iptables </span><br><span class="line">sudo iptables -t nat -A POSTROUTING -s 192.168.0.0/24 -o eth0 -j MASQUERADE</span><br><span class="line">sudo iptables-save &gt; /etc/iptables-rules</span><br><span class="line">sudo vi  /etc/network/interfaces</span><br><span class="line">pre-up iptables-restore &lt; /etc/iptables-rules </span><br><span class="line">sudo iptables -A FORWARD -s 192.168.0.0/24 -p tcp -m tcp --tcp-flags SYN,RST SYN -j TCPMSS --set-mss 1200</span><br><span class="line">sudo iptables-save &gt; /etc/iptables-rules</span><br></pre></td></tr></table></figure>
<p><img src="http://img.sandseasoft.com/image/6/26/cf20b4298ee7ab0b40724d2238954.jpg" alt></p>
<h1 id="方案二-L2TP"><a href="#方案二-L2TP" class="headerlink" title="方案二 L2TP"></a>方案二 L2TP</h1><p><a href="https://github.com/sockeye44/instavpn" target="_blank" rel="noopener">https://github.com/sockeye44/instavpn</a><br><strong>端口映射 UDP 1701 500 4500</strong></p>
<h1 id="方案三-Shadowsocks"><a href="#方案三-Shadowsocks" class="headerlink" title="方案三 Shadowsocks"></a>方案三 Shadowsocks</h1><ul>
<li>端口 ：1080</li>
<li><p>服务端<br><a href="https://github.com/jik1992/fork-shadowsocks" target="_blank" rel="noopener">https://github.com/jik1992/fork-shadowsocks</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">apt-get install python-pip</span><br><span class="line">pip install shadowsocks</span><br><span class="line">sudo ssserver -p 443 -k password -m aes-256-cfb --user nobody -d start</span><br></pre></td></tr></table></figure>
</li>
<li><p>客户端</p>
<ul>
<li>客户端如果有问题可以尝试修改 MTU</li>
</ul>
</li>
<li>移动端 <ul>
<li>Shadowsrocket</li>
</ul>
</li>
<li>浏览器端 <ul>
<li>SwitchyOmega</li>
</ul>
</li>
</ul>
<h1 id="方案四-SSH"><a href="#方案四-SSH" class="headerlink" title="方案四 SSH"></a>方案四 SSH</h1><p><a href="https://github.com/apenwarr/sshuttle" target="_blank" rel="noopener">https://github.com/apenwarr/sshuttle</a></p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>devops</tag>
      </tags>
  </entry>
  <entry>
    <title>Groovy/Gradle</title>
    <url>/2014/12/22/0007-Groovy-Gradle/</url>
    <content><![CDATA[<blockquote>
<p>敏捷语言</p>
</blockquote>
<p>这门语言资料感觉并不多,<a href="http://groovy.codehaus.org/" target="_blank" rel="noopener">官方</a>有不错的文档,同时建议下载<strong><em>Groovy 2 Cookbook</em></strong>和<strong><em>Making Java Groovy</em></strong> 这两本电子书学习.语言本身我真的很喜欢,作为脚本语言灵巧可爱,做些总结,未来还会继续探索,希望能用于生产.</p>
<p>groovy_simple github:<br><a href="https://github.com/jik1992/groovy_sample" target="_blank" rel="noopener">https://github.com/jik1992/groovy_sample</a></p>
<p>groovy 官方资料站点:<br><a href="http://docs.codehaus.org/display/GROOVY/Home" target="_blank" rel="noopener">http://docs.codehaus.org/display/GROOVY/Home</a></p>
<p>已知的应用范围</p>
<ul>
<li>unit test-&gt;   groovy mock/groovy test/spock</li>
<li>build tools -&gt;gradle</li>
<li>swing ui -&gt; griffon</li>
<li>mvcframework -&gt;grails</li>
<li>more?  actor model/httpbuilder/for Android?</li>
</ul>
<h4 id="包结构"><a href="#包结构" class="headerlink" title="包结构"></a>包结构</h4><p><img src="http://img.sandseasoft.com/image/7/5b/11fd893574d211fb27e67231032d7.jpg" alt></p>
<p><img src="http://img.sandseasoft.com/image/0/8d/941d564e82d6bc1ea46a4fc65b9c6.jpg" alt></p>
<p> 过几天准备探索spring和maven的整合</p>
<h4 id="注解"><a href="#注解" class="headerlink" title="注解"></a>注解</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@TypeChecked //静态检查</span><br><span class="line">@Singleton   //单列</span><br><span class="line">@CompileStatic //静态编译</span><br><span class="line">@ToString</span><br><span class="line">@Mixin</span><br><span class="line">@Immutable</span><br><span class="line">@Grab  //独立script都可以使用这个注解加载包, 模块请使用gradle</span><br></pre></td></tr></table></figure>
<h4 id="groovy-compile"><a href="#groovy-compile" class="headerlink" title="groovy compile"></a>groovy compile</h4><p>三种<br>groovy<br>groovyc -d classes/-j # 编译成class/java(main方法)文件<br>groovyshell<br>groovyconsole</p>
<h4 id="java-groovy-相互调用"><a href="#java-groovy-相互调用" class="headerlink" title="java/groovy 相互调用"></a>java/groovy 相互调用</h4><ul>
<li><p>java JSR233/GroovyShell/Engine</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">GroovyShell shell=<span class="keyword">new</span> GroovyShell;</span><br><span class="line">shell.execute(<span class="string">"demo.groovy"</span>);</span><br></pre></td></tr></table></figure>
</li>
<li><p>groovy 直接使用</p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> com.demo.java</span><br><span class="line">object obj=<span class="keyword">new</span> object();</span><br><span class="line"># 或者使用注解</span><br><span class="line"><span class="meta">@Grab</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="groovy-use-build-tools"><a href="#groovy-use-build-tools" class="headerlink" title="groovy use build tools"></a>groovy use build tools</h4><p>使用maven 编译groovy -&gt;mvn clean test<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.10<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.codehaus.gmaven.runtime<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>gmaven-runtime-2.0<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.codehaus.gmaven<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>gmaven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">goal</span>&gt;</span>compile<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">goal</span>&gt;</span>testCompile<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.codehaus.gmaven.runtime<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>gmaven-runtime-2.0<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>gradle<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">apply plugin: &apos;groovy&apos;</span><br><span class="line">repositories &#123;</span><br><span class="line">  mavenCentral()</span><br><span class="line">&#125;</span><br><span class="line">dependencies &#123;</span><br><span class="line">  compile localGroovy()</span><br><span class="line">  compile &apos;ch.qos.logback:logback-classic:1.+&apos;</span><br><span class="line">  compile &apos;org.slf4j:slf4j-api:1.7.4&apos;</span><br><span class="line">  compile &apos;commons-io:commons-io:1.4&apos;</span><br><span class="line">  compile &apos;com.jcraft:jsch:0.1.49&apos;</span><br><span class="line">  testCompile &apos;junit:junit:4.+&apos;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h4 id="api-feature"><a href="#api-feature" class="headerlink" title="api/feature"></a>api/feature</h4><figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line"><span class="comment">//集合</span></span><br><span class="line"><span class="number">1</span>）省略了JavaBean的getter和setter方法；</span><br><span class="line"><span class="number">2</span>）默认情况，所有的类属性都是<span class="keyword">public</span>的；</span><br><span class="line"><span class="number">3</span>）构造函数很有特色，Map方式。</span><br><span class="line">intlist=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>];</span><br><span class="line">map=[<span class="string">a:</span><span class="number">4</span>,<span class="string">b:</span><span class="number">2</span>];</span><br><span class="line">intlist.add(<span class="string">"Python"</span>)</span><br><span class="line">intlist &lt;&lt; <span class="string">"Smalltalk"</span></span><br><span class="line">intlist[<span class="number">5</span>] = <span class="string">"Perl"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//二元运算符</span></span><br><span class="line"><span class="keyword">def</span> a=?:b</span><br><span class="line"></span><br><span class="line"><span class="comment">//安全占位符</span></span><br><span class="line"><span class="keyword">def</span> b=a?.property</span><br><span class="line"></span><br><span class="line">//字符串模板</span><br><span class="line">def s1='hello wolrd'   //默认string</span><br><span class="line">def s2="hello $&#123;s1&#125;"   //GString</span><br><span class="line">def multiLineQuote = """</span><br><span class="line">Hello, $&#123;name&#125;</span><br><span class="line">This is a multiline string with double quotes</span><br><span class="line">"""                     //多行字符串</span><br><span class="line"></span><br><span class="line">//as关键字</span><br><span class="line">def a="45";</span><br><span class="line">def b=a as int; //b cout&lt;&lt; 45 </span><br><span class="line"></span><br><span class="line">//判断</span><br><span class="line">if (a==b)   等价于  if (a.equal(b))</span><br><span class="line"></span><br><span class="line">// </span><br><span class="line">["Java", "Groovy"]*.toUpperCase()</span><br></pre></td></tr></table></figure>
<h4 id="groovy-script"><a href="#groovy-script" class="headerlink" title="groovy script"></a>groovy script</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># !/usr/bin/groovy</span><br><span class="line">println &quot;Hello $&#123;args[0]&#125;, may Groovy be with you.&quot;</span><br><span class="line"></span><br><span class="line">groovy -e &quot;println &apos;Hello World!&apos;&quot;</span><br></pre></td></tr></table></figure>
<h4 id="GroovyTestCase-Spock"><a href="#GroovyTestCase-Spock" class="headerlink" title="GroovyTestCase/Spock"></a>GroovyTestCase/Spock</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">assert 1==2 : &quot;One isn&apos;t Two&quot;</span><br></pre></td></tr></table></figure>
<h4 id="其他的项目"><a href="#其他的项目" class="headerlink" title="其他的项目"></a>其他的项目</h4><h5 id="Grails"><a href="#Grails" class="headerlink" title="Grails"></a>Grails</h5><h5 id="GPars"><a href="#GPars" class="headerlink" title="GPars"></a>GPars</h5><h5 id="GVM"><a href="#GVM" class="headerlink" title="GVM"></a>GVM</h5><h5 id="Griffon"><a href="#Griffon" class="headerlink" title="Griffon"></a>Griffon</h5><h5 id="GroovyServ"><a href="#GroovyServ" class="headerlink" title="GroovyServ"></a>GroovyServ</h5><h5 id="CodeNarc"><a href="#CodeNarc" class="headerlink" title="CodeNarc"></a>CodeNarc</h5><h5 id="Gaiden"><a href="#Gaiden" class="headerlink" title="Gaiden"></a>Gaiden</h5>]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux Bash</title>
    <url>/2014/12/23/0009-Linux%20Bash/</url>
    <content><![CDATA[<p>常用</p>
<ul>
<li>history  !</li>
<li>cd ~</li>
<li>install yum/apt-get </li>
<li>ctrl+alt+1/2/3/4</li>
<li>forward &gt;(覆写) &gt;&gt;(追加) 2&gt;&amp;1</li>
<li>pipe |</li>
<li>set|less</li>
<li>&amp; jobs fg bg</li>
<li>tab</li>
</ul>
<p>权限</p>
<ul>
<li>chmod -R 775 /     drwxrwxrwx(类型/用户/用户组/其他用户)</li>
<li>chown jik test/ 更改所有权</li>
</ul>
<p>搜索</p>
<ul>
<li>locate/updatedb</li>
<li>find / -name “xxx” -print</li>
</ul>
<p>文本</p>
<ul>
<li>cat/tail/more    (tail -fn200 error.log)</li>
<li>wc -l/sort/diff</li>
</ul>
<p>监控</p>
<ul>
<li>df -h/du -h</li>
<li>ps -ef</li>
<li>top -d 5</li>
<li>free -m</li>
<li>iostat 3</li>
<li>netstat -tanp | less</li>
<li>kill -9 xxx</li>
</ul>
<p>网络</p>
<ul>
<li>wget -N/curl/scp/nfs/sshfs</li>
</ul>
<p>software</p>
<ul>
<li>irssi/mail/mutt</li>
<li>unzip</li>
<li>lrzsz-&gt;rz-be sz</li>
<li>pptpd</li>
<li>mysql -h -P -u -p</li>
</ul>
<p>修改系统参数<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 临时生效</span><br><span class="line">ulimit -a</span><br><span class="line">ulimit -n 406960</span><br><span class="line"># 永久生效</span><br><span class="line">vim /etc/security/limits.conf</span><br></pre></td></tr></table></figure></p>
<p>用户</p>
<ul>
<li>useradd/userdel/passwd/groups</li>
<li>last -a/who -u 最后登录/当前登录</li>
</ul>
<p>防火墙</p>
<ul>
<li>iptables</li>
</ul>
<p>c compile<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure></p>
<p>公网ip<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">curl members.3322.org/dyndns/getip</span><br></pre></td></tr></table></figure></p>
<p><img src="http://img.sandseasoft.com/image/4/27/bb3ab0389244b6d9328eb0431ada8.png" alt><br><img src="http://img.sandseasoft.com/image/9/f6/d31c17347d1cb3bb2fa2b57586b69.png" alt><br><img src="http://img.sandseasoft.com/image/4/5f/9932d95e31aeec8ce751141f57cb7.png" alt></p>
<p>awk 使用 </p>
<p>使用方法<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">awk &apos;&#123;pattern + action&#125;&apos; &#123;filenames&#125;</span><br></pre></td></tr></table></figure></p>
<p>尽管操作可能会很复杂，但语法总是这样，其中 pattern 表示 AWK 在数据中查找的内容，而 action 是在找到匹配内容时所执行的一系列命令。花括号（{}）不需要在程序中始终出现，但它们用于根据特定的模式对一系列指令进行分组。 pattern就是要表示的正则表达式，用斜杠括起来。</p>
<p>awk语言的最基本功能是在文件或者字符串中基于指定规则浏览和抽取信息，awk抽取信息后，才能进行其他文本操作。完整的awk脚本通常用来格式化文本文件中的信息。</p>
<p>通常，awk是以文件的一行为处理单位的。awk每接收文件的一行，然后执行相应的命令，来处理文本。 </p>
<p>语法:</p>
<ul>
<li>-F ‘:’ =制定分隔符</li>
<li>$0/$1/$n=当行匹配/一列匹配/第 n 列匹配</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># cat /etc/passwd |awk  -F &apos;:&apos;  &apos;&#123;print $1&#125;&apos;  </span><br><span class="line"># cat /etc/passwd |awk  -F &apos;:&apos;  &apos;BEGIN &#123;print &quot;name,shell&quot;&#125;  &#123;print $1&quot;,&quot;$7&#125; END &#123;print &quot;blue,/bin/nosh&quot;&#125;&apos;</span><br></pre></td></tr></table></figure>
<blockquote>
<p><a href="http://www.cnblogs.com/ggjucheng/archive/2013/01/13/2858470.html" target="_blank" rel="noopener">http://www.cnblogs.com/ggjucheng/archive/2013/01/13/2858470.html</a></p>
</blockquote>
<p>curl 使用</p>
<ul>
<li>-O -o file 保存至本地</li>
<li>-L 强制重定向</li>
<li>-C 断点续传</li>
<li>–limit-rate 1000B  限速</li>
<li>-z 21-Dec-11 指定更新时间</li>
<li>-u username:password URL  授权页面</li>
<li>-T upload file</li>
<li>-x proxy</li>
<li>-D/-b 保存/使用  cookice</li>
<li>–data-urlencode  “param1=value1&amp;param2=value”   post 请求</li>
<li>-X DELETE 制定其他协议</li>
<li>–form “<a href="mailto:fileupload=@filename.txt" target="_blank" rel="noopener">fileupload=@filename.txt</a>“  上传文件</li>
</ul>
<p>时钟同步<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo service ntp stop </span><br><span class="line">ntpdate cn.pool.ntp.org</span><br><span class="line">sudo service ntp start </span><br><span class="line"></span><br><span class="line">wathc -n 1 ntpq -p</span><br><span class="line"></span><br><span class="line"># 修改时间</span><br><span class="line">date –s 10:10:10</span><br><span class="line">date -s 07/01/2016</span><br><span class="line">clock –w</span><br></pre></td></tr></table></figure></p>
<h1 id="常用脚本"><a href="#常用脚本" class="headerlink" title="常用脚本"></a>常用脚本</h1><p>杀死进程<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ps -ef | grep procedure_name | grep -v grep | awk &apos;&#123;print $2&#125;&apos; | xargs kill -9</span><br></pre></td></tr></table></figure></p>
<p>查看文件夹大小<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">du -h --max-depth=1 /data/logs/</span><br></pre></td></tr></table></figure></p>
<p>后台跑进程<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">!# bin/bash</span><br><span class="line">nohup sh xxx.sh &gt;dev/null 2&gt;1 &amp;</span><br></pre></td></tr></table></figure></p>
<p>登陆失败<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo cat /var/log/auth.log |grep failure |wc -l</span><br></pre></td></tr></table></figure></p>
<p>增加账号<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># add group</span><br><span class="line">addgroup demo</span><br><span class="line"># add user</span><br><span class="line">adduser demo -g demo</span><br><span class="line"># config sudoer</span><br><span class="line">sudo vim /etc/sudoers</span><br><span class="line">demo ALL=(ALL)  NOPASSWD: ALL</span><br><span class="line">:wq!</span><br></pre></td></tr></table></figure></p>
<p>简单时间同步 NTP<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt-get install ntpdate  </span><br><span class="line">ntpdate cn.pool.ntp.org  </span><br><span class="line">hwclock -w</span><br></pre></td></tr></table></figure></p>
<p>实现每天凌晨2点自动执行命令<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo su - crontab -e </span><br><span class="line">0 2 * * * /opt/gitlab/bin/gitlab-rake gitlab:backup:create</span><br></pre></td></tr></table></figure></p>
<p>开机自启动<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vim /etc/rc.d/rc.local</span><br></pre></td></tr></table></figure></p>
<p>统计 nginx 页面访问PV<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sed -n &apos;/20\/Jun\/2016/,$p&apos; access.log |grep download.html |wc -l</span><br></pre></td></tr></table></figure></p>
<p>gcc编译<br>rpm -ivh ppl-0.10.2-11.el6.x86_64.rpm                                 # ppl(libppl.so.7、libppl_c.so.2)<br>rpm -ivh cloog-ppl-0.15.7-1.2.el6.x86_64.rpm                       # cloog-ppl<br>rpm -ivh mpfr-2.4.1-6.el6.x86_64.rpm                                  # libmpcfr.so.1<br>rpm -ivh cpp-4.4.7-17.el6.x86_64.rpm                                  # cpp<br>rpm -ivh kernel-headers-2.6.32-642.el6.x86_64.rpm              # kernel-headers<br>rpm -ivh glibc-headers-2.12-1.192.el6.x86_64.rpm                # glibc-headers<br>rpm -ivh glibc-devel-2.12-1.192.el6.x86_64.rpm                    # glibc-devel<br>rpm -ivh libgomp-4.4.7-17.el6.x86_64.rpm                           # libgomp(libgomp、libgomp.so.1)<br>rpm -ivh gcc-4.4.7-17.el6.x86_64.rpm                                  # gcc</p>
<p>增加一个sudo用户</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#root </span><br><span class="line">useradd -m jik1992</span><br><span class="line">passwd jik1992</span><br><span class="line">chmod u+w /etc/sudoers</span><br><span class="line">jik1992 ALL(ALL) ALL</span><br><span class="line">chmod u-w /etc/sudoers</span><br><span class="line"></span><br><span class="line">su jik1992</span><br></pre></td></tr></table></figure>
<p>增加文件可执行权限</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">chmod 774 xxx.sh</span><br><span class="line">chown root:root xxx.sh</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#/bin/bash</span><br><span class="line">while true;</span><br><span class="line">do</span><br><span class="line">  count=`ps -ef | grep test.jar | grep -v grep|wc -l`</span><br><span class="line">  if [ $&#123;count&#125; -lt 1 ]; then</span><br><span class="line">    nohup java -jar test.jar &amp;</span><br><span class="line">  else</span><br><span class="line">    echo &quot;process is running&quot;</span><br><span class="line">  fi</span><br><span class="line">  sleep 3</span><br><span class="line">done</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>devops</tag>
      </tags>
  </entry>
  <entry>
    <title>CVS Git</title>
    <url>/2014/12/24/0010-CVS%20Git/</url>
    <content><![CDATA[<p>SourceTree<br>git</p>
<blockquote>
<p>非常好的版本控制系统</p>
</blockquote>
<p><img src="http://img.sandseasoft.com/image/7/6f/60376e015ea1836d1fc152594e99a.png" alt></p>
<h4 id="必装软件"><a href="#必装软件" class="headerlink" title="必装软件"></a>必装软件</h4><p>SourceTree by Bitbucket</p>
<h4 id="基本命令"><a href="#基本命令" class="headerlink" title="基本命令"></a>基本命令</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git clone</span><br><span class="line">git pull</span><br><span class="line">git push</span><br><span class="line">git commit</span><br><span class="line">git branch</span><br><span class="line">git submoudule</span><br><span class="line">git flow</span><br></pre></td></tr></table></figure>
<h4 id="子模块相关操作"><a href="#子模块相关操作" class="headerlink" title="子模块相关操作"></a>子模块相关操作</h4><p>.gitmodules<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[submodule &quot;dmj-web/dmj-web-trades/src/main/webapp/fedev&quot;]</span><br><span class="line">	path = dmj-web/dmj-web-trades/src/main/webapp/fedev</span><br><span class="line">	url = git@git.superboss.cc:dmj/dmj-frontend.git</span><br><span class="line">[submodule &quot;dmj-web/dmj-web-trades/src/main/webapp/fedevkm&quot;]</span><br><span class="line">	path = dmj-web/dmj-web-trades/src/main/webapp/fedevkm</span><br><span class="line">	url = git@git.superboss.cc:dmj/dmj-frontend-km.git</span><br></pre></td></tr></table></figure></p>
<p>初始化一个带有 submodule 的 repository<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git clone --recursive /path/to/repos/foo.git</span><br></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git submodule </span><br><span class="line">git submodule init</span><br><span class="line">git submodule update  # 慎用, 会更新掉本地的修改信息, 如果要进行修改提交, 进去具体的 module 进行 commin push 操作</span><br><span class="line">git submodule foreach git pull origin master</span><br></pre></td></tr></table></figure>
<h4 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h4><p>一共有两个远程仓库origin/master分别在远程和本地, 也就是说所有的branch/trunk都会有两份备份,在提交orgin的时候要保证本地版本是最新的.</p>
<p>也就是说基本操作流程无外乎:  </p>
<ol>
<li>pull一下master  and megre or resolve comflict</li>
<li>master get branch</li>
<li>edit branch </li>
<li>如果未完成, commit branch 到 orgin<br><br>如果完成,   check master, megre branch into..and resolve comflict</li>
<li>commit master</li>
</ol>
<blockquote>
<p>就像大树的根一样, 所有的分支最后都汇流到主干上.</p>
</blockquote>
<p>常用的标记有3种</p>
<table><br> <tr> <td> tag </td> <td>稳定的大版本</td><td>2.0.0</td> </tr><br>  <tr> <td> branch </td> <td>开发版的分支</td><td>1.9.1_20141224_1</td></tr><br>   <tr> <td> trunk </td> <td>主干</td><td> 1.9.0</td> </tr><br>    <tr> <td> hotfix </td> <td>补丁</td><td> 1.9.1</td> </tr><br></table>


<h4 id="gitignore"><a href="#gitignore" class="headerlink" title=".gitignore"></a>.gitignore</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">##   配置语法：</span><br><span class="line"># 　 以斜杠“/”开头表示目录；</span><br><span class="line"># 　 以星号“*”通配多个字符；</span><br><span class="line"># 　 以问号“?”通配单个字符</span><br><span class="line"># 　 以方括号“[]”包含单个字符的匹配列表；</span><br><span class="line">## 　以叹号“!”表示不忽略(跟踪)匹配到的文件或目录；</span><br><span class="line"></span><br><span class="line"># exp</span><br><span class="line"></span><br><span class="line">.idea/*</span><br><span class="line">*.iml</span><br></pre></td></tr></table></figure>
<p><a href="https://github.com/github/gitignore" target="_blank" rel="noopener">这里</a>有几乎所有的.ignore文件配置清单/idea plugin</p>
<h4 id="进阶Git-Flow"><a href="#进阶Git-Flow" class="headerlink" title="进阶Git Flow"></a>进阶Git Flow</h4><p><a href="http://www.ituring.com.cn/article/56870" target="_blank" rel="noopener">http://www.ituring.com.cn/article/56870</a></p>
<h4 id="书籍"><a href="#书籍" class="headerlink" title="书籍"></a>书籍</h4><p><a href="https://github.com/progit/progit" target="_blank" rel="noopener">https://github.com/progit/progit</a><br><a href="https://github.com/tiimgreen/github-cheat-sheet/blob/master/README.zh-cn.md" target="_blank" rel="noopener">https://github.com/tiimgreen/github-cheat-sheet/blob/master/README.zh-cn.md</a></p>
<h4 id="github克隆平台"><a href="#github克隆平台" class="headerlink" title="github克隆平台"></a>github克隆平台</h4><p><a href="https://github.com/gitlabhq/gitlabhq" target="_blank" rel="noopener">https://github.com/gitlabhq/gitlabhq</a></p>
<h4 id="工作总结"><a href="#工作总结" class="headerlink" title="工作总结"></a>工作总结</h4><p>开一个dev分支，进行开发， 然后切到Master先fetch然后megre，最后commit到远程 orgin/master</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git checkout -b snapshot --track origin/snapshot</span><br><span class="line">git branch -vv   # 映射分支版本</span><br><span class="line">git branch -v    # 所有分支版本</span><br><span class="line">git fetch origin # 更新远程分支</span><br><span class="line">git status       # check local files status</span><br><span class="line">git add .        # add all files</span><br><span class="line">git commit -m &quot;&quot; # commit</span><br><span class="line">git pull origin snapshot </span><br><span class="line">git push origin snapshot</span><br><span class="line"></span><br><span class="line">git config core.ignorecase false # 关闭忽略大小写变更</span><br><span class="line">git rm --cached logs/xx.log</span><br><span class="line">git reset --hard # 重置最近一次 git pull</span><br><span class="line">git clean -f     # clean untracked file</span><br><span class="line">git reflog master# check recet 5 operating record</span><br><span class="line">ls | xargs -P10 -I&#123;&#125; git -C &#123;&#125; pull</span><br></pre></td></tr></table></figure>
<blockquote>
<p><a href="http://justcoding.iteye.com/blog/1830388" target="_blank" rel="noopener">http://justcoding.iteye.com/blog/1830388</a><br>　　<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git reset --hard # 重置最近一次 git pull</span><br><span class="line">git push -f origin master</span><br></pre></td></tr></table></figure></p>
</blockquote>
<p>如果使用cygwin的话， 使用ssh证书之前需要执行操作<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">eval `ssh-agent`</span><br><span class="line">ssh-add ~/.ssh/rsa</span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>devops</tag>
      </tags>
  </entry>
  <entry>
    <title>JavaLib guava</title>
    <url>/2014/12/24/0012-JavaLib%20guava/</url>
    <content><![CDATA[<h4 id="Guava"><a href="#Guava" class="headerlink" title="Guava"></a>Guava</h4><blockquote>
<p><a href="https://github.com/google/guava" target="_blank" rel="noopener">https://github.com/google/guava</a><br><a href="https://github.com/jik1992/guavaDemo" target="_blank" rel="noopener">https://github.com/jik1992/guavaDemo</a></p>
</blockquote>
<h2 id="详细的中文文档"><a href="#详细的中文文档" class="headerlink" title="详细的中文文档"></a>详细的中文文档</h2><p><a href="https://www.gitbook.com/book/willnewii/google-guava/details" target="_blank" rel="noopener">https://www.gitbook.com/book/willnewii/google-guava/details</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">//缓存使用</span><br><span class="line">  private final static LoadingCache&lt;String, String&gt; cache = CacheBuilder.newBuilder()</span><br><span class="line">      .maximumSize(8000)</span><br><span class="line">      .expireAfterWrite(60, TimeUnit.SECONDS)</span><br><span class="line">      .refreshAfterWrite(60, TimeUnit.SECONDS)</span><br><span class="line">      .removalListener(new RemovalListener&lt;String, String&gt;() &#123;</span><br><span class="line">        @Override</span><br><span class="line">        public void onRemoval(RemovalNotification&lt;String, String&gt; removalNotification) &#123;</span><br><span class="line">          logger.warn(&quot;缓存超时被移除 &#123;&#125; &#123;&#125;&quot;, removalNotification.getFileKey(), removalNotification.val());</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">      .build(</span><br><span class="line">          new CacheLoader&lt;String, String&gt;() &#123;</span><br><span class="line">            @Override</span><br><span class="line">            public String load(String key) throws Exception &#123;</span><br><span class="line">              return &quot;&quot;;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">      );</span><br><span class="line"></span><br><span class="line">//基于令牌桶的限流算法</span><br><span class="line">  public static void testWithRateLimiter() &#123;  </span><br><span class="line">        Long start = System.currentTimeMillis();  </span><br><span class="line">        RateLimiter limiter = RateLimiter.create(2.0); // 每秒不超过10个任务被提交  </span><br><span class="line">        for (int i = 0; i &lt; 10; i++) &#123;  </span><br><span class="line">            limiter.acquire(); // 请求RateLimiter, 超过permits会被阻塞  </span><br><span class="line">            System.out.println(&quot;call execute..&quot; + i);  </span><br><span class="line">              </span><br><span class="line">        &#125;  </span><br><span class="line">        Long end = System.currentTimeMillis();            </span><br><span class="line">        System.out.println(end - start);         </span><br><span class="line">    &#125;  </span><br><span class="line"></span><br><span class="line">## 反射</span><br><span class="line">    Demo demo= Reflection.newProxy(Demo.class, new InvocationHandler() &#123;</span><br><span class="line">      @Override</span><br><span class="line">      public Object invoke(Object proxy, Method method, Object[] args) throws Throwable &#123;</span><br><span class="line">        System.out.println(&quot;xx&quot;);</span><br><span class="line">        return null;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">## 类路径扫描</span><br><span class="line"> ClassPath classpath = ClassPath.from(Demo.class.getClassLoader());</span><br><span class="line">    for (ClassPath.ClassInfo classInfo : classpath.getTopLevelClasses(&quot;zuoyun.me&quot;)) &#123;</span><br><span class="line">      System.out.println(JSON.toJSONString(classInfo));</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>集合 [collections] </li>
<li>缓存 [caching] </li>
<li>原生类型支持 [primitives support] </li>
<li>并发库 [concurrency libraries] </li>
<li>通用注解 [common annotations] </li>
<li>字符串处理 [string processing] </li>
<li>I/O </li>
</ul>
<p>Goolge在BigTable中就使用了BloomFilter，以避免在硬盘中寻找不存在的条目。<br>另外，用爬虫抓取网页时对网页url去重也需要用到BloomFilter。</p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>Distributed Guide ELKBStack</title>
    <url>/2014/12/25/0013-Distributed%20Guide%20ELKBStack/</url>
    <content><![CDATA[<p><a href="http://kibana.logstash.es/content/elasticsearch/performance/curator.html" target="_blank" rel="noopener">http://kibana.logstash.es/content/elasticsearch/performance/curator.html</a></p>
<h2 id="Dapper"><a href="#Dapper" class="headerlink" title="Dapper"></a>Dapper</h2><p><a href="http://static.googleusercontent.com/media/research.google.com/zh-CN//pubs/archive/36356.pdf" target="_blank" rel="noopener">http://static.googleusercontent.com/media/research.google.com/zh-CN//pubs/archive/36356.pdf</a></p>
<p><img src="http://img.sandseasoft.com/image/d/1d/eec4d7a8cf301951b06803cf58ef1.png" alt><br><img src="http://img.sandseasoft.com/image/a/09/f763260c13f1182a43a3fe65385ad.png" alt><br><img src="http://img.sandseasoft.com/image/a/86/37a4b036c32bc86686835497497ff.png" alt><br><img src="http://img.sandseasoft.com/image/1/5f/312493b3df09c4b9631879f1d15d0.png" alt></p>
<h2 id="kibana-grafana"><a href="#kibana-grafana" class="headerlink" title="kibana/grafana"></a>kibana/grafana</h2><p>概念<br>所有的图的 x 轴都是 timestamp 坐标，Y 轴是任意维度切分。可以按照需求自由设计，分组， 保存面板。</p>
<p>当然我们也可以引入 grafana 更加智能，可以自动发现字段，不需要手动查询配置，精简了一些不会太常用的功能。</p>
<h3 id="核心思考，关键词"><a href="#核心思考，关键词" class="headerlink" title="核心思考，关键词"></a>核心思考，关键词</h3><p>服务：重试，超时，心跳，熔断，监控，重启</p>
<p>运维：load/network/database/io</p>
<p>日志：审计日志、线上日志、后台日志、*nix操作日志</p>
<h3 id="相关资料"><a href="#相关资料" class="headerlink" title="相关资料"></a>相关资料</h3><table border><br><tr><br>        <td></td><br>        <td>官网</td><br>        <td>功能</td><br>        <td>时间</td><br>        <td>相关资料</td><br>    </tr><br>    <tr><br>        <td>elasticsearch</td><br>   <td><a href="https://www.elastic.co/products/elasticsearch" target="_blank" rel="noopener">https://www.elastic.co/products/elasticsearch</a></td><br><br><br>        <td>数据存储</td><br><td>2010</td><br>        <td></td><br>    </tr><br>    <tr><br>        <td>logstash</td><br>        <td><a href="https://www.elastic.co/products/logstash" target="_blank" rel="noopener">https://www.elastic.co/products/logstash</a></td><br>        <td>日志收集</td><br>        <td>2009</td><br>        <td></td><br>    </tr><br>    <tr><br>        <td>redis</td><br>        <td><a href="http://redis.io/" target="_blank" rel="noopener">http://redis.io/</a></td><br>        <td>队列</td><br>        <td>2009</td><br>        <td></td><br>    </tr><br>    <tr><br>        <td>kibana、grafana</td><br>        <td><a href="https://www.elastic.co/products/kibana" target="_blank" rel="noopener">https://www.elastic.co/products/kibana</a>    </td><br>        <td>查询面板</td><br>        <td>2009</td><br>        <td></td><br>    </tr><br>    <tr><br>        <td>collectd</td><br>        <td><a href="https://collectd.org/" target="_blank" rel="noopener">https://collectd.org/</a></td><br>        <td>系统信息收集</td><br>        <td>2006</td><br>        <td></td><br>    </tr><br>    <tr><br>        <td>supervisord</td><br>        <td><a href="http://supervisord.org/" target="_blank" rel="noopener">http://supervisord.org/</a></td><br>        <td>守护进程</td><br>        <td>2011</td><br>        <td></td><br>    </tr><br>    <tr><br>        <td>metrics</td><br>        <td><a href="https://github.com/dropwizard/metrics" target="_blank" rel="noopener">https://github.com/dropwizard/metrics</a>        </td><br>        <td>服务度量工具</td><br>        <td>2010</td><br>        <td></td><br>    </tr><br>    <tr><br>        <td>Hystrix</td><br>        <td><a href="https://github.com/Netflix/Hystrix" target="_blank" rel="noopener">https://github.com/Netflix/Hystrix</a></td><br>        <td>服务治理平台</td><br>        <td>2010</td><br>        <td></td><br>    </tr><br><br><br><br></table>

<h3 id="架构"><a href="#架构" class="headerlink" title="架构"></a>架构</h3><p><img src="http://img.sandseasoft.com/image/a/c8/83a7f99820a9df249b54229cbe8cd.png" alt><br><img src="http://img.sandseasoft.com/image/5/b4/4cd6202022b3b6e14abd2720ab743.png" alt></p>
<h3 id="Dapper-原理项目实现"><a href="#Dapper-原理项目实现" class="headerlink" title="Dapper 原理项目实现"></a>Dapper 原理项目实现</h3><p><a href="https://github.com/naver/pinpoint" target="_blank" rel="noopener">https://github.com/naver/pinpoint</a><br><a href="https://github.com/openzipkin/zipkin" target="_blank" rel="noopener">https://github.com/openzipkin/zipkin</a></p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>devops</tag>
        <tag>store</tag>
      </tags>
  </entry>
  <entry>
    <title>Guide Maven</title>
    <url>/2014/12/27/0014-Guide%20Maven/</url>
    <content><![CDATA[<h1 id="maven"><a href="#maven" class="headerlink" title="maven"></a>maven</h1><h2 id="相关库"><a href="#相关库" class="headerlink" title="相关库"></a>相关库</h2><ul>
<li><a href="http://maven.oschina.net/home.html" target="_blank" rel="noopener">http://maven.oschina.net/home.html</a></li>
<li><a href="http://maven.apache.org/" target="_blank" rel="noopener">http://maven.apache.org/</a></li>
<li><a href="http://maven.apache.org/plugins/index.html" target="_blank" rel="noopener">http://maven.apache.org/plugins/index.html</a></li>
</ul>
<h2 id="常用插件"><a href="#常用插件" class="headerlink" title="常用插件"></a>常用插件</h2><ul>
<li>maven-assembly-plugin</li>
<li>maven-resources-plugin</li>
<li>maven-jar-plugin</li>
<li>maven-deploy-plugin</li>
<li>maven-enforcer-plugin</li>
<li>tomcat </li>
<li>maven-compiler-plugin</li>
</ul>
<p>${log_dir}</p>
<h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#  debug -X   重新拉 jar -U</span><br><span class="line">mvn -X -U clean install </span><br><span class="line">#  查看依赖树</span><br><span class="line">mvn dependency:tree</span><br></pre></td></tr></table></figure>
<h1 id="模块划分"><a href="#模块划分" class="headerlink" title="模块划分"></a>模块划分</h1><ul>
<li>查找依赖的顺序是 本地-&gt;镜像-&gt;remote repo </li>
<li><p>坐标        </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;groupId&gt;com.raycloud.express&lt;/groupId&gt;</span><br><span class="line">&lt;artifactId&gt;quicloud-express-knowledge-base-parent&lt;/artifactId&gt;</span><br><span class="line">&lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>根配置</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"> &lt;modules&gt;</span><br><span class="line">     &lt;module&gt;schedule-task&lt;/module&gt;</span><br><span class="line">     &lt;module&gt;schedule-trigger&lt;/module&gt;</span><br><span class="line">     &lt;module&gt;tools&lt;/module&gt;</span><br><span class="line"> &lt;/modules&gt;</span><br><span class="line"></span><br><span class="line"> &lt;!--全局属性--&gt;</span><br><span class="line">&lt;properties&gt;</span><br><span class="line">     &lt;project.build.sourceEncoding&gt;utf-8&lt;/project.build.sourceEncoding&gt;</span><br><span class="line">    &lt;version.spring.orm&gt;3.2.4.RELEASE&lt;/version.spring.orm&gt;</span><br><span class="line"> &lt;/properties&gt;</span><br><span class="line"></span><br><span class="line"> &lt;!--项目介绍--&gt;</span><br><span class="line"> &lt;description&gt;58gxb 数据仓库&lt;/description&gt;</span><br><span class="line"></span><br><span class="line"> &lt;developers&gt;</span><br><span class="line">     &lt;developer&gt;</span><br><span class="line">         &lt;name&gt;左韵&lt;/name&gt;</span><br><span class="line">         &lt;email&gt;zuoyun@58gxb.com&lt;/email&gt;</span><br><span class="line">     &lt;/developer&gt;</span><br><span class="line"> &lt;/developers&gt;</span><br><span class="line"> &lt;organization&gt;</span><br><span class="line">     &lt;name&gt;伟基网络开发团队&lt;/name&gt;</span><br><span class="line">     &lt;url&gt;58gxb.com&lt;/url&gt;</span><br><span class="line"> &lt;/organization&gt;</span><br><span class="line"></span><br><span class="line"> &lt;!--全局仓库--&gt;</span><br><span class="line"> &lt;distributionManagement&gt;&lt;/distributionManagement&gt;</span><br><span class="line"> &lt;issueManagement&gt;&lt;/issueManagement&gt;</span><br><span class="line"> &lt;repositories&gt;&lt;/repositories&gt;</span><br><span class="line"> &lt;pluginRepositories&gt;&lt;/pluginRepositories&gt;</span><br><span class="line"></span><br><span class="line"> &lt;!--项目依赖--&gt;</span><br><span class="line"> &lt;dependencyManagement&gt;&lt;/dependencyManagement&gt;</span><br><span class="line"> &lt;build&gt;</span><br><span class="line">     &lt;pluginManagement&gt;&lt;/pluginManagement&gt;</span><br><span class="line"> &lt;/build&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>全局环境配置</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;dependencyManagement&gt;</span><br><span class="line">&lt;distributionManagement&gt;</span><br><span class="line">&lt;pluginManagement&gt;</span><br><span class="line">&lt;properties&gt;</span><br><span class="line">&lt;profiles&gt;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="远程发布"><a href="#远程发布" class="headerlink" title="远程发布"></a>远程发布</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!--tomcat7插件--&gt;</span><br><span class="line">&lt;plugin&gt;</span><br><span class="line">    &lt;groupId&gt;org.apache.tomcat.maven&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;tomcat7-maven-plugin&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;2.2&lt;/version&gt;</span><br><span class="line">    &lt;configuration&gt;</span><br><span class="line">        &lt;!--redeploy--&gt;</span><br><span class="line">        &lt;url&gt;http://localhost:8080/manager/text&lt;/url&gt;</span><br><span class="line">        &lt;server&gt;tomcat&lt;/server&gt;</span><br><span class="line">        &lt;username&gt;tomcat&lt;/username&gt;</span><br><span class="line">        &lt;password&gt;s3cret&lt;/password&gt;</span><br><span class="line">        &lt;!--本地run--&gt;</span><br><span class="line">        &lt;port&gt;8888&lt;/port&gt;</span><br><span class="line">        &lt;path&gt;/&lt;/path&gt;</span><br><span class="line">        &lt;uriEncoding&gt;utf-8&lt;/uriEncoding&gt;</span><br><span class="line">    &lt;/configuration&gt;</span><br><span class="line">&lt;/plugin&gt;</span><br></pre></td></tr></table></figure>
<h2 id="执行-shell-脚本"><a href="#执行-shell-脚本" class="headerlink" title="执行 shell 脚本"></a>执行 shell 脚本</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;plugin&gt;</span><br><span class="line">    &lt;artifactId&gt;exec-maven-plugin&lt;/artifactId&gt;</span><br><span class="line">    &lt;groupId&gt;org.codehaus.mojo&lt;/groupId&gt;</span><br><span class="line">    &lt;version&gt;1.3.2&lt;/version&gt;</span><br><span class="line">    &lt;executions&gt;</span><br><span class="line">        &lt;execution&gt;&lt;!-- Run our version calculation script --&gt;</span><br><span class="line">            &lt;id&gt;Version Calculation&lt;/id&gt;</span><br><span class="line">            &lt;phase&gt;generate-sources&lt;/phase&gt;</span><br><span class="line">            &lt;goals&gt;</span><br><span class="line">                &lt;goal&gt;exec&lt;/goal&gt;</span><br><span class="line">            &lt;/goals&gt;</span><br><span class="line">            &lt;configuration&gt;</span><br><span class="line">                &lt;!--&lt;executable&gt;echo &quot;hello world&quot;&lt;/executable&gt;--&gt;</span><br><span class="line">                &lt;executable&gt;$&#123;basedir&#125;/scripts/calculate-version.sh&lt;/executable&gt;</span><br><span class="line">            &lt;/configuration&gt;</span><br><span class="line">        &lt;/execution&gt;</span><br><span class="line">    &lt;/executions&gt;</span><br><span class="line">    &lt;configuration&gt;</span><br><span class="line">        &lt;executable&gt;echo&lt;/executable&gt;</span><br><span class="line">        &lt;!-- optional --&gt;</span><br><span class="line">        &lt;workingDirectory&gt;/tmp&lt;/workingDirectory&gt;</span><br><span class="line">        &lt;arguments&gt;</span><br><span class="line">            &lt;argument&gt;&quot;hello world&quot;&lt;/argument&gt;</span><br><span class="line">        &lt;/arguments&gt;</span><br><span class="line">    &lt;/configuration&gt;</span><br><span class="line">&lt;/plugin&gt;</span><br></pre></td></tr></table></figure>
<h2 id="deploy-file"><a href="#deploy-file" class="headerlink" title="deploy-file"></a>deploy-file</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mvn deploy:deploy-file  </span><br><span class="line">-DrepositoryId=raycloud  </span><br><span class="line">-Durl=http://maven.superboss.cc:8081/nexus/content/repositories/releases/ -DgroupId=com.raycloud.express </span><br><span class="line">-DartifactId=taobao-sdk </span><br><span class="line">-Dversion=20160127   </span><br><span class="line">-Dfile=taobao-sdk-java-auto_1453878322044-20160127.jar </span><br><span class="line">-Dsource=taobao-sdk-java-auto_1453878322044-20160127-source.jar</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">mvn install:install-file -Dfile=/root/build/guohai-report-server/guohai-report-server/lib/ojdbc7-12.1.0.2.0.jar -DgroupId=com.oracle -DartifactId=ojdbc7 -Dversion=12.1.0.2.0 -Dpackaging=jar</span><br></pre></td></tr></table></figure>
<h2 id="deploy"><a href="#deploy" class="headerlink" title="deploy"></a>deploy</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">    &lt;!--构建仓库--&gt;</span><br><span class="line">    &lt;distributionManagement&gt;</span><br><span class="line">        &lt;repository&gt;</span><br><span class="line">            &lt;id&gt;releases&lt;/id&gt;</span><br><span class="line">            &lt;name&gt;Local Nexus Repository&lt;/name&gt;</span><br><span class="line">            &lt;url&gt;http://172.16.1.14:8081/repository/maven-releases/&lt;/url&gt;</span><br><span class="line">        &lt;/repository&gt;</span><br><span class="line">        &lt;snapshotRepository&gt;</span><br><span class="line">            &lt;id&gt;snapshots&lt;/id&gt;</span><br><span class="line">            &lt;name&gt;Local Nexus Repository&lt;/name&gt;</span><br><span class="line">            &lt;url&gt;http://172.16.1.14:8081/repository/maven-snapshots/&lt;/url&gt;</span><br><span class="line">        &lt;/snapshotRepository&gt;</span><br><span class="line">    &lt;/distributionManagement&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//setting.xml 加上对应的权限登录</span><br><span class="line">  &lt;server&gt;</span><br><span class="line">      &lt;id&gt;releases&lt;/id&gt;</span><br><span class="line">      &lt;username&gt;admin&lt;/username&gt;</span><br><span class="line">      &lt;password&gt;admin123&lt;/password&gt;</span><br><span class="line">    &lt;/server&gt;</span><br><span class="line">  &lt;server&gt;</span><br><span class="line">      &lt;id&gt;snapshots&lt;/id&gt;</span><br><span class="line">      &lt;username&gt;admin&lt;/username&gt;</span><br><span class="line">      &lt;password&gt;admin123&lt;/password&gt;</span><br><span class="line">    &lt;/server&gt;</span><br></pre></td></tr></table></figure>
<p>常见问题</p>
<ul>
<li>自依赖/循环依赖</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">例二：</span><br><span class="line">-pl 构建制定模块</span><br><span class="line">当执行mvn clean install -pl accouont-email,account-persist后会得到如下几个模块：~email和~persist。</span><br><span class="line"></span><br><span class="line">例三：</span><br><span class="line">-am 选项可以同时构建所列模块的依赖模块。</span><br><span class="line">当执行mvn clean install -pl account-email -am 后会得到如下几个模块：~parent和~email。</span><br><span class="line"></span><br><span class="line">例四：</span><br><span class="line">-amd 选项可以同时构建依赖于所列模块的模块。</span><br><span class="line">mvn clean install -pl account-parent -amd 后会得到如下模块：~parent、~email和~persist。</span><br></pre></td></tr></table></figure>
<ol>
<li><a href="http://www.infoq.com/cn/maven-practice" target="_blank" rel="noopener">http://www.infoq.com/cn/maven-practice</a> </li>
<li><a href="http://juvenshun.iteye.com/blog/305865" target="_blank" rel="noopener">http://juvenshun.iteye.com/blog/305865</a></li>
</ol>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>Google Translation ToolKits</title>
    <url>/2014/12/28/0015-Google%20Translation%20ToolKits/</url>
    <content><![CDATA[<blockquote>
<p>一晚上时间把这个弄清楚了. 虽然界面很丑陋.. 暂时找不到其他好用的团队翻译软件了..</p>
</blockquote>
<h4 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h4><p>每个被翻译的文献有两个配置模块</p>
<ul>
<li>术语库(当前翻译的学术词汇的隐射表)</li>
<li>翻译记忆库(当前翻译的句子隐射表)</li>
</ul>
<p>前者是自己编辑维护的,后者是在翻译过程中生成的(或者使用TM),每个文档可以分别应用这两个模块的配置.</p>
<p>PS: 最反人类的是这个上传按钮…他对应 1,2,3分栏代表着分别上传三种不同模块的文件…自己去试就知道我讲的什么意思了…..<br><img src="http://img.sandseasoft.com/image/6/3e/10ebe02b79a4260896f891f0611ce.jpg" alt></p>
<p>其他的没什么难的了, 在使用的过程中很容易上手. 当然还有合作分享自己的记忆库和术语库功能就不一一描述.</p>
<h4 id="典型的术语库配置"><a href="#典型的术语库配置" class="headerlink" title="典型的术语库配置"></a>典型的术语库配置</h4><p><img src="http://img.sandseasoft.com/image/a/4f/4ed4ac44be6bc1c1a59da2c445c45.jpg" alt></p>
<p>完</p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>manage</tag>
      </tags>
  </entry>
  <entry>
    <title>Java-JVM/MissionControl</title>
    <url>/2014/12/31/0017-Java-JVM-MissionControl/</url>
    <content><![CDATA[<h1 id="查看-jvm-常用的命令"><a href="#查看-jvm-常用的命令" class="headerlink" title="查看 jvm 常用的命令"></a>查看 jvm 常用的命令</h1><ul>
<li>ps -ef| grep name （查询进程 pid）</li>
<li>netstate -tupln (查询端口占用)</li>
<li>jinfo  <pid> -lmvV（查询所有环境变量）<br><img src="http://pic002.cnblogs.com/images/2012/422908/2012073109465349.jpg" alt></pid></li>
</ul>
<h1 id="调整-jvm-参数"><a href="#调整-jvm-参数" class="headerlink" title="调整 jvm 参数"></a>调整 jvm 参数</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 生产模式</span><br><span class="line">-server </span><br><span class="line"># 堆空间，这两个相同</span><br><span class="line">-Xms1024M</span><br><span class="line">-Xmx1024M</span><br><span class="line"># (S0+S1+Eden)：Old，默认1</span><br><span class="line">-XX:NewRatio=1 </span><br><span class="line"># (S0+S1)：Eden，默认 8</span><br><span class="line">-XX:SurvivorRatio</span><br><span class="line"># 年轻带大小，可以不设置</span><br><span class="line">-XX:NewSize</span><br><span class="line"># 永久带大小，这里理论256M</span><br><span class="line">-XX:PermSize</span><br><span class="line">-XX:MaxPermSize</span><br></pre></td></tr></table></figure>
<p>一份 G1的样例<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-Xms1536m </span><br><span class="line">-Xmx1536m </span><br><span class="line">-XX:MaxPermSize=256m </span><br><span class="line">-XX:PermSize=300m </span><br><span class="line">-XX:+UseG1GC </span><br><span class="line">-XX:MaxGCPauseMillis=2000 </span><br><span class="line">-XX:G1HeapRegionSize=8 </span><br><span class="line">-XX:G1ReservePercent=15 </span><br><span class="line">-XX:NewRatio=3 </span><br><span class="line">-XX:SurvivorRatio=5 </span><br><span class="line">-XX:+AggressiveOpts </span><br><span class="line">-XX:+UseFastAccessorMethods </span><br><span class="line">-XX:+UseBiasedLocking </span><br><span class="line">-XX:+UseCompressedOops </span><br><span class="line">-XX:+HeapDumpOnOutOfMemoryError </span><br><span class="line">-server </span><br><span class="line">-verbose:gc </span><br><span class="line">-XX:+PrintGCTimeStamps </span><br><span class="line">-XX:+PrintGCDetails </span><br><span class="line">-XX:+PrintTenuringDistribution </span><br><span class="line">-Xloggc:logs/gc.log</span><br></pre></td></tr></table></figure></p>
<p><a href="http://blog.csdn.net/imzoer/article/details/8036699" target="_blank" rel="noopener">http://blog.csdn.net/imzoer/article/details/8036699</a><br><a href="http://www.blogjava.net/dongbule/archive/2011/08/21/356987.html" target="_blank" rel="noopener">http://www.blogjava.net/dongbule/archive/2011/08/21/356987.html</a><br><a href="http://www.cnblogs.com/lingiu/p/3866559.html" target="_blank" rel="noopener">http://www.cnblogs.com/lingiu/p/3866559.html</a><br><a href="http://iamzhongyong.iteye.com/blog/1333100" target="_blank" rel="noopener">http://iamzhongyong.iteye.com/blog/1333100</a><br><a href="http://www.cnblogs.com/lingiu/p/3866559.html" target="_blank" rel="noopener">http://www.cnblogs.com/lingiu/p/3866559.html</a></p>
<h1 id="查看运行时命令"><a href="#查看运行时命令" class="headerlink" title="查看运行时命令"></a>查看运行时命令</h1><ul>
<li>java –verbose:[gc|class]</li>
<li>jmap -heap pid (直接查看堆)</li>
<li>jmap -histo:live 15304 |more &gt; histo.log （查看 heap 内存, 触发gc）</li>
<li>jmap -permstat 15304 &gt; permstat.log（查看 no-heap 内存，较慢, stop the world!）</li>
<li>jmap -dump:format=b,file=mem.hprof <pid> （打印整个内存快照，分析，stop the world!）</pid></li>
<li>jstat -gcutil pid frequency (实时打印 gc 情况，单位内存所占百分比%)</li>
<li>jstat -[gccapacity|gcpermcapacity] pid frequency （单位次数）</li>
<li><p>jstat -class 21806 （类加载数量，所占PermGen空间信息）</p>
<h1 id="关于内存设置"><a href="#关于内存设置" class="headerlink" title="关于内存设置"></a>关于内存设置</h1></li>
<li><p>Heap size的值，其初始空间(即-Xms)是物理内存的1/64，最大空间(-Xmx)是物理内存的1/4。</p>
</li>
<li>gc一天最好不要超过48次，full GC频率 平均大约半小时1次</li>
<li>如果你发现每次GC后，Heap的剩余空间会是总空间的50%，这表示你的Heap处于健康状态。</li>
<li>许多Server端的Java程序每次GC后最好能有65%的剩余空间。</li>
<li>Server端JVM最好将-Xms和-Xmx设为相同值。</li>
<li>最好让-Xmn值约等于-Xmx的1/3</li>
<li>每10到20秒间运行一次GC，每次在半秒之内完成</li>
<li>-Xmn12m young代大小，sun推荐整个heap的3/8，太大会减少old的大小，引发较频繁 的major gc</li>
<li>-XX:+CMSClassUnloadingEnabled 允许perm区不够引发full gc时perm区的类卸载</li>
<li>java的内存=堆内存（Xmx）+ 方法区内存（MaxPermSize）+ 栈内存（Xss,包括虚拟机栈和本地方法栈）*线程数 + NIO direct memory + socket缓存区（receive37KB，send25KB）+ JNI代码 + 虚拟机和GC本身 </li>
<li>Minor GC执行的很快（小于50ms）</li>
<li>Minor GC执行的并不频繁（大概10秒一次）</li>
<li>Full GC执行的很快（小于1s）</li>
<li>Full GC执行的并不频繁（10分钟一次）<h1 id="查看-CPU-占用最高的线程"><a href="#查看-CPU-占用最高的线程" class="headerlink" title="查看 CPU 占用最高的线程"></a>查看 CPU 占用最高的线程</h1></li>
<li>一般的 jps -Vv 查找当前 pid</li>
<li>top -H -p pid 找到cpu 消费最高的线程的 pid</li>
<li>jstack -p pid |grep 线程 pid 转16进制</li>
<li><a href="https://github.com/jik1992/fork-jcpu.sh" target="_blank" rel="noopener">https://github.com/jik1992/fork-jcpu.sh</a></li>
</ul>
<h1 id="关于-PermGen-OOM"><a href="#关于-PermGen-OOM" class="headerlink" title="关于 PermGen OOM"></a>关于 PermGen OOM</h1><ol>
<li>pg 一般128-256m 之间已经完全够用，oom 导致可能由于过多的加载类，此类原因调大 PermGen 大小即可，后续趋于稳定。</li>
<li>还有一种可能DelegatingClassLoader不会回收，由于本地反射使用不当。或者YGC过于频繁,导致无法进入Perm空间的回收事件。</li>
<li>这里打开 verbose:class 发现一个问题，大量的通过 cglib 生成重复的对象，这些 class 加载是要吃 PermGen 的，基本上就是 ibaties 中使用到，所以内存问题基本确定在 batchinsert 的使用。优化使用事务，取消 ibaties 原型标签。</li>
</ol>
<p><img src="http://img.sandseasoft.com/image/d/1a/7ef151c4e7a932447d9e087cce1ca.png" alt></p>
<h1 id="远程监控VisualVM"><a href="#远程监控VisualVM" class="headerlink" title="远程监控VisualVM"></a>远程监控VisualVM</h1><p>PS, 两边版本一致。</p>
<h2 id="远程安装-jstatd"><a href="#远程安装-jstatd" class="headerlink" title="远程安装 jstatd"></a>远程安装 jstatd</h2><p>vim jstatd.policy<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">grant codebase &quot;file:$&#123;java.home&#125;/../lib/tools.jar&quot; &#123;</span><br><span class="line">   permission java.security.AllPermission;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nohup ./jstatd -J-Djava.security.policy=jstatd.policy -J-Djava.rmi.server.hostname=&lt;外网 IP&gt; &amp;</span><br></pre></td></tr></table></figure>
<p>最后进VisualVM直接add remote jstatd address</p>
<h2 id="tomcat-挂载-JMX"><a href="#tomcat-挂载-JMX" class="headerlink" title="tomcat 挂载 JMX"></a>tomcat 挂载 JMX</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">JAVA_OPTS=&apos;-Dcom.sun.management.jmxremote.port=8099 </span><br><span class="line">-Dcom.sun.management.jmxremote.ssl=false </span><br><span class="line">-Dcom.sun.management.jmxremote.authenticate=false </span><br><span class="line">-Djava.rmi.server.hostname=&lt;外网 IP&gt;&apos;</span><br></pre></td></tr></table></figure>
<p>最后进VisualVM直接add remote JMX address</p>
<p>PS 最后发现 Java8里面的 MissionControl 是可以兼容上面的方案的 :)</p>
<p><img src="http://img.sandseasoft.com/image/2/02/d487d0df49431b94cfb24836f6713.png" alt></p>
<h1 id="MAT"><a href="#MAT" class="headerlink" title="MAT"></a>MAT</h1><p>启动8G内存<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">open -a MemoryAnalyzer --args -vmargs -Xmx8g</span><br></pre></td></tr></table></figure></p>
<h1 id="文章收集"><a href="#文章收集" class="headerlink" title="文章收集"></a>文章收集</h1><p><a href="http://docs.oracle.com/javase/1.5.0/docs/tooldocs/share/jstat.html# gcutil_option" target="_blank" rel="noopener">Jstat</a></p>
<p><a href="http://zhaoyanblog.com/?s=G1%E5%9E%83%E5%9C%BE%E6%94%B6%E9%9B%86%E5%99%A8" target="_blank" rel="noopener">G1 GC实践</a></p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>Regular + Expression =Regex</title>
    <url>/2015/01/13/0018-Regular%20+%20Expression%20=Regex/</url>
    <content><![CDATA[<h4 id="0"><a href="#0" class="headerlink" title="0"></a>0</h4><p><strong><em>匹配</em></strong> &nbsp;&nbsp;&nbsp;\w \d \s</p>
<p><strong><em>边界</em></strong> &nbsp;&nbsp;&nbsp;  ^ $ \b </p>
<p><strong><em>量词</em></strong> &nbsp;&nbsp;&nbsp;  {1,2} {3} \d+ \d<em> \d?  .</em> (懒惰exp= \d??)(possive exp=.<em>+0)(贪心exp=.\</em>0)</p>
<p><strong><em>字符组</em></strong> &nbsp;&nbsp;&nbsp;  [0-9] [.-]</p>
<p><strong><em>文本标签</em></strong> &nbsp;&nbsp;&nbsp; ()  \1  $1</p>
<p><strong><em>全局配置</em></strong> &nbsp;&nbsp;&nbsp;  \g 忽略大小写   \i 匹配大写</p>
<p><strong><em>逻辑运算符</em></strong> &nbsp;&nbsp;&nbsp; | ^ 匹配字母大小写</p>
<p><strong><em>断言</em></strong><br><img src="http://p0.qhimg.com/t011c3f5504955269d3.png" alt><br><img src="http://img.sandseasoft.com/image/e/22/3512a79894ea2a719d09284785d8e.jpg" alt></p>
<ul>
<li>零宽lookahead ancyent (?=ma) or ancyent(?!ma)</li>
<li>零宽lookbehind (?&lt;=ancyent) marinert or ?&lt;!ancyent) marinert<blockquote>
<p>lookbehind 必须固定长度,不支持* + ? 且使用|逻辑时必须等长(无法判断回溯)</p>
</blockquote>
</li>
</ul>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>tools</tag>
      </tags>
  </entry>
  <entry>
    <title>Server Jmeter、JMH</title>
    <url>/2015/01/14/0019-Server%20Jmeter%E3%80%81JMH/</url>
    <content><![CDATA[<h1 id="Jmeter"><a href="#Jmeter" class="headerlink" title="Jmeter"></a>Jmeter</h1><p><a href="http://jmeter.apache.org/" target="_blank" rel="noopener">http://jmeter.apache.org/</a><br><a href="http://www.jmeter-plugins.org/" target="_blank" rel="noopener">http://www.jmeter-plugins.org/</a></p>
<h2 id="图书"><a href="#图书" class="headerlink" title="图书"></a>图书</h2><p>《零成本实现Web性能测试》</p>
<h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><h3 id="测试内容"><a href="#测试内容" class="headerlink" title="测试内容"></a>测试内容</h3><ul>
<li>Web</li>
<li>JUnit</li>
</ul>
<h3 id="组件概念"><a href="#组件概念" class="headerlink" title="组件概念"></a>组件概念</h3><ul>
<li>ThreadGroup  线程组，LoadTest</li>
<li>Timer  定时器， 定时执行</li>
<li>Configure 配置原件，配置整个请求全局变量</li>
<li>Simpler 采样器，发送请求</li>
<li>Listning 监听器，查看结果</li>
<li>Pre processors 前置处理器</li>
<li>Post processors 后置处理器</li>
</ul>
<h1 id="JMH"><a href="#JMH" class="headerlink" title="JMH"></a>JMH</h1><h2 id="概念-1"><a href="#概念-1" class="headerlink" title="概念"></a>概念</h2><p>基准测试不要使用循环，直接测试方法体。JIT 会对循环做优化<br><a href="http://www.importnew.com/12548.html" target="_blank" rel="noopener">http://www.importnew.com/12548.html</a><br><a href="http://openjdk.java.net/projects/code-tools/jmh/" target="_blank" rel="noopener">http://openjdk.java.net/projects/code-tools/jmh/</a><br><a href="http://www.open-open.com/lib/view/open1430537186459.html" target="_blank" rel="noopener">http://www.open-open.com/lib/view/open1430537186459.html</a></p>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p>pom.xml<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;junit&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;junit&lt;/artifactId&gt;</span><br><span class="line">    &lt;scope&gt;test&lt;/scope&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.openjdk.jmh&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;jmh-core&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;1.9.3&lt;/version&gt;</span><br><span class="line">    &lt;scope&gt;test&lt;/scope&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.openjdk.jmh&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;jmh-generator-annprocess&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;1.9.3&lt;/version&gt;</span><br><span class="line">    &lt;scope&gt;test&lt;/scope&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure></p>
<p>test<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@State(Scope.Benchmark)</span><br><span class="line">public class MetricsToolBenchmark &#123;</span><br><span class="line"></span><br><span class="line">  final static Logger LOGGER = LoggerFactory.getLogger(MetricsToolBenchmark.class);</span><br><span class="line"></span><br><span class="line">  @Benchmark</span><br><span class="line">  public void start1() throws InterruptedException &#123;</span><br><span class="line">      var x=1;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  public static void main(String[] args) throws RunnerException &#123;</span><br><span class="line">    Options opt = new OptionsBuilder()</span><br><span class="line">        .include(&quot;.*&quot; + MetricsToolBenchmark.class.getSimpleName() + &quot;.*&quot;)</span><br><span class="line">        .warmupIterations(3)</span><br><span class="line">        .measurementIterations(5)</span><br><span class="line">        .threads(4)</span><br><span class="line">        .forks(1)</span><br><span class="line">        .build();</span><br><span class="line"></span><br><span class="line">    new Runner(opt).run();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>manage</tag>
      </tags>
  </entry>
  <entry>
    <title>Learn FullStack</title>
    <url>/2015/02/26/0020-Learn%20FullStack/</url>
    <content><![CDATA[<h1 id="FullStack"><a href="#FullStack" class="headerlink" title="FullStack"></a>FullStack</h1><ol>
<li>JavaScript(CSS/HTML)，脚本语言控制浏览器的样式结构，同时对后端进行数据收发。</li>
<li>Nodejs，BackEnd 数据处理，与前端通信，渲染页面。</li>
<li>Linux，学会使用命令行操作 *nux 系统 ，包括文件上传/移动，软件包安装，进程管理。</li>
<li>SQL，Relation Database 数据库查询语法，分别有 DML/DDL/TCL/DCL四类，原语大概20条左右。</li>
<li>Redis，NoSql Database 数据库，实现了多种数据结构，需要熟悉使用场景，如 cache、session、queue、sub/pub。</li>
</ol>
<p>PS:<a href="https://github.com/phodal/growth-ebook" target="_blank" rel="noopener">https://github.com/phodal/growth-ebook</a></p>
<h1 id="习惯"><a href="#习惯" class="headerlink" title="习惯"></a>习惯</h1><h2 id="Github-使用技巧"><a href="#Github-使用技巧" class="headerlink" title="Github 使用技巧"></a>Github 使用技巧</h2><ul>
<li>看完所有 <a href="https://github.com/showcases" target="_blank" rel="noopener">https://github.com/showcases</a></li>
<li>每日Trending <a href="https://github.com/trending/html" target="_blank" rel="noopener">https://github.com/trending/html</a></li>
<li>不错的资料收集 Star</li>
</ul>
<h2 id="每日晨读"><a href="#每日晨读" class="headerlink" title="每日晨读"></a>每日晨读</h2><ul>
<li>看程序员思维 <a href="https://v2ex.com/" target="_blank" rel="noopener">https://v2ex.com/</a></li>
<li>看软件更新资讯 <a href="http://www.oschina.net/" target="_blank" rel="noopener">http://www.oschina.net/</a></li>
<li>看阿里云技术 <a href="https://yq.aliyun.com/" target="_blank" rel="noopener">https://yq.aliyun.com/</a></li>
<li>看安全相关 <a href="http://drops.wooyun.org/" target="_blank" rel="noopener">http://drops.wooyun.org/</a></li>
<li>看业界新闻 <a href="http://gold.xitu.io/#" target="_blank" rel="noopener">http://gold.xitu.io/#</a> /</li>
</ul>
<h2 id="你需要加强"><a href="#你需要加强" class="headerlink" title="你需要加强"></a>你需要加强</h2><ul>
<li>Git 的版本控制的知识<a href="https://github.com/oldratlee/translations/tree/master/git-workflows-and-tutorials" target="_blank" rel="noopener">1</a></li>
<li>maven 的模块化构建的知识<a href="http://wiki.jikexueyuan.com/project/maven/" target="_blank" rel="noopener">1</a><a href="http://www.infoq.com/cn/maven-practice" target="_blank" rel="noopener">2</a></li>
<li>Idea 的各种小 tips <a href="https://github.com/judasn/IntelliJ-IDEA-Tutorial/" target="_blank" rel="noopener">1</a></li>
<li>Spring 相关的使用</li>
<li>Java 高级并发 api 接口 </li>
<li>SQL 编写，熟悉数据库DDL，DML 相关语法和索引构建技巧，以及防止 SQL 注入的基本常识</li>
</ul>
<h2 id="learning-roadmap"><a href="#learning-roadmap" class="headerlink" title="learning roadmap"></a>learning roadmap</h2><h3 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h3><ul>
<li>学习 ubuntu</li>
<li>学习 shadowsocks/fiddler4</li>
<li>学习 github</li>
<li>学习 atom</li>
<li>学习 chrome<h3 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h3></li>
<li>学习 css、html</li>
<li>学习 JavaScript/DOM/Ajax</li>
<li>学习 http/tcp 协议</li>
<li>学习 nodejs/npm/express</li>
<li>学习 mysql、redis<h3 id="框架"><a href="#框架" class="headerlink" title="框架"></a>框架</h3></li>
<li>学习 cordova、electron</li>
<li>学习 bootstrap、iframework7</li>
<li>学习 jquery、zetop</li>
<li>学习 vuejs<h3 id="整体能力"><a href="#整体能力" class="headerlink" title="整体能力"></a>整体能力</h3></li>
<li>学习 nginx</li>
<li>学习 阿里云、七牛服务</li>
<li>学习 freecodecamp</li>
</ul>
<p>摘抄一段评论, 一张图, 原文, 自省</p>
<p><img src="http://img.sandseasoft.com/image/7/da/4b6cb1599cf270f5cca3acd6d769d.png" alt></p>
<blockquote>
<p>同意作者观点，全栈在设计或者管理层面很容易，拉一个资深架构出来很大程度上能全栈</p>
</blockquote>
<blockquote>
<p>但是要让一个开发或者具体技术负责人全栈可不是开玩笑的，不要说涉及的知识深度，光是工作量也不现实，即便组一个全栈工程师团队，结果也未必强过角色工程师团队</p>
</blockquote>
<blockquote>
<p>其实企业对全栈的追求无非源于很多人不敬业的表现，就像我非常反感那种张嘴就说“我不会”或者“做不到”的下属，其实大部分的时候肯用心研究都是能解决的，只是很多人不愿意学习新的东西，不喜欢接触自己不熟悉的领域，这样停滞不前，就是全栈的对立面。</p>
</blockquote>
<p><a href="http://www.infoq.com/cn/news/2015/09/Stack-Ops" target="_blank" rel="noopener">http://www.infoq.com/cn/news/2015/09/Stack-Ops</a><br><a href="https://blog.growth.supply/the-full-stack-developer-is-a-myth-4e3fb9c25867" target="_blank" rel="noopener">https://blog.growth.supply/the-full-stack-developer-is-a-myth-4e3fb9c25867</a></p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>manage</tag>
      </tags>
  </entry>
  <entry>
    <title>Awesome-mac开发相关</title>
    <url>/2015/02/26/0021-Awesome-mac%E5%BC%80%E5%8F%91%E7%9B%B8%E5%85%B3/</url>
    <content><![CDATA[<h1 id="常用软件推荐"><a href="#常用软件推荐" class="headerlink" title="常用软件推荐"></a>常用软件推荐</h1><h2 id="办公"><a href="#办公" class="headerlink" title="办公"></a>办公</h2><ul>
<li>SogouInput(输入法)</li>
<li>MacDown( markdown 编辑器)</li>
<li>Mail(邮件管理)</li>
<li>NewsFlow(RSS 订阅)</li>
<li>Chrome(浏览器)</li>
<li>Office16(office办公全套49/年)</li>
</ul>
<h2 id="开发"><a href="#开发" class="headerlink" title="开发"></a>开发</h2><ul>
<li>SublimeText/Atom</li>
<li>iTerm/Tmux/oh-my-zsh/SecureCRT</li>
<li>Navicat Premium</li>
<li>Intellij Idea14/Xcode</li>
<li>SourceTree(Git GUI)</li>
<li>ParallelsDesktop(虚拟机)</li>
<li>RemoteDesktopConnection(远程桌面连接)</li>
</ul>
<h2 id="生活"><a href="#生活" class="headerlink" title="生活"></a>生活</h2><ul>
<li>NeteaseMusic</li>
<li>YoudaoNote/EverNote</li>
<li>Kindle</li>
<li>Thunder</li>
<li>Shadowsocks(翻墙)</li>
<li>WunderList/Fantastical2(TODOTools/Calender)</li>
<li>QQ</li>
<li>CleanMyMac3(mac 垃圾清理)</li>
</ul>
<h2 id="黑科技"><a href="#黑科技" class="headerlink" title="黑科技"></a>黑科技</h2><ul>
<li>Caffeine(防休眠)</li>
<li>Bartender(菜单栏管理)</li>
<li>PopClip(难以描述…)</li>
<li>Alfred2(超级搜索)</li>
<li>Moom(窗口布局管理)</li>
</ul>
<h3 id="其他问题"><a href="#其他问题" class="headerlink" title="其他问题"></a>其他问题</h3><ul>
<li><p>由于无法使用80端口进行联调， 找到一个方案： 搞一个虚拟机装一个findler，修改host转发联调，不错。</p>
</li>
<li><p>gem 用不了, gem install rails 报错   openssl:ssl:sslerror   read would </p>
</li>
</ul>
<p>openssl 没有证书,   贴一下<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cat /Library/Keychains/System.keychain &gt; 11</span><br><span class="line">cat /System/Library/Keychains/SystemRootCertificates.keychain &gt; 11</span><br><span class="line">cat 11&gt;&gt;/usr/local/etc/openssl/cert.pem</span><br></pre></td></tr></table></figure></p>
<p>可以了</p>
<ul>
<li>网络<br><img src="http://img.sandseasoft.com/image/3/8c/0baf1f2e9d77b9213d634fc7cdb5b.png" alt><br><img src="http://img.sandseasoft.com/image/5/27/ca38e9e701636fed5f36bdb6691cc.png" alt></li>
</ul>
<h3 id="80转发"><a href="#80转发" class="headerlink" title="80转发"></a>80转发</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo -i </span><br><span class="line"></span><br><span class="line">/etc/pf.anchors/vbox</span><br><span class="line"></span><br><span class="line">rdr pass on lo0 inet proto tcp from any to any port 80 -&gt; 127.0.0.1 port 8080</span><br><span class="line">rdr pass on lo0 inet proto tcp from any to any port 22 -&gt; 127.0.0.1 port 8022</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">/etc/pf.conf </span><br><span class="line">scrub-anchor &quot;com.apple/*&quot;</span><br><span class="line">nat-anchor &quot;com.apple/*&quot;</span><br><span class="line">rdr-anchor &quot;com.apple/*&quot;</span><br><span class="line">rdr-anchor &quot;vbox&quot;  # 添加</span><br><span class="line">dummynet-anchor &quot;com.apple/*&quot;</span><br><span class="line">anchor &quot;com.apple/*&quot;</span><br><span class="line">load anchor &quot;com.apple&quot; from &quot;/etc/pf.anchors/com.apple&quot;</span><br><span class="line">load anchor &quot;vbox&quot; from &quot;/etc/pf.anchors/vbox&quot;  # 添加</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 验证</span><br><span class="line">pfctl -ef /etc/pf.conf</span><br><span class="line"></span><br><span class="line">/System/Library/LaunchDaemons/com.apple.pfctl.plist</span><br></pre></td></tr></table></figure>
<p>添加<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;string&gt;pfctl&lt;/string&gt;</span><br><span class="line">&lt;string&gt;-e&lt;/string&gt;  # 这一句</span><br><span class="line">&lt;string&gt;-f&lt;/string&gt; </span><br><span class="line">&lt;string&gt;/etc/pf.conf&lt;/string&gt;</span><br></pre></td></tr></table></figure></p>
<h2 id="整合-iterm2和-lrzsz"><a href="#整合-iterm2和-lrzsz" class="headerlink" title="整合 iterm2和 lrzsz"></a>整合 iterm2和 lrzsz</h2><p><a href="https://github.com/mmastrac/iterm2-zmodem" target="_blank" rel="noopener">https://github.com/mmastrac/iterm2-zmodem</a></p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>about</tag>
      </tags>
  </entry>
  <entry>
    <title>Hybird Framwork ionic</title>
    <url>/2015/03/09/0022-Hybird%20Framwork%20ionic/</url>
    <content><![CDATA[<blockquote>
<p>mac 搭建 ioinc 很方便… 比 win 系舒服多了.<br>一定要翻墙,不然一下操作充满荆棘,可以说不可能完成</p>
</blockquote>
<h4 id="基础环境安装"><a href="#基础环境安装" class="headerlink" title="基础环境安装"></a>基础环境安装</h4><h5 id="java-xcode自行安装"><a href="#java-xcode自行安装" class="headerlink" title="java/xcode自行安装"></a>java/xcode自行安装</h5><p>略</p>
<h5 id="homebrew"><a href="#homebrew" class="headerlink" title="homebrew"></a>homebrew</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;</span><br></pre></td></tr></table></figure>
<h5 id="ant"><a href="#ant" class="headerlink" title="ant"></a>ant</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">brew install ant</span><br></pre></td></tr></table></figure>
<h5 id="nodejs-gulp"><a href="#nodejs-gulp" class="headerlink" title="nodejs/gulp"></a>nodejs/gulp</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">brew install nodejs</span><br><span class="line">brew install gulp </span><br><span class="line">npm install gulp-connect</span><br></pre></td></tr></table></figure>
<h5 id="ionic-cordova-安装"><a href="#ionic-cordova-安装" class="headerlink" title="ionic/cordova 安装"></a>ionic/cordova 安装</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install -g cordova ionic</span><br></pre></td></tr></table></figure>
<h5 id="android-sdk-编译环境"><a href="#android-sdk-编译环境" class="headerlink" title="android-sdk 编译环境"></a>android-sdk 编译环境</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">brew install android-sdk</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">android      # 调取 gui, 安装 tools, api 自选(api21/pt/bt)</span><br><span class="line">android sdk</span><br><span class="line">android avd  # 增加一个虚拟机帮助 emulate</span><br><span class="line">adb version  # 检查安装是否成功</span><br></pre></td></tr></table></figure>
<h4 id="ios-编译环境"><a href="#ios-编译环境" class="headerlink" title="ios 编译环境"></a>ios 编译环境</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install -g ios-sim</span><br></pre></td></tr></table></figure>
<h5 id="ionic-使用"><a href="#ionic-使用" class="headerlink" title="ionic 使用"></a>ionic 使用</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ionic start myApp blank      # 空白模板</span><br><span class="line">ionic start myApp tabs		 # tab</span><br><span class="line">ionic start myApp sidemenu	 # sidemenu 侧滑版</span><br><span class="line">ionic login 				 # 登陆</span><br><span class="line">ionic upload				 # 上传</span><br></pre></td></tr></table></figure>
<h5 id="ionic打包"><a href="#ionic打包" class="headerlink" title="ionic打包"></a>ionic打包</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ionic platform add ios/android/brower</span><br><span class="line">ionic build ios/android/browser</span><br><span class="line">ionic emulate ios/android/browser</span><br><span class="line">ionic run andoird # 真机测试</span><br><span class="line">ionic serve # 也可以先在浏览器里看效果，如果chrome安装了livereload插件，可以实现实时变化</span><br></pre></td></tr></table></figure>
<p>ps: 编译 android 选择版本<br>myApp 下有project.properties  配置 target=android-xx 选择对应版本</p>
<p>参考文章:</p>
<p><a href="http://www.tuicool.com/articles/veYBNzr" target="_blank" rel="noopener">http://www.tuicool.com/articles/veYBNzr</a><br><a href="http://haomou.net/2014/10/06/2014_ionic_learn/" target="_blank" rel="noopener">http://haomou.net/2014/10/06/2014_ionic_learn/</a></p>
<h6 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h6><p>change mirror<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http://npm.taobao.org/</span><br><span class="line">http://cnpmjs.org/</span><br></pre></td></tr></table></figure></p>
<p>cvs<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install -g n</span><br><span class="line">n use 0.12</span><br><span class="line">n use 0.10.38</span><br><span class="line">n</span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>nodejs</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux vim 归档</title>
    <url>/2015/04/11/0023-Linux%20vim%20%E5%BD%92%E6%A1%A3/</url>
    <content><![CDATA[<p>这个不会用真的蛋疼, 常用的命令归结如下:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 退出相关</span><br><span class="line">wq		保存退出</span><br><span class="line">:q!		不保存退出</span><br><span class="line"></span><br><span class="line"># 编辑相关</span><br><span class="line">dd		删除一行</span><br><span class="line">x		删除后一个字符</span><br><span class="line">X		删除前一个字符</span><br><span class="line">[n]yy	复制 n 行  </span><br><span class="line">pp              粘贴</span><br><span class="line"></span><br><span class="line"># 移动相关</span><br><span class="line">^		移动行头</span><br><span class="line">$		移动行尾</span><br><span class="line">w		移动当下一个word头</span><br><span class="line">f		向下翻页</span><br><span class="line">b		向上翻页</span><br><span class="line">gg/GG           全文头，全文尾</span><br><span class="line">dG              删除所有</span><br><span class="line"></span><br><span class="line"># 查询相关</span><br><span class="line">//xxx	查询任意关键字</span><br><span class="line">n		匹配下一个</span><br><span class="line">N		匹配上一个</span><br></pre></td></tr></table></figure>
<p><img src="http://img.sandseasoft.com/image/1/07/a6944cd955f2b14e11c80714db9a4.png" alt></p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>devops</tag>
      </tags>
  </entry>
  <entry>
    <title>字符动画</title>
    <url>/2015/04/11/0024-%E5%AD%97%E7%AC%A6%E5%8A%A8%E7%94%BB/</url>
    <content><![CDATA[<p>字符动画</p>
<ol>
<li>用「Kmplayer」的「画面：高级捕获」把视频传换成图片.</li>
<li>用「Image2Html」把图片转换成字符串存为「Html」格式</li>
<li>把「Html」文件用「All_Office」转换成「Doc」</li>
<li>把转成好的「Doc」文件合并</li>
<li>设置好「行距」「间距」「页面设置」，保证每一页刚好一张图.</li>
<li>添加宏</li>
<li>运行宏，间隔翻页.</li>
<li>Over..<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Private Declare Sub Sleep Lib &quot;kernel32&quot; (ByVal dwMilliseconds As Long)</span><br><span class="line">Sub Play()</span><br><span class="line">Selection.HomeKey Unit:=wdStory</span><br><span class="line">Pages = ActiveDocument.BuiltInDocumentProperties(wdPropertyPages)</span><br><span class="line">For i = 1 To Pages - 1</span><br><span class="line">Selection.GoTo What:=wdGoToPage, Which:=wdGoToNext, Count:=1, Name:=&quot;&quot; &apos;</span><br><span class="line">Application.Browser.Next</span><br><span class="line">Sleep (85)   &apos;间隔时间，安需要修改</span><br><span class="line">Next i</span><br><span class="line">End Sub</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>PS：这种搞法好的吃内存吃机器…差一点点就完全不能看…重点在那个「字符画转换软件」…这个软件直接决定效果..（做教程那个人好精明，把软件名遮住了，所以要做出那样的效果要那种程度的软件而且要转多久我都没底..）</p>
<p>乐意自己试试，我捡了好多Word排版的知识回来了..玩不下去了，要睡觉..Zz..<br>好好学习..考试顺利..<br>附：<br>「Kmplayer」：<a href="http://www.xiazaiba.com/html/10.html" target="_blank" rel="noopener">http://www.xiazaiba.com/html/10.html</a><br>「Image2Html」：<a href="http://www.skycn.com/soft/54406.html" target="_blank" rel="noopener">http://www.skycn.com/soft/54406.html</a><br>「All_Office」：<a href="http://www.greenxf.com/soft/14774.html" target="_blank" rel="noopener">http://www.greenxf.com/soft/14774.html</a></p>
<p>另一种纯字符集黑白的效果更好，软件如下地址，方法同理：<br><a href="http://tieba.baidu.com/p/681647757" target="_blank" rel="noopener">http://tieba.baidu.com/p/681647757</a> </p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>about</tag>
      </tags>
  </entry>
  <entry>
    <title>计算机通讯原理与系统</title>
    <url>/2015/04/11/0025-%E8%AE%A1%E7%AE%97%E6%9C%BA%E9%80%9A%E8%AE%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<p><img src="http://img.sandseasoft.com/20180705153078337885292.png" alt="20180705153078337885292.png"></p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>about</tag>
      </tags>
  </entry>
  <entry>
    <title>中文简历-左韵-软件开发工程师</title>
    <url>/2015/04/11/0026-%E4%B8%AD%E6%96%87%E7%AE%80%E5%8E%86-%E5%B7%A6%E9%9F%B5-%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88/</url>
    <content><![CDATA[<p><img src="http://img.sandseasoft.com/image/0/56/b21f081b66642c2c7b07acf72f320.png" alt></p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>about</tag>
      </tags>
  </entry>
  <entry>
    <title>SQL MySQL archive</title>
    <url>/2015/04/11/0027-SQL%20MySQL%20archive/</url>
    <content><![CDATA[<h4 id="docker-quick-start-image"><a href="#docker-quick-start-image" class="headerlink" title="docker quick start image"></a>docker quick start image</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker run --name mysql-demo  -e MYSQL_ROOT_PASSWORD=abcd -p 3306:3306 -d mysql</span><br></pre></td></tr></table></figure>
<h4 id="登陆"><a href="#登陆" class="headerlink" title="登陆"></a>登陆</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql -h www.rds.xxx -P 3386 -u root -p  </span><br><span class="line">use database;</span><br><span class="line">charset utf8;</span><br><span class="line">show tables;</span><br></pre></td></tr></table></figure>
<h4 id="备份"><a href="#备份" class="headerlink" title="备份"></a>备份</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 导出</span><br><span class="line">mysqldump [params] db|gip &gt; db.sql</span><br><span class="line"># 导入</span><br><span class="line">source db.sql</span><br><span class="line"></span><br><span class="line"># 导出 csv</span><br><span class="line">select * from test_info   </span><br><span class="line">into outfile &apos;/tmp/test.csv&apos;   </span><br><span class="line">fields terminated by &apos;,&apos; optionally enclosed by &apos;&quot;&apos; escaped by &apos;&quot;&apos;   </span><br><span class="line">lines terminated by &apos;\r\n&apos;; </span><br><span class="line"></span><br><span class="line"># 导入 csv</span><br><span class="line">load data infile &apos;/tmp/test.csv&apos;   </span><br><span class="line">into table test_info    </span><br><span class="line">fields terminated by &apos;,&apos;  optionally enclosed by &apos;&quot;&apos; escaped by &apos;&quot;&apos;   </span><br><span class="line">lines terminated by &apos;\r\n&apos;;</span><br></pre></td></tr></table></figure>
<h4 id="查看当前-sql-连接"><a href="#查看当前-sql-连接" class="headerlink" title="查看当前 sql 连接"></a>查看当前 sql 连接</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">show processlist;</span><br><span class="line"></span><br><span class="line">SELECT * from information_schema.`PROCESSLIST`  where  COMMAND !=&apos;Sleep&apos; and TIME &gt;0</span><br></pre></td></tr></table></figure>
<h4 id="查看当前-cpu-占用"><a href="#查看当前-cpu-占用" class="headerlink" title="查看当前 cpu 占用"></a>查看当前 cpu 占用</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select count(*), host, sum(rows_read), sum(time), info from information_schema.`PROCESSLIST` where length(`state`) &gt; 0 group by SUBSTR(host, 1, 14)order by time desc limit 10</span><br></pre></td></tr></table></figure>
<h4 id="查看事务状态"><a href="#查看事务状态" class="headerlink" title="查看事务状态"></a>查看事务状态</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select @@tx_isolation;</span><br><span class="line">SELECT * FROM INFORMATION_SCHEMA.INNODB_TRX;</span><br><span class="line">select * from information_schema.INNODB_LOCKS;</span><br><span class="line">select * from information_schema.INNODB_LOCK_WAITS;</span><br><span class="line"></span><br><span class="line">kill 9930577;</span><br></pre></td></tr></table></figure>
<h4 id="查看数据库状态"><a href="#查看数据库状态" class="headerlink" title="查看数据库状态"></a>查看数据库状态</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">show indexs database;</span><br><span class="line">show index from &lt;table&gt;</span><br><span class="line">desc database;</span><br><span class="line">show table status from db [like &quot;xxx%&quot;]</span><br></pre></td></tr></table></figure>
<h4 id="查看语句解释状态"><a href="#查看语句解释状态" class="headerlink" title="查看语句解释状态"></a>查看语句解释状态</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">explain </span><br><span class="line">select * from database;</span><br></pre></td></tr></table></figure>
<h4 id="增加字段-索引"><a href="#增加字段-索引" class="headerlink" title="增加字段/索引"></a>增加字段/索引</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 添加字段</span><br><span class="line">ALTER TABLE dmj_item ADD `platform` VARCHAR(12) DEFAULT NULL COMMENT &apos;comment&apos;;</span><br><span class="line"># UNIQUE(唯一索引)</span><br><span class="line">ALTER TABLE `table_name` ADD UNIQUE (`column`) </span><br><span class="line"># INDEX(普通索引)</span><br><span class="line">ALTER TABLE `table_name` ADD INDEX index_name (`column`) </span><br><span class="line"># FULLTEXT(全文索引)</span><br><span class="line">ALTER TABLE `table_name` ADD FULLTEXT (`column`) </span><br><span class="line">#  组合索引</span><br><span class="line">ALTER TABLE `table_name` ADD INDEX index_name (`column1`, `column2`, `column3`)</span><br></pre></td></tr></table></figure>
<h4 id="数据迁移"><a href="#数据迁移" class="headerlink" title="数据迁移"></a>数据迁移</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#  大量并发下批量插入 关闭自动提交，否则可能出现大量死锁</span><br><span class="line">SET autocommit=0;</span><br><span class="line">#  ignore 参数判断主键，唯一主键是否相同，有一则条件符合插入失败</span><br><span class="line">#  组合唯一主键第一个键自动转key</span><br><span class="line">INSERT IGNORE DELAYED INTO kb_prop_word_label (</span><br><span class="line">	`id`,</span><br><span class="line">	`cid`,</span><br><span class="line">	`fp`,</span><br><span class="line">	`word`,</span><br><span class="line">	`prop_name`,</span><br><span class="line">	`source`,</span><br><span class="line">	`count`,</span><br><span class="line">	`status`,</span><br><span class="line">	`editor`,</span><br><span class="line">	`add_time`,</span><br><span class="line">	`upd_time`</span><br><span class="line">) SELECT</span><br><span class="line">	  p.id,</span><br><span class="line">	  p.cid,</span><br><span class="line">	  p.fp,</span><br><span class="line">	  &quot;&quot;    AS word,</span><br><span class="line">	  &quot;&quot;    AS `prop_name`,</span><br><span class="line">	  1     AS `source`,</span><br><span class="line">	  1     AS `count`,</span><br><span class="line">	  1     AS `status`,</span><br><span class="line">	  &quot;&quot;    AS `editor`,</span><br><span class="line">	  now() AS `add_time`,</span><br><span class="line">	  now() AS `upd_time`</span><br><span class="line">  FROM</span><br><span class="line">	  kb_obj_prop_word p</span><br><span class="line">  where</span><br><span class="line">  p.id between 100000 and 200000</span><br><span class="line">on duplicate key update upd_time=values(`upd_time`)</span><br><span class="line"># ⬆️ 如果重复，只更新匹配字段</span><br><span class="line"># ⬆️ 由于 select 翻页过慢，用 between 代替 limit 走主键索引翻页</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">## 左链表查询，右边可为null</span><br><span class="line">select * from a left join b on a.id=b.id</span><br><span class="line">## 右链表查询，左边可为null</span><br><span class="line">select * from a right join b on a.id=b.id</span><br><span class="line">## 内联表两边都不能为 null</span><br><span class="line">select * from a inner join b on a.id=b.id</span><br></pre></td></tr></table></figure>
<h3 id="查看物理文件位置"><a href="#查看物理文件位置" class="headerlink" title="查看物理文件位置"></a>查看物理文件位置</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">show global variables like &quot;%datadir%&quot;;</span><br><span class="line">mysql --help | grep my.cnf;</span><br></pre></td></tr></table></figure>
<h3 id="设置配置"><a href="#设置配置" class="headerlink" title="设置配置"></a>设置配置</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cp /usr/local/opt/mysql/support-files/my-default.cnf /etc/my.cnf</span><br></pre></td></tr></table></figure>
<h4 id="陷阱"><a href="#陷阱" class="headerlink" title="陷阱"></a>陷阱</h4><p>0x00<br><img src="http://img.sandseasoft.com/image/e/03/7886af0d9d930ee621f712e4ebe43.png" alt><br><img src="http://img.sandseasoft.com/image/c/2f/bab17f82be4d64b98854c4637851d.png" alt></p>
<p>0x01<br>大并发的 batchinsert 操作是不会锁表的，锁表可能就是 auto_increment</p>
<p>0x02<br>limit 性能很差，越翻页到后面越慢，用 between  and 代替</p>
<p>0x03<br>truncate table 操作会导致 client datasource 找不到这张表， 因为表重建了。</p>
<h4 id="习惯"><a href="#习惯" class="headerlink" title="习惯"></a>习惯</h4><p>where 紧跟着 select 后面，用（）包起来，然后在做查询<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">INSERT overwrite TABLE kb_obj_prop_word_all partition (dt=&apos;20151120&apos;)</span><br><span class="line">select a.id,a.cid,a.org_pid,b.id as prop_id,a.fp from </span><br><span class="line">(</span><br><span class="line">select id,cid,org_pid,fp from kb_obj_prop_word where  dt=&apos;20151120&apos;  ) a </span><br><span class="line">join (</span><br><span class="line">select id from kb_obj_prop_split where  dt=&apos;20151120&apos; group by id) b on(a.org_pid = b.id)</span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>store</tag>
      </tags>
  </entry>
  <entry>
    <title>Archive 线上问题</title>
    <url>/2015/04/15/0028-Archive%20%E7%BA%BF%E4%B8%8A%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<h3 id="基本流程"><a href="#基本流程" class="headerlink" title="基本流程"></a>基本流程</h3><p><img src="http://img.sandseasoft.com/image/b/39/6f77930084ecd65ccea488a8d8ce5.png" alt></p>
<blockquote>
</blockquote>
<p>BUG/故障/优化/需求</p>
<h4 id="JVM-内存泄露"><a href="#JVM-内存泄露" class="headerlink" title="JVM 内存泄露"></a>JVM 内存泄露</h4><ul>
<li>临时解决:重启服务器</li>
<li>排查方法:查看 jvm 日志</li>
<li>事故原因:spring 委派@resource 过多存储在Perm, 导致频繁 FGC, 最终 oom</li>
<li>事后解决:扩充perm区 至 256m</li>
</ul>
<h5 id="Solr-内存泄露"><a href="#Solr-内存泄露" class="headerlink" title="Solr 内存泄露"></a>Solr 内存泄露</h5><ul>
<li>临时解决:重启solr</li>
<li>排查方法:查看 solr 日志</li>
<li>事故原因:<ol>
<li>solr 订单过多</li>
<li>出现错误的query 语句对全表扫描,  Integer.Max</li>
</ol>
</li>
<li>事后解决: <ol>
<li>迁移3个月外的订单</li>
<li>扩容 jvm 内存</li>
</ol>
</li>
</ul>
<h5 id="ECS-异常"><a href="#ECS-异常" class="headerlink" title="ECS 异常"></a>ECS 异常</h5><ul>
<li>临时解决:</li>
<li>排查方法: 查看 聚石塔ECS 服务器状态</li>
<li>事故原因:IOPS封顶, 由于高读写导致, 主要由于 slowsql</li>
<li>事后解决: <ol>
<li>升级 iops 扩容包,临时扩容, 高峰过后再升级 ECS</li>
<li>优化 slowsql, 减少未走索引的链接 explain</li>
</ol>
</li>
<li>备注:<ol>
<li>默认中等机型1200/店长用4000/最高6000</li>
<li>iops 达到80%需要注意, 当系统响应慢时用户越点越多,容易雪崩</li>
<li>压力过大可以[服务降级]或者[用户限流]</li>
<li>配合鹰眼监控服务器状态,聚石塔短信通知</li>
</ol>
</li>
</ul>
<h5 id="mysql连接数"><a href="#mysql连接数" class="headerlink" title="mysql连接数"></a>mysql连接数</h5><ul>
<li>临时解决:重启 tomcat, 释放 mysql 链接</li>
<li>排查方法:查看 show processlist, 查看连接数情况</li>
<li>事故原因:slowsql(未走索引全表扫描,导致连接不释放,iops 异常,系统雪崩)</li>
<li>事后解决:鹰眼排查, 对未走对应索引和子查询语句 进行FORCE INDEX,修改,拆分操作</li>
<li>备注:<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">SELECT * from information_schema.`PROCESSLIST`  where  COMMAND !=&apos;Sleep&apos; and TIME &gt;0</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h5 id="线上系统出现-dev-版本"><a href="#线上系统出现-dev-版本" class="headerlink" title="线上系统出现 dev 版本"></a>线上系统出现 dev 版本</h5><ul>
<li>临时解决:重新打包发布版本</li>
<li>排查方法:线上测试</li>
<li>事故原因:没有按照正确的操作流程上线版本</li>
<li>事后解决:规范发布流程, 发布线上后要回归测试, 及时回滚</li>
</ul>
<h5 id="线上系统-进程无故结束"><a href="#线上系统-进程无故结束" class="headerlink" title="线上系统 进程无故结束"></a>线上系统 进程无故结束</h5><ul>
<li>临时解决: 远程重启线上服务器</li>
<li>排查方法: linux 内核日志</li>
<li>事故原因: 不明</li>
<li>事后解决: 升级 jdk1.6_24 and later/线上事故跟踪统计</li>
<li>备注:<br><img src="http://img.sandseasoft.com/image/d/6b/bf63729aa0b292c8cc6414eb5bae1.png" alt><br><img src="http://img.sandseasoft.com/image/1/cc/9b2a671647afe00ffcfcb48c768a8.png" alt></li>
</ul>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>manage</tag>
      </tags>
  </entry>
  <entry>
    <title>Python Cheatsheet</title>
    <url>/2015/05/09/0029-Python%20Cheatsheet/</url>
    <content><![CDATA[<h1 id="demo"><a href="#demo" class="headerlink" title="demo"></a>demo</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#  -*- coding:utf-8 -*-</span><br></pre></td></tr></table></figure>
<p><a href="https://github.com/jik1992/pythonDemo" target="_blank" rel="noopener">https://github.com/jik1992/pythonDemo</a></p>
<h1 id="最佳实践"><a href="#最佳实践" class="headerlink" title="最佳实践"></a>最佳实践</h1><ul>
<li><p>快速搭建一个 http 服务器</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python -m SimpleHTTPServer 30001</span><br><span class="line">python3 -m http.server 30001</span><br></pre></td></tr></table></figure>
</li>
<li><p>python3 没有 mysqldb 库了，取而代之的是 pymysql3</p>
</li>
<li><p>线上部署pyenv(这个可以绕过 root 的问题)<br><a href="https://github.com/yyuu/pyenv" target="_blank" rel="noopener">https://github.com/yyuu/pyenv</a></p>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git clone git://github.com/yyuu/pyenv.git ~/.pyenv</span><br><span class="line">echo &apos;export PYENV_ROOT=&quot;$HOME/.pyenv&quot;&apos; &gt;&gt; ~/.bashrc</span><br><span class="line">echo &apos;export PATH=&quot;$PYENV_ROOT/bin:$PATH&quot;&apos; &gt;&gt; ~/.bashrc</span><br><span class="line">echo &apos;eval &quot;$(pyenv init -)&quot;&apos; &gt;&gt; ~/.bashrc</span><br><span class="line">exec $SHELL -l</span><br><span class="line"></span><br><span class="line">pyenv install -list</span><br><span class="line">pyenv install 2.7</span><br><span class="line">pyenv install 3.4</span><br><span class="line">pyenv versions</span><br><span class="line">pyenv gloabl 2.7</span><br><span class="line">pyenv shell 3.4  =&gt;重启失效</span><br></pre></td></tr></table></figure>
<ul>
<li><p>手动编译 python</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https://www.python.org/ftp/python/</span><br><span class="line">./configure --prefix=/usr/local/python27</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line">ln -s /usr/local/python27/bin/python /usr/sbin/python</span><br></pre></td></tr></table></figure>
</li>
<li><p>打包</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">virtualenv new_project -relocatable</span><br><span class="line">cd new_project</span><br><span class="line">source ./bin/activite</span><br><span class="line">pip frezze &gt; requirment.txt</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h1 id="常用包"><a href="#常用包" class="headerlink" title="常用包"></a>常用包</h1><ul>
<li>jupyter  <a href="http://jupyter.readthedocs.org/" target="_blank" rel="noopener">http://jupyter.readthedocs.org/</a></li>
<li>matplotlib  <a href="http://www.labri.fr/perso/nrougier/teaching/matplotlib/" target="_blank" rel="noopener">http://www.labri.fr/perso/nrougier/teaching/matplotlib/</a></li>
<li>numpy、panda</li>
</ul>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>未归档</tag>
      </tags>
  </entry>
  <entry>
    <title>Enviroment java diff versions env switch</title>
    <url>/2015/05/09/0030-Enviroment%20java%20diff%20versions%20env%20switch/</url>
    <content><![CDATA[<h3 id="config"><a href="#config" class="headerlink" title="config"></a>config</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo vim ~/.bashrc</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">export JAVA_6_HOME=/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home</span><br><span class="line">export JAVA_7_HOME=/Library/Java/JavaVirtualMachines/jdk1.7.0_75.jdk/Contents/Home</span><br><span class="line">export JAVA_8_HOME=/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home</span><br><span class="line">export JAVA_HOME=$JAVA_7_HOME</span><br><span class="line"></span><br><span class="line">alias jdk8=&apos;export JAVA_HOME=$JAVA_8_HOME&apos;</span><br><span class="line">alias jdk7=&apos;export JAVA_HOME=$JAVA_7_HOME&apos;</span><br><span class="line">alias jdk6=&apos;export JAVA_HOME=$JAVA_6_HOME&apos;</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">source ~/.bashrc</span><br></pre></td></tr></table></figure>
<h4 id="how-to-use"><a href="#how-to-use" class="headerlink" title="how to use"></a>how to use</h4>]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>devops</tag>
      </tags>
  </entry>
  <entry>
    <title>Operation JVM crash</title>
    <url>/2015/05/11/0031-Operation%20JVM%20crash/</url>
    <content><![CDATA[<h1 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h1><p>基本上， 分两块</p>
<p><img src="http://img.sandseasoft.com/image/d/a6/77de7e70176aa7fb0a5788b26cb68.png" alt></p>
<h4 id="reason"><a href="#reason" class="headerlink" title="reason"></a>reason</h4><p>ref</p>
<ol>
<li>strong ref-&gt;no gc</li>
<li>soft ref-&gt;cache</li>
<li>weak ref-&gt;gc</li>
<li>phantom ref-&gt;absultion gc</li>
</ol>
<p>memony </p>
<p><img src="http://img.sandseasoft.com/image/1/19/d4ef9d1b34de2f20c8312653ce4b2.png" alt></p>
<p>shallow size/retained size</p>
<p><img src="http://img.sandseasoft.com/image/0/d5/b8e7aaa7c064d0a96e8b070877c4a.png" alt></p>
<h4 id="online-dump"><a href="#online-dump" class="headerlink" title="online dump"></a>online dump</h4><p>config jvm<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 溢出 heapdump</span><br><span class="line">-XX:HeapDumpOnOutOfMemoryError</span><br><span class="line">-XX:HeapDumpPath=\heap_online.bin</span><br><span class="line"># 溢出 运行命令, 可以通知服务器</span><br><span class="line">-XX:OnOutOfMemoryError=sh oom.sh %p /data/project/dmj-items-sync/tomcat/bin</span><br><span class="line"># 查看类加载信息</span><br><span class="line">-verbose</span><br><span class="line"># catlina.sh 调大内存</span><br><span class="line">JAVA_OPTS=&apos;-Xms128m -Xmx1536m -XX:MaxPermSize=512m -Duser.home=/data/project/xxx/&apos;</span><br><span class="line"></span><br><span class="line">jinfo pid</span><br></pre></td></tr></table></figure></p>
<p>oom.ssh<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">jstack -F $1 &gt;$2/`date &quot;+%Y%m%d_%H%M%S&quot;`_$1.stack</span><br><span class="line"># 本机IP</span><br><span class="line">time = `date &quot;+%Y-%m-%d %H:%M:%S&quot;`</span><br><span class="line">localIp=`ps -ef|grep rsyn |grep address|  awk -F &apos;=&apos;  &apos;&#123;print $2&#125;&apos;`</span><br><span class="line">echo &quot;name=$2&amp;ip=$localIp&amp;time=$time&amp;pid=$1&quot;</span><br><span class="line">curl -d &quot;name=$2&amp;ip=$localIp&amp;time=$time&amp;pid=$1&quot; &quot;http://www.baidu.com:9685/oom.jsp&quot;</span><br><span class="line">echo `date &quot;+%Y%m%d_%H%M%S&quot;` $1 $2 &gt;&gt; oom.log</span><br></pre></td></tr></table></figure></p>
<p>find pid<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ps -ef |grep dmj-items-sync		# search pid</span><br></pre></td></tr></table></figure></p>
<p>dump memony snapshot<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">jstack xxxx								# 栈空间 ,  检查现成锁</span><br><span class="line">jmap -dump:format=b,file=heap.bin  pid	# 导出 dump HPROF文件</span><br><span class="line">jmap -histo:live pid					# 堆空间dump/只查看存活对象</span><br></pre></td></tr></table></figure></p>
<p>online 查询 gc 情况<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">jstat -gcutil 22671 1000 1000</span><br></pre></td></tr></table></figure></p>
<p>文件过大分割<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">split -b 300m a.map						# 分割 map 文件</span><br><span class="line">cat x* &gt; a.map							# 合并 map 文件</span><br></pre></td></tr></table></figure></p>
<h4 id="离线分析-dump"><a href="#离线分析-dump" class="headerlink" title="离线分析 dump"></a>离线分析 dump</h4><p>Memory Anylise</p>
<ol>
<li>download:<a href="http://www.eclipse.org/mat/downloads.php" target="_blank" rel="noopener">http://www.eclipse.org/mat/downloads.php</a></li>
<li>open dump file</li>
</ol>
<p>jhat<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">jhat -J-Xmx512m a.map					# 分析 map http://localhost:7000</span><br></pre></td></tr></table></figure></p>
<p><img src="http://img.sandseasoft.com/image/2/ce/78ae16673e1ec537428cd3312c843.png" alt></p>
<h4 id="referance"><a href="#referance" class="headerlink" title="referance"></a>referance</h4><blockquote>
<p><a href="http://www.oschina.net/question/129540_23220" target="_blank" rel="noopener">http://www.oschina.net/question/129540_23220</a></p>
</blockquote>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>Install init Ubuntu14、CentOS7</title>
    <url>/2015/05/28/0033-Install%20init%20Ubuntu14%E3%80%81CentOS7/</url>
    <content><![CDATA[<h1 id="Ubuntu14"><a href="#Ubuntu14" class="headerlink" title="Ubuntu14"></a>Ubuntu14</h1><blockquote>
<p>基本上每台机器刚装完必须做的事情…</p>
</blockquote>
<h2 id="修改-DHCP-网络为static"><a href="#修改-DHCP-网络为static" class="headerlink" title="修改 DHCP 网络为static"></a>修改 DHCP 网络为static</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vim /etc/network/interface</span><br><span class="line"></span><br><span class="line">#  The primary network interface</span><br><span class="line">auto eth0</span><br><span class="line">iface eth0 inet static</span><br><span class="line">address 172.16.1.16</span><br><span class="line">netmask 255.255.255.0</span><br><span class="line">gateway 172.16.1.1</span><br></pre></td></tr></table></figure>
<h2 id="java"><a href="#java" class="headerlink" title="java"></a>java</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo add-apt-repository ppa:webupd8team/java</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install oracle-java8-installer</span><br><span class="line">sudo apt-get install oracle-java8-set-default</span><br></pre></td></tr></table></figure>
<h2 id="maridb-server"><a href="#maridb-server" class="headerlink" title="maridb-server"></a>maridb-server</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt-get install software-properties-common</span><br><span class="line">sudo apt-key adv --recv-keys --keyserver hkp://keyserver.ubuntu.com:80 0xcbcb082a1bb943db</span><br><span class="line">sudo add-apt-repository &apos;deb http://sfo1.mirrors.digitalocean.com/mariadb/repo/10.0/ubuntu trusty main&apos;</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install mariadb-server</span><br><span class="line"></span><br><span class="line">or </span><br><span class="line"></span><br><span class="line">sudo apt-get install mysql-server</span><br></pre></td></tr></table></figure>
<h2 id="ubuntu"><a href="#ubuntu" class="headerlink" title="ubuntu"></a>ubuntu</h2><h3 id="source-list"><a href="#source-list" class="headerlink" title="source.list"></a>source.list</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo etc/apt/source.list</span><br><span class="line">:%s# us\.# cn\.# g</span><br><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure>
<h3 id="如果源有问题初始化方法"><a href="#如果源有问题初始化方法" class="headerlink" title="如果源有问题初始化方法"></a>如果源有问题初始化方法</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo rm -r /etc/apt/sources.list.d/</span><br><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure>
<h3 id="安装-gnome3"><a href="#安装-gnome3" class="headerlink" title="安装 gnome3"></a>安装 gnome3</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo add-apt-repository ppa:gnome3-team/gnome3-staging</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get dist-upgrade</span><br><span class="line"></span><br><span class="line">sudo apt-get install gnome-shell</span><br><span class="line">sudo apt-get install gnome-tweak-tool</span><br><span class="line">sudo apt-get install gnome-weather gnome-maps gnome-photos gnome-music</span><br></pre></td></tr></table></figure>
<h3 id="安装-chrome"><a href="#安装-chrome" class="headerlink" title="安装 chrome"></a>安装 chrome</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb</span><br><span class="line">sudo dpkg -i google-chrome-stable_current_amd64.deb</span><br></pre></td></tr></table></figure>
<h1 id="CentOS"><a href="#CentOS" class="headerlink" title="CentOS"></a>CentOS</h1><blockquote>
<p>warning: setlocale: LC_ALL: cannot change locale (en_US.UTF-8): No such file or directory<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vi /etc/profile</span><br><span class="line">export LC_ALL=en_US.UTF-8</span><br><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure></p>
</blockquote>
<ul>
<li><p>关闭默认防火墙</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">systemctl stop firewalld.service # 停止firewall</span><br><span class="line">systemctl disable firewalld.service # 禁止firewall开机启动</span><br><span class="line">firewall-cmd --state # 查看默认防火墙状态（关闭后显示notrunning，开启后显示running）</span><br></pre></td></tr></table></figure>
</li>
<li><p>java</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">rpm -ivh jdk-8u25-linux-x64.rpm</span><br></pre></td></tr></table></figure>
</li>
<li><p>更新源<br><a href="http://mirrors.163.com/.help/centos.html" target="_blank" rel="noopener">http://mirrors.163.com/.help/centos.html</a></p>
</li>
<li><p>安装mysql数据库</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wget http://dev.mysql.com/get/mysql-community-release-el7-5.noarch.rpm</span><br><span class="line">rpm -ivh mysql-community-release-el7-5.noarch.rpm</span><br><span class="line">yum install mysql-community-server</span><br><span class="line"></span><br><span class="line">service mysqld restart</span><br></pre></td></tr></table></figure>
</li>
<li><p>启动网络</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">service  networkmanager start</span><br><span class="line">chkconfig networkmanager on</span><br></pre></td></tr></table></figure>
</li>
<li><p>修改网卡配置</p>
<ol>
<li>删除/etc/udev/rules.d/70-persistent-net.rules </li>
<li>配置/etc/sysconfig/network-scripts/ifcfg-eth0 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">DEVICE=&quot;eth0&quot; </span><br><span class="line">BOOTPROTO=&quot;static&quot; </span><br><span class="line">HWADDR=&quot;00:0C:29:91:42:2C&quot; </span><br><span class="line">MTU=&quot;1500&quot; </span><br><span class="line">NM_CONTROLLED=&quot;yes&quot; </span><br><span class="line">ONBOOT=&quot;yes&quot; </span><br><span class="line">IPADDR=192.168.152.101 </span><br><span class="line">NETMASK=255.255.255.0 </span><br><span class="line">GATEWAY=192.168.152.2</span><br></pre></td></tr></table></figure>
</li>
</ol>
</li>
</ul>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>devops</tag>
      </tags>
  </entry>
  <entry>
    <title>Play Terminal</title>
    <url>/2015/06/06/0034-Play%20Terminal/</url>
    <content><![CDATA[<p>终极使用搭配,  iterm2+oh-my-zsh+tmux</p>
<h3 id="iterm2"><a href="#iterm2" class="headerlink" title="iterm2"></a>iterm2</h3><blockquote>
<p><a href="http://www.iterm2.com/" target="_blank" rel="noopener">http://www.iterm2.com/</a></p>
</blockquote>
<ol>
<li>Search 和 各种高亮</li>
<li>主题配色  c+\ 快速切换</li>
</ol>
<h3 id="oh-my-zsh"><a href="#oh-my-zsh" class="headerlink" title="oh-my-zsh"></a>oh-my-zsh</h3><blockquote>
<p><a href="http://ohmyz.sh/" target="_blank" rel="noopener">http://ohmyz.sh/</a></p>
</blockquote>
<ol>
<li>灵活的自动补全</li>
<li>插件:git/osx(cdf命令)  (alias 看所有缩写)</li>
</ol>
<h3 id="tmux"><a href="#tmux" class="headerlink" title="tmux"></a>tmux</h3><blockquote>
<p><a href="https://github.com/tmux/tmux" target="_blank" rel="noopener">https://github.com/tmux/tmux</a></p>
</blockquote>
<ol>
<li>c+b 进入指令模式</li>
<li><ul>
<li>c=new windows</li>
<li>“=上下panel</li>
<li>%=左右panel</li>
<li>!=关闭panel</li>
<li>forward=切换panel</li>
<li>num= current window</li>
<li>x=close window</li>
</ul>
</li>
</ol>
<h3 id="that-is-all-enjoy-it"><a href="#that-is-all-enjoy-it" class="headerlink" title="that is all! enjoy it !"></a>that is all! enjoy it !</h3>]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>tools</tag>
      </tags>
  </entry>
  <entry>
    <title>Registry Nexus</title>
    <url>/2015/06/13/0035-Registry%20Nexus/</url>
    <content><![CDATA[<h1 id="Nexus-3-0-x"><a href="#Nexus-3-0-x" class="headerlink" title="Nexus 3.0.x"></a>Nexus 3.0.x</h1><p>PS:注意，3.x产品没有2.x好用，阉割了upload respository功能，目前生产线回滚到2.x版本</p>
<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p><a href="http://www.sonatype.com/nexus-repository-oss" target="_blank" rel="noopener">http://www.sonatype.com/nexus-repository-oss</a><br><a href="http://www.sonatype.com/download-oss-sonatype" target="_blank" rel="noopener">http://www.sonatype.com/download-oss-sonatype</a><br><a href="http://www.sonatype.org/downloads/nexus-latest-bundle.zip" target="_blank" rel="noopener">http://www.sonatype.org/downloads/nexus-latest-bundle.zip</a><br><a href="http://books.sonatype.com/nexus-book/3.0/pdf/nxbook-pdf.pdf" target="_blank" rel="noopener">http://books.sonatype.com/nexus-book/3.0/pdf/nxbook-pdf.pdf</a><br><a href="http://books.sonatype.com/nexus-book/3.0/reference/index.html" target="_blank" rel="noopener">http://books.sonatype.com/nexus-book/3.0/reference/index.html</a></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><ul>
<li>解压</li>
<li>配置 dnspod</li>
<li>配置 nginx 转发</li>
<li>本地 localhost:8081/nexus 密码 admin:admin123</li>
<li>add proxy resposibliy </li>
<li>set True with update index</li>
</ul>
<h2 id="使用原理"><a href="#使用原理" class="headerlink" title="使用原理"></a>使用原理</h2><ul>
<li>仓库<ul>
<li>proxy 代理 镜像 仓库</li>
<li>host  本地 发布 仓库</li>
<li>group 聚合拉取地址</li>
</ul>
</li>
</ul>
<h2 id="常用的maven代理库"><a href="#常用的maven代理库" class="headerlink" title="常用的maven代理库"></a>常用的maven代理库</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http://maven.aliyun.com/nexus/content/groups/public/</span><br><span class="line">http://repo.spring.io/release/</span><br><span class="line">http://repo.maven.apache.org/maven2/</span><br><span class="line">http://repo1.maven.org/maven2/</span><br><span class="line">http://repo.spring.io/release/</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>manage</tag>
      </tags>
  </entry>
  <entry>
    <title>Java SpringTask / Quartz</title>
    <url>/2015/06/17/0036-Java%20SpringTask%20-%20Quartz/</url>
    <content><![CDATA[<h2 id="Cron生成"><a href="#Cron生成" class="headerlink" title="Cron生成"></a>Cron生成</h2><p><a href="http://www.jeasyuicn.com/cron/" target="_blank" rel="noopener">http://www.jeasyuicn.com/cron/</a></p>
<h2 id="SpringTask"><a href="#SpringTask" class="headerlink" title="SpringTask"></a>SpringTask</h2><blockquote>
<p>最简单的方法, 方便写死直接开启<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;task:annotation-driven/&gt;</span><br><span class="line"></span><br><span class="line">&lt;context:annotation-config/&gt;</span><br><span class="line">&lt;bean class=&quot;org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor&quot;/&gt;</span><br><span class="line">&lt;context:component-scan base-package=&quot;com.raycloud.dmj.schedules&quot;/&gt;</span><br></pre></td></tr></table></figure></p>
</blockquote>
<p>然后<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@Scheduled(cron=&quot;0/5 * *  * * ? &quot;)</span><br></pre></td></tr></table></figure></p>
<h2 id="Quartz"><a href="#Quartz" class="headerlink" title="Quartz"></a>Quartz</h2><blockquote>
<p>非 Spring 托管，动态增加移除, 持久化 job</p>
</blockquote>
<ol>
<li>数据库脚本在对应版本的 doc 里面，其中还有丰富的案列</li>
<li>重要对象Scheduler／JobDetail／Trigger</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@Component</span><br><span class="line">public class InitTask implements InitializingBean &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  private static SchedulerFactory sf                 = new StdSchedulerFactory();</span><br><span class="line">  private static String           TRIGGER_GROUP_NAME = &quot;TRIGGER_GROUP_NAME&quot;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  public static int closeJob(String jobName, String jobGorupName) &#123;</span><br><span class="line">    //关闭任务调度</span><br><span class="line">    try &#123;</span><br><span class="line">      Scheduler sche = sf.getScheduler();</span><br><span class="line">      JobKey jobKey = JobKey.jobKey(jobName, jobGorupName);</span><br><span class="line">      return sche.deleteJob(jobKey) ? 0 : 1;</span><br><span class="line">    &#125; catch (SchedulerException e) &#123;</span><br><span class="line">      return 2;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  public static int addJob(String jobName, String jobGorupName, Class&lt;? extends Job&gt; job, Object task, String cron) &#123;</span><br><span class="line">    try &#123;</span><br><span class="line">      // 判断任务是否存在</span><br><span class="line">      Scheduler scheduler = sf.getScheduler();</span><br><span class="line">      JobKey jobKey = JobKey.jobKey(jobName, jobGorupName);</span><br><span class="line">      if (scheduler.checkExists(jobKey)) &#123;</span><br><span class="line">        return 1;// 任务已经存在</span><br><span class="line">      &#125;</span><br><span class="line">      // 创建一个JobDetail实例，指定SimpleJob</span><br><span class="line">      Map&lt;String, Object&gt; JobDetailmap = new HashMap&lt;String, Object&gt;();</span><br><span class="line">      JobDetailmap.put(&quot;name&quot;, jobName);// 设置任务名字</span><br><span class="line">      JobDetailmap.put(&quot;group&quot;, jobGorupName);// 设置任务组</span><br><span class="line">      JobDetailmap.put(&quot;jobClass&quot;, job.getCanonicalName());// 指定执行类</span><br><span class="line">      // Task.class.getCanonicalName()</span><br><span class="line">      JobDetail jobDetail = JobDetailSupport.newJobDetail(JobDetailmap);</span><br><span class="line">      // 添加数据内容</span><br><span class="line">      jobDetail.getJobDataMap().put(&quot;task&quot;, task);// 传输的上下文</span><br><span class="line"></span><br><span class="line">      CronScheduleBuilder cronScheduleBuilder = CronScheduleBuilder.cronSchedule(cron);</span><br><span class="line">      CronTrigger cronTrigger = TriggerBuilder</span><br><span class="line">          .newTrigger()</span><br><span class="line">          .withSchedule(cronScheduleBuilder).build();</span><br><span class="line">      scheduler.scheduleJob(jobDetail, cronTrigger);</span><br><span class="line"></span><br><span class="line">//      SimpleTriggerImpl simpleTrigger = new SimpleTriggerImpl();</span><br><span class="line">//      simpleTrigger.setName(jobName);</span><br><span class="line">//      simpleTrigger.setGroup(TRIGGER_GROUP_NAME);</span><br><span class="line">//      simpleTrigger.setStartTime(</span><br><span class="line">//          new Date()</span><br><span class="line">//      );</span><br><span class="line">//      simpleTrigger.setRepeatInterval(seconds * 1000);</span><br><span class="line">//      simpleTrigger.setRepeatCount(-1);</span><br><span class="line">//      scheduler.scheduleJob(jobDetail, simpleTrigger);</span><br><span class="line"></span><br><span class="line">      scheduler.start();// ⑤调度启动</span><br><span class="line">      return 0;// 添加成功</span><br><span class="line">    &#125; catch (Exception e) &#123;</span><br><span class="line">      return 2;// 操作异常</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  public static void resumeJob() &#123;</span><br><span class="line">    try &#123;</span><br><span class="line">      SchedulerFactory schedulerFactory = new StdSchedulerFactory();</span><br><span class="line">      Scheduler scheduler = schedulerFactory.getScheduler();</span><br><span class="line">      scheduler.start();</span><br><span class="line">    &#125; catch (Exception e) &#123;</span><br><span class="line">      e.printStackTrace();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  @Override</span><br><span class="line">  public void afterPropertiesSet() throws Exception &#123;</span><br><span class="line">//    closeJob(&quot;demo&quot;, &quot;demoGroup&quot;);</span><br><span class="line">//    addJob(&quot;demo&quot;, &quot;demoGroup&quot;, HelloJob.class, &quot;demo!!!&quot;, &quot;* * * * * ?&quot;);</span><br><span class="line">    resumeJob();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>对应表存储的quartz.properties<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#  Default Properties file for use by StdSchedulerFactory</span><br><span class="line">#  to create a Quartz Scheduler Instance, if a different</span><br><span class="line">#  properties file is not explicitly specified.</span><br><span class="line"># </span><br><span class="line"># 集群配置（自动主备容灾）</span><br><span class="line">org.quartz.jobStore.isClustered = true</span><br><span class="line">org.quartz.scheduler.instanceId = AUTO</span><br><span class="line"># 基础配置</span><br><span class="line">org.quartz.scheduler.instanceName: DefaultQuartzScheduler</span><br><span class="line">org.quartz.scheduler.rmi.export: false</span><br><span class="line">org.quartz.scheduler.rmi.proxy: false</span><br><span class="line">org.quartz.scheduler.wrapJobExecutionInUserTransaction: false</span><br><span class="line">org.quartz.threadPool.class: org.quartz.simpl.SimpleThreadPool</span><br><span class="line">org.quartz.threadPool.threadCount: 10</span><br><span class="line">org.quartz.threadPool.threadPriority: 5</span><br><span class="line">org.quartz.threadPool.threadsInheritContextClassLoaderOfInitializingThread: true</span><br><span class="line">org.quartz.jobStore.misfireThreshold: 60000</span><br><span class="line"># ============================================================================</span><br><span class="line">#  Configure JobStore</span><br><span class="line"># ============================================================================</span><br><span class="line"># 默认配置，数据保存到内存</span><br><span class="line"># org.quartz.jobStore.class: org.quartz.simpl.RAMJobStore</span><br><span class="line"># 持久化配置</span><br><span class="line">org.quartz.jobStore.class:org.quartz.impl.jdbcjobstore.JobStoreTX</span><br><span class="line">org.quartz.jobStore.driverDelegateClass:org.quartz.impl.jdbcjobstore.StdJDBCDelegate</span><br><span class="line">org.quartz.jobStore.useProperties:true</span><br><span class="line"># 数据库表前缀</span><br><span class="line">org.quartz.jobStore.tablePrefix:QRTZ_</span><br><span class="line">org.quartz.jobStore.dataSource:qzDS</span><br><span class="line"></span><br><span class="line"># ============================================================================</span><br><span class="line">#  Configure Datasources</span><br><span class="line"># ============================================================================</span><br><span class="line"># JDBC驱动</span><br><span class="line">org.quartz.dataSource.qzDS.driver:com.mysql.jdbc.Driver</span><br><span class="line">org.quartz.dataSource.qzDS.URL:jdbc:mysql://localhost:3306/task</span><br><span class="line">org.quartz.dataSource.qzDS.user:root</span><br><span class="line">org.quartz.dataSource.qzDS.password:xxxx</span><br><span class="line">org.quartz.dataSource.qzDS.maxConnection:10</span><br></pre></td></tr></table></figure></p>
<h4 id="Quartz-2-x-引用"><a href="#Quartz-2-x-引用" class="headerlink" title="Quartz 2.x 引用"></a>Quartz 2.x 引用</h4><ul>
<li><a href="http://www.quartz-scheduler.org/downloads" target="_blank" rel="noopener">http://www.quartz-scheduler.org/downloads</a></li>
<li><a href="http://www.quartz-scheduler.org/documentation/quartz-2.2.x/quick-start.html" target="_blank" rel="noopener">http://www.quartz-scheduler.org/documentation/quartz-2.2.x/quick-start.html</a></li>
<li><a href="http://www.quartz-scheduler.org/documentation/quartz-2.2.x/tutorials/" target="_blank" rel="noopener">http://www.quartz-scheduler.org/documentation/quartz-2.2.x/tutorials/</a></li>
</ul>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>未归档</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux Operations Awesome</title>
    <url>/2015/06/24/0037-Linux%20Operations%20Awesome/</url>
    <content><![CDATA[<p>这是我自己总结的运维最佳实践</p>
<h2 id="ssh-copy-id"><a href="#ssh-copy-id" class="headerlink" title="ssh-copy-id"></a>ssh-copy-id</h2><p>两个工具  ssh-keygen/ssh-copy-id<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 生成公钥密钥</span><br><span class="line">ssh-keygen -t rsa</span><br><span class="line"></span><br><span class="line"># 做免密登陆</span><br><span class="line"># https://www.ssh.com/ssh/copy-id</span><br><span class="line">install ssh-copy-id</span><br><span class="line">ssh-copy-id -i ~/.ssh/xx.pub root@domain.com</span><br></pre></td></tr></table></figure></p>
<h2 id="手动关闭-密码登陆"><a href="#手动关闭-密码登陆" class="headerlink" title="手动关闭 密码登陆"></a>手动关闭 密码登陆</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vim /etc/ssh/sshd_config</span><br><span class="line">PasswordAuthentication no</span><br><span class="line"></span><br><span class="line">service ssh restart</span><br></pre></td></tr></table></figure>
<p>PS: 也可以用 SecureCRT 生成 openSSH 格式的 RSA 密钥绑定<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ssh-keygen</span><br><span class="line">cat gxb_server.pub &gt;&gt; ~/.ssh/authorized_keys</span><br></pre></td></tr></table></figure></p>
<h2 id="会话转发"><a href="#会话转发" class="headerlink" title="会话转发"></a>会话转发</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ssh -fN -L 10022:server1_host:server1_port -p gateway_port gateway_usr@gateway_host</span><br><span class="line">ssh -p 10022 root@localhost</span><br></pre></td></tr></table></figure>
<p>如果报错</p>
<blockquote>
<p>Could not open a connection to your authentication agent.<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">eval `ssh-agent`</span><br></pre></td></tr></table></figure></p>
</blockquote>
<h2 id="enjoy-it"><a href="#enjoy-it" class="headerlink" title="enjoy it"></a>enjoy it</h2>]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>未归档</tag>
      </tags>
  </entry>
  <entry>
    <title>Guide Docker</title>
    <url>/2015/06/28/0038-Guide%20Docker/</url>
    <content><![CDATA[<h3 id="国内云托管"><a href="#国内云托管" class="headerlink" title="国内云托管"></a>国内云托管</h3><blockquote>
<p><a href="http://www.daocloud.io" target="_blank" rel="noopener">http://www.daocloud.io</a></p>
</blockquote>
<h3 id="单机监控"><a href="#单机监控" class="headerlink" title="单机监控"></a>单机监控</h3><blockquote>
<p><a href="https://github.com/google/cadvisor" target="_blank" rel="noopener">https://github.com/google/cadvisor</a></p>
</blockquote>
<h3 id="集群托管"><a href="#集群托管" class="headerlink" title="集群托管"></a>集群托管</h3><blockquote>
<p><a href="https://github.com/shipyard/shipyard" target="_blank" rel="noopener">https://github.com/shipyard/shipyard</a></p>
</blockquote>
<h3 id="云平台-TODO"><a href="#云平台-TODO" class="headerlink" title="云平台(TODO)"></a>云平台(TODO)</h3><p>coreOS+etcd+kubernetes(Mesos)</p>
<h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><ul>
<li>daemon </li>
<li>image</li>
<li>container  <ul>
<li>Environment</li>
<li>Port</li>
<li>Volumes<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo docker -H tcp://0.0.0.0:4243 -H unix:///var/run/docker.sock -d</span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
<h3 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h3><ul>
<li>docker</li>
<li>docker2boot</li>
<li>docker-machine</li>
<li>compase</li>
<li>docker-hub</li>
<li>docker-regitstry</li>
<li>kitematic</li>
</ul>
<h3 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker ps</span><br><span class="line">docker images</span><br><span class="line">docker run/stop  --name/--p/--link -d</span><br><span class="line">docker rm/rmi</span><br><span class="line">docker commit</span><br><span class="line">docker save</span><br><span class="line">docker export</span><br><span class="line">docker exec -it 2d97d96edf92 /bin/bash</span><br><span class="line">service docker start/stop/restart</span><br></pre></td></tr></table></figure>
<h2 id="运维脚本"><a href="#运维脚本" class="headerlink" title="运维脚本"></a>运维脚本</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#  杀死所有正在运行的容器 </span><br><span class="line">docker kill $(docker ps -a -q) </span><br><span class="line"></span><br><span class="line">#  删除所有已经停止的容器 </span><br><span class="line">docker rm $(docker ps -a -q) </span><br><span class="line"></span><br><span class="line">#  删除所有未打 dangling 标签的镜像 </span><br><span class="line">docker rmi $(docker images -q -f dangling=true) </span><br><span class="line"></span><br><span class="line">#  删除所有镜像 </span><br><span class="line">docker rmi $(docker images -q)</span><br></pre></td></tr></table></figure>
<h3 id="制作迁移镜像-TODO"><a href="#制作迁移镜像-TODO" class="headerlink" title="制作迁移镜像(TODO)"></a>制作迁移镜像(TODO)</h3><p>xxx</p>
<h3 id="暴露-Docke-API-TODO"><a href="#暴露-Docke-API-TODO" class="headerlink" title="暴露 Docke API(TODO)"></a>暴露 Docke API(TODO)</h3><h3 id="最新的-docker-版本"><a href="#最新的-docker-版本" class="headerlink" title="最新的 docker 版本"></a>最新的 docker 版本</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt-get install apt-transport-https  </span><br><span class="line">sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 36A1D7869245C8950F966E92D8576A8BA88D21E9  </span><br><span class="line">sudo sh -c &quot;echo deb https://get.docker.io/ubuntu docker main &gt; /etc/apt/sources.list.d/docker.list&quot;  </span><br><span class="line">sudo apt-get update  </span><br><span class="line">apt-get install -y lxc-docker  </span><br><span class="line">apt-get update -y lxc-docker  </span><br><span class="line">ln -sf /usr/bin/docker /usr/local/bin/docker</span><br></pre></td></tr></table></figure>
<h3 id="代理镜像"><a href="#代理镜像" class="headerlink" title="代理镜像"></a>代理镜像</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https://help.aliyun.com/knowledge_detail/40557.html</span><br><span class="line">https://lug.ustc.edu.cn/wiki/mirrors/help/docker</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>devops</tag>
      </tags>
  </entry>
  <entry>
    <title>zk+netty 学习</title>
    <url>/2015/08/26/0039-zk+netty%20%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<h3 id="zookeeper-clinet"><a href="#zookeeper-clinet" class="headerlink" title="zookeeper clinet"></a>zookeeper clinet</h3><ul>
<li>zkClient</li>
<li>Curator<br>(<a href="https://github.com/Netflix/curator" target="_blank" rel="noopener">https://github.com/Netflix/curator</a>)</li>
</ul>
<h4 id="Netty"><a href="#Netty" class="headerlink" title="Netty"></a>Netty</h4><p>异步 io 模型简介<br><a href="http://www.infoq.com/cn/articles/netty-high-performance/" target="_blank" rel="noopener">http://www.infoq.com/cn/articles/netty-high-performance/</a><br>Netty5 官方翻译<br><a href="http://ifeve.com/netty5-user-guide/" target="_blank" rel="noopener">http://ifeve.com/netty5-user-guide/</a></p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>未归档</tag>
      </tags>
  </entry>
  <entry>
    <title>Test Junit4/Mockito</title>
    <url>/2015/08/31/0040-Test%20Junit4-Mockito/</url>
    <content><![CDATA[<h1 id="Junit4"><a href="#Junit4" class="headerlink" title="Junit4"></a>Junit4</h1><p>批量测试<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@RunWith(Suite.class)</span><br><span class="line">@Suite.SuiteClasses(SuitTest.class)</span><br><span class="line">public class ParamTest &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>批量参数测试<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@RunWith(Parameterized.class)</span><br><span class="line">public class ParameterizedTest &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  @Parameter(value = 0)</span><br><span class="line">  public int a;</span><br><span class="line">  @Parameter(value = 1)</span><br><span class="line">  public int b;</span><br><span class="line">  @Parameter(value = 2)</span><br><span class="line">  public int c;</span><br><span class="line"></span><br><span class="line">  @Parameters</span><br><span class="line">  public static List&lt;Object[]&gt; data() &#123;</span><br><span class="line">    return Lists.asList(new Object[]&#123;-1, 1, 0&#125;, new Object[][]&#123;&#123;20, 20, 40&#125;, &#123;30, 30, 60&#125;, &#123;-5, -5, -10&#125;&#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  @Test(timeout = 1000)</span><br><span class="line">  public void hello() &#123;</span><br><span class="line">    Assert.assertEquals(a + b, c);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  @Test(expected = IllegalArgumentException.class)</span><br><span class="line">  public void exception() &#123;</span><br><span class="line">    throw new IllegalArgumentException(&quot;Xxx&quot;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  @Before</span><br><span class="line">  public void setUp() throws Exception &#123;</span><br><span class="line">    System.out.println(&quot;测试执行前&quot;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  @After</span><br><span class="line">  public void tearDown() throws Exception &#123;</span><br><span class="line">    System.out.println(&quot;测试执行后&quot;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h1 id="Mockito"><a href="#Mockito" class="headerlink" title="Mockito"></a>Mockito</h1><blockquote>
<p><a href="http://mockito.org/" target="_blank" rel="noopener">http://mockito.org/</a></p>
</blockquote>
<p>原语</p>
<ul>
<li>mock/spy</li>
<li>验证:verify(times/never/atLeastOnce/atLeast/atMost)=&gt;method</li>
<li>判断:when=&gt;thenReturn/thenThrow</li>
<li>断言:doThrow()/doAnswer()/doNothing()/doReturn()  </li>
<li>填充:anyInt(), anyString()</li>
</ul>
<p>参考</p>
<blockquote>
<p><a href="http://site.mockito.org/mockito/docs/current/org/mockito/Mockito.html" target="_blank" rel="noopener">http://site.mockito.org/mockito/docs/current/org/mockito/Mockito.html</a></p>
</blockquote>
<h1 id="Htmlunit"><a href="#Htmlunit" class="headerlink" title="Htmlunit"></a>Htmlunit</h1><h1 id="Seleuium"><a href="#Seleuium" class="headerlink" title="Seleuium"></a>Seleuium</h1>]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>Awesome-workflow for myself</title>
    <url>/2015/10/27/0041-Awesome-workflow%20for%20myself/</url>
    <content><![CDATA[<ol>
<li>这是至今用过觉得靠谱产品选择，每一个领域只有一个.</li>
<li>如果辞职了，有机会要好好把玩~~~~记在这里</li>
</ol>
<h2 id="production-design"><a href="#production-design" class="headerlink" title="production/design"></a>production/design</h2><ul>
<li>auxre7</li>
<li>stekch</li>
<li>ps/ae/imoive</li>
<li>hype3</li>
<li>licecap</li>
<li>dribbble.com</li>
<li>unsplash.com</li>
<li>wenangou.com</li>
<li>iconfont.cn</li>
<li>slides.com</li>
</ul>
<h2 id="webfrontend"><a href="#webfrontend" class="headerlink" title="webfrontend"></a>webfrontend</h2><ul>
<li>socket.io</li>
<li>semantic  </li>
<li>marionette/backbonejs/undercore/handlerbar</li>
<li>vuejs</li>
<li>requirejs</li>
<li>express/nodejs</li>
<li>meteor</li>
<li>electron/covrdva</li>
<li>sass</li>
<li>fiddler4/DHC plugin for chome</li>
<li>gulp/bower</li>
<li>pm2/supervisor</li>
<li>intro.js/moment.js</li>
</ul>
<h2 id="server"><a href="#server" class="headerlink" title="server"></a>server</h2><ul>
<li>springboot</li>
<li>cas/keycloak/Shiro</li>
<li>dubbox/zk</li>
<li>hibernate/jpa</li>
<li>maven/jenkins</li>
<li>swagger</li>
<li>redis</li>
<li>rabbitmq</li>
<li>guava/apache.commons.lang3</li>
<li>python -m SimpleHTTPServer</li>
<li>red5-server</li>
<li>postgrelsql/keeplive</li>
<li>log4j2</li>
<li>requests</li>
<li>fmmpeg</li>
<li>celery</li>
<li>ldap/leveldb</li>
</ul>
<h2 id="IDE"><a href="#IDE" class="headerlink" title="IDE"></a>IDE</h2><ul>
<li>idea</li>
<li>sublimetext</li>
<li>cloud9</li>
<li>sourcetree</li>
<li>jrebel</li>
</ul>
<h4 id="BigData"><a href="#BigData" class="headerlink" title="BigData"></a>BigData</h4><ul>
<li>docker/daocloud</li>
<li>mesos/marathon</li>
<li>hadoop/spark</li>
<li>deis</li>
</ul>
<h2 id="OA"><a href="#OA" class="headerlink" title="OA"></a>OA</h2><ul>
<li>odoo/ghost/gitbook</li>
<li>dokuwiki</li>
<li>etherpad</li>
<li>owncloud</li>
<li>telescope</li>
<li>discourse/nodebb</li>
<li>rocket.chat/wenkan</li>
<li>gitlab/bitbucket/github</li>
<li>confluece/jira</li>
<li>processon</li>
</ul>
<h2 id="Operations"><a href="#Operations" class="headerlink" title="Operations"></a>Operations</h2><ul>
<li>nginx/lua</li>
<li>disconf</li>
<li>btree</li>
<li>metrics</li>
<li>elk</li>
<li>wireshark</li>
<li>pfsense</li>
<li>fabric</li>
<li>sentry8</li>
<li>oneapm</li>
<li>glances</li>
<li>zabbix</li>
</ul>
<h2 id="DBA"><a href="#DBA" class="headerlink" title="DBA"></a>DBA</h2><ul>
<li>kettle/metabase</li>
<li>flywaydb</li>
<li>mycat</li>
</ul>
<h2 id="Test"><a href="#Test" class="headerlink" title="Test"></a>Test</h2><ul>
<li>mockito</li>
<li>jmeter</li>
<li>selenium</li>
<li>junit4、springtest</li>
</ul>
<h2 id="Saas"><a href="#Saas" class="headerlink" title="Saas"></a>Saas</h2><ul>
<li>dnspod</li>
<li>cloudfare</li>
<li>aliyun/digtailocean</li>
<li>swiftype</li>
<li>intercom/disqus</li>
<li>google analytics</li>
</ul>
<h2 id="oauth2"><a href="#oauth2" class="headerlink" title="oauth2"></a>oauth2</h2><ul>
<li>github/weixin/taobaosdk</li>
</ul>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>about</tag>
      </tags>
  </entry>
  <entry>
    <title>OLAP MaxCompute</title>
    <url>/2015/11/18/0042-OLAP%20MaxCompute/</url>
    <content><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p><img src="http://img.sandseasoft.com/image/f/04/b4f69fb11a18fca1c71c56deaff67.png" alt></p>
<p>入口</p>
<p><a href="open.taobao.com">open.taobao.com</a></p>
<p><a href="http://help.aliyun.com/product/8314999_odps.html" target="_blank" rel="noopener">http://help.aliyun.com/product/8314999_odps.html</a></p>
<p>本质是hadoop 集群，三个部分组成：</p>
<ul>
<li>数据工厂，编辑管理 hive 脚本</li>
<li>任务管理，RDS、ODPS 数据同步的任务，计算任务</li>
<li>任务监控，查看当前，历史任务。</li>
<li>管理面板。配置，审计</li>
</ul>
<h2 id="数据工厂"><a href="#数据工厂" class="headerlink" title="数据工厂"></a>数据工厂</h2><p>保存编辑脚本，常规语法<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">###  建表，partitioned 代表时间分片</span><br><span class="line">drop table if exists kb_wordbase_weight;</span><br><span class="line">create table kb_wordbase_weight(</span><br><span class="line">  	cid bigint,</span><br><span class="line">  	category_name string, </span><br><span class="line">  	pid bigint,</span><br><span class="line">  	property_name string,</span><br><span class="line">  	property_level int,</span><br><span class="line">  	property_group_id bigint,</span><br><span class="line">  	child_prop_num bigint,</span><br><span class="line">  	min_common_word string,</span><br><span class="line">  	extract_word string,</span><br><span class="line">  	category_property_weight double</span><br><span class="line">)partitioned by (dt string);</span><br><span class="line"></span><br><span class="line">###  其中 dt 代表时间切片，注意查询和增加的使用方法</span><br><span class="line">INSERT overwrite TABLE kb_wordbase_property_weight partition (dt=&quot;20151113&quot;)</span><br><span class="line">SELECT t1.cid,</span><br><span class="line">       t1.property_group_id,</span><br><span class="line">       t1.property_level,</span><br><span class="line">       t1.count / t2.category_max * 10</span><br><span class="line">FROM kb_wordbase_property_count t1</span><br><span class="line">LEFT OUTER JOIN kb_wordbase_property_category_total t2 ON t1.cid = t2.cid</span><br><span class="line">WHERE t1.dt=&quot;20151113&quot;</span><br><span class="line">  AND t2.dt=&quot;20151113&quot;;</span><br><span class="line"></span><br><span class="line">###  当然，还支持一些 Hive 的函数</span><br><span class="line">INSERT overwrite TABLE kb_wordbase_word_wash_3 partition (dt=&quot;20151113&quot;)</span><br><span class="line">SELECT DISTINCT cid,</span><br><span class="line">                segment,</span><br><span class="line">                tag</span><br><span class="line">FROM kb_wordbase_word_wash_2</span><br><span class="line">WHERE dt=&quot;20151113&quot;;</span><br></pre></td></tr></table></figure></p>
<p>几个有用的函数,注意默认使用 string 字段，当需要参杂业务的时候使用 cast 方法强转字符。  小数运算会丢失精度，使用round(xxx,2)截取然后继续。<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 1.11</span><br><span class="line">round(1.11111,2);</span><br><span class="line"># 2</span><br><span class="line">ceil(1.11)</span><br><span class="line"># now()</span><br><span class="line">getdate()</span><br></pre></td></tr></table></figure></p>
<h2 id="任务管理"><a href="#任务管理" class="headerlink" title="任务管理"></a>任务管理</h2><ul>
<li>同步任务，支持 RDS、ODPS 数据同步（坑，ODPS 导入 RDS 不支持数据分片，多次导入数据冗余）</li>
<li>刷新任务，支持定时脚本任务</li>
</ul>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux supervisord</title>
    <url>/2015/11/18/0043-Linux%20supervisord/</url>
    <content><![CDATA[<h2 id="文档"><a href="#文档" class="headerlink" title="文档"></a>文档</h2><p><a href="http://supervisord.org/" target="_blank" rel="noopener">http://supervisord.org/</a></p>
<p>守护进程的一个工具，基于 psutil 包，大概原理就是扫描当前进程是否存活，死掉就执行相关命令</p>
<p>一个常规的后台进程开启<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">!# bin/bash</span><br><span class="line">nohup ./kibana &gt;/dev/null 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure></p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">##  安装</span><br><span class="line">pip install supervisor</span><br><span class="line">echo_supervisord_conf &gt; /etc/supervisord.conf</span><br><span class="line">##  启动 deamon</span><br><span class="line">supervisord</span><br><span class="line">##  后台管理</span><br><span class="line">supervisorctl</span><br><span class="line">supervisorctl&gt;</span><br><span class="line">##  相关命令</span><br><span class="line">start stop reload update</span><br></pre></td></tr></table></figure>
<h2 id="supervisord-conf"><a href="#supervisord-conf" class="headerlink" title="supervisord.conf"></a>supervisord.conf</h2><p>里面注释齐全，自己可以学习。</p>
<ul>
<li><p>开启 web gui</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[inet_http_server]         ; inet (TCP) server disabled by default</span><br><span class="line">port=0.0.0.0:9001        ; (ip_address:port specifier, *:port for all iface)</span><br><span class="line">username=user              ; (default is no username (open server))</span><br><span class="line">password=123               ; (default is no password (open server))</span><br></pre></td></tr></table></figure>
</li>
<li><p>开启一个守护</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[program:ddd]</span><br><span class="line">command=sh root/echo.sh</span><br><span class="line">autorestart=true</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="http://img.sandseasoft.com/image/d/63/67eecb51f7eda15f9b7e09749d26e.png" alt></p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>devops</tag>
      </tags>
  </entry>
  <entry>
    <title>运维-php web环境搭建</title>
    <url>/2015/11/18/0045-%E8%BF%90%E7%BB%B4-php%20web%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<p>快速搭建一个 phpweb 环境<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">###  安装 nginx</span><br><span class="line">apt-get install nginx</span><br><span class="line">apt-get install php5 php5-fpm php-mysql</span><br></pre></td></tr></table></figure></p>
<h3 id="启动-php-fpm"><a href="#启动-php-fpm" class="headerlink" title="启动 php-fpm"></a>启动 php-fpm</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">###  默认端口9001</span><br><span class="line">/etc/init.d/php-fpm restart</span><br><span class="line">ps aux | grep -c php-fpm</span><br><span class="line">/usr/bin/php  -i|grep mem</span><br></pre></td></tr></table></figure>
<h3 id="连接"><a href="#连接" class="headerlink" title="连接"></a>连接</h3><p>找到nginx 的 php-fpm 修改重启<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">location ~ \.php$ &#123;</span><br><span class="line"> include snippets/fastcgi-php.conf</span><br><span class="line"> fastcgi_pass unix:/var/run/php5-fpm.sock;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">nginx -s reload</span><br></pre></td></tr></table></figure></p>
<h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">echo phpinfo();</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p>xdebug webgrind</p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>未归档</tag>
      </tags>
  </entry>
  <entry>
    <title>运维-万兆网络</title>
    <url>/2015/11/18/0046-%E8%BF%90%E7%BB%B4-%E4%B8%87%E5%85%86%E7%BD%91%E7%BB%9C/</url>
    <content><![CDATA[<p>DELL R720<br>芝奇<br>Ts719</p>
<p>QNO</p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>未归档</tag>
      </tags>
  </entry>
  <entry>
    <title>运维-File Sync</title>
    <url>/2015/11/18/0047-%E8%BF%90%E7%BB%B4-File%20Sync/</url>
    <content><![CDATA[<h1 id="远程复制"><a href="#远程复制" class="headerlink" title="远程复制"></a>远程复制</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 文件、目录复制上传</span><br><span class="line">scp [-r] /source root@172.0.0.1:/target</span><br><span class="line"># 增量同步</span><br><span class="line">rsync -zvr /var/opt/installation/inventory/ /root/temp</span><br><span class="line">rsync -avz /root/temp/ root@192.168.200.10:/home/root/temp/</span><br><span class="line">rsync -avz root@192.168.200.10:/var/lib/rpm /root/temp</span><br></pre></td></tr></table></figure>
<h1 id="远程挂载-sshfs"><a href="#远程挂载-sshfs" class="headerlink" title="远程挂载-sshfs"></a>远程挂载-sshfs</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">apt-get install sshfs</span><br><span class="line">sshfs -C -o reconnect root@127.0.0.1:/root/workspace /home/ghost</span><br></pre></td></tr></table></figure>
<h1 id="单向同步-lsyncd"><a href="#单向同步-lsyncd" class="headerlink" title="单向同步-lsyncd"></a>单向同步-lsyncd</h1><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">apt-get install lsyncd</span><br></pre></td></tr></table></figure>
<h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p>conf<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">## 设置日志文件，文件必须存在</span><br><span class="line">settings &#123;</span><br><span class="line">        logfile = &quot;/var/log/lsyncd/lsyncd.log&quot;,</span><br><span class="line">        statusFile = &quot;/var/log/lsyncd/lsyncd.status&quot;</span><br><span class="line">&#125;</span><br><span class="line">## 远程同步</span><br><span class="line">sync &#123;</span><br><span class="line">        default.rsyncssh,</span><br><span class="line">        source = &quot;/tmp/src&quot;,</span><br><span class="line">        host = &quot;104.131.152.150&quot;,</span><br><span class="line">        targetdir = &quot;/remote&quot;</span><br><span class="line">&#125;</span><br><span class="line">## 本地同步</span><br><span class="line">sync &#123;</span><br><span class="line">        default.rsync,</span><br><span class="line">        source = &quot;/tmp/src&quot;,</span><br><span class="line">        target = &quot;/tmp/dest&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>remote 配置 ssh-copy-id<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo su</span><br><span class="line">ssh-keygen -t rsa</span><br><span class="line">ssh-copy-id root@192.168.2.5</span><br><span class="line">ssh 192.168.2.5</span><br><span class="line">mkdir /remote</span><br></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">### 查看帮助</span><br><span class="line">lsyncd -help</span><br><span class="line">### debug 模式，测试通过直接可用</span><br><span class="line">lsyncd -nodaemon ~/lsyncd/lsyncd.conf.lua</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>devops</tag>
      </tags>
  </entry>
  <entry>
    <title>Performance Metrics、JavaMelody</title>
    <url>/2015/11/19/0048-Performance%20Metrics%E3%80%81JavaMelody/</url>
    <content><![CDATA[<h1 id="核心问题"><a href="#核心问题" class="headerlink" title="核心问题"></a>核心问题</h1><ul>
<li>服务</li>
<li>重试，超时，心跳，熔断，监控，重启。</li>
<li>load/network/database/io</li>
<li>审计日志、线上日志、后台日志 、*nix操作日志  </li>
</ul>
<h1 id="神器！-指标度量工具"><a href="#神器！-指标度量工具" class="headerlink" title="神器！ 指标度量工具"></a>神器！ 指标度量工具</h1><p><a href="https://github.com/dropwizard/metrics" target="_blank" rel="noopener">https://github.com/dropwizard/metrics</a></p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>写一个 MetricsUtils 方法，对指标定义，如下：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public class MetricUtils &#123;</span><br><span class="line"></span><br><span class="line">  public final static MetricRegistry metrics = new MetricRegistry();</span><br><span class="line"></span><br><span class="line">    //自定义维度</span><br><span class="line">  public final static Counter   COUNTER   = METRICS.counter(&quot;接口 C&quot;);</span><br><span class="line">  public final static Meter     METER     = METRICS.meter(&quot;接口 D&quot;);</span><br><span class="line">  public final static Histogram HISTOGRAM = METRICS.histogram(&quot;接口 B&quot;);</span><br><span class="line">  public final static Timer     TIMER     = METRICS.timer(&quot;接口 A&quot;);</span><br><span class="line"></span><br><span class="line">  //JVM 维度</span><br><span class="line">  public final static MemoryUsageGaugeSet       MEMORY                  = new MemoryUsageGaugeSet();</span><br><span class="line">  public final static GarbageCollectorMetricSet GC                      = new GarbageCollectorMetricSet();</span><br><span class="line">  public final static ThreadStatesGaugeSet      THREAD_STATES_GAUGE_SET = new ThreadStatesGaugeSet();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  static &#123;</span><br><span class="line"></span><br><span class="line">    QuicloudMonitorReporter reporter = QuicloudMonitorReporter.forRegistry(METRICS)</span><br><span class="line">        .addNoitfiers(&quot;接口 A&quot;, new Notifier&lt;Timer&gt;() &#123;</span><br><span class="line">          public void notice(Timer data) &#123;</span><br><span class="line">            if (data.getCount() &gt; 0) &#123;</span><br><span class="line">              System.out.println(&quot;通知!!! 同步个数超过&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">        .addNoitfiers(&quot;thread.count&quot;, new Notifier&lt;Gauge&gt;() &#123;</span><br><span class="line">          public void notice(Gauge data) &#123;</span><br><span class="line">            if ((Integer) data.getValue() &gt;= 200) &#123;</span><br><span class="line">              System.out.println(&quot;警告线程数超过 200!&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">        .build();</span><br><span class="line">    //警告!这里不要请不要把数值设置太小,撑爆日志服务器</span><br><span class="line">    reporter.start(1, TimeUnit.MINUTES);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ConsoleReporter reporter = ConsoleReporter.forRegistry(metrics)</span><br><span class="line">        .convertRatesTo(TimeUnit.SECONDS)</span><br><span class="line">        .convertDurationsTo(TimeUnit.MILLISECONDS)</span><br><span class="line">        .build();</span><br><span class="line">//    reporter.start(1, TimeUnit.SECONDS);</span><br><span class="line"></span><br><span class="line">    JmxReporter jmxReporter = JmxReporter.forRegistry(metrics).build();</span><br><span class="line">    jmxReporter.start();</span><br><span class="line"></span><br><span class="line">    Slf4jReporter slf4jReporter = Slf4jReporter.forRegistry(metrics)</span><br><span class="line">        .outputTo(LoggerFactory.getLogger(&quot;com.raycloud.express.metrics&quot;))</span><br><span class="line">        .convertRatesTo(TimeUnit.SECONDS)</span><br><span class="line">        .convertDurationsTo(TimeUnit.MILLISECONDS)</span><br><span class="line">        .build();</span><br><span class="line">    slf4jReporter.start(1, TimeUnit.MINUTES);  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="暴露数据到-webapi"><a href="#暴露数据到-webapi" class="headerlink" title="暴露数据到 webapi"></a>暴露数据到 webapi</h2><p>声明两个 listener<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">public class TJHealthCheckServletContextListener extends HealthCheckServlet.ContextListener &#123;</span><br><span class="line"></span><br><span class="line">  public static final HealthCheckRegistry HEALTH_CHECK_REGISTRY = new HealthCheckRegistry();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  @Override</span><br><span class="line">  protected HealthCheckRegistry getHealthCheckRegistry() &#123;</span><br><span class="line"></span><br><span class="line">    HEALTH_CHECK_REGISTRY.register(&quot;thread&quot;, new ThreadDeadlockHealthCheck());</span><br><span class="line"></span><br><span class="line">    return HEALTH_CHECK_REGISTRY;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  static</span><br><span class="line">  private void registerAll(String prefix, MetricSet metricSet, MetricRegistry registry) &#123;</span><br><span class="line">    for (Map.Entry&lt;String, Metric&gt; entry : metricSet.getMetrics().entrySet()) &#123;</span><br><span class="line">      if (entry.getValue() instanceof MetricSet) &#123;</span><br><span class="line">        registerAll(prefix + &quot;.&quot; + entry.getKey(), (MetricSet) entry.getValue(), registry);</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        registry.register(prefix + &quot;.&quot; + entry.getKey(), entry.getValue());</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public class TJMetricsServletContextListener extends MetricsServlet.ContextListener &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  @Override</span><br><span class="line">  protected MetricRegistry getMetricRegistry() &#123;</span><br><span class="line">    return MetricUtils.metrics;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>绑定在 web.xml<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;listener&gt;</span><br><span class="line">    &lt;listener-class&gt;com.raycloud.express.knowledge.web.listener.TJMetricsServletContextListener&lt;/listener-class&gt;</span><br><span class="line">&lt;/listener&gt; &lt;listener&gt;</span><br><span class="line">    &lt;listener-class&gt;com.raycloud.express.knowledge.web.listener.TJHealthCheckServletContextListener&lt;/listener-class&gt;</span><br><span class="line">&lt;/listener&gt;</span><br><span class="line">&lt;servlet&gt;</span><br><span class="line">    &lt;servlet-name&gt;metrics&lt;/servlet-name&gt;</span><br><span class="line">    &lt;servlet-class&gt;com.codahale.metrics.servlets.AdminServlet&lt;/servlet-class&gt;</span><br><span class="line">&lt;/servlet&gt;</span><br><span class="line">&lt;servlet-mapping&gt;</span><br><span class="line">    &lt;servlet-name&gt;metrics&lt;/servlet-name&gt;</span><br><span class="line">    &lt;url-pattern&gt;/metrics/*&lt;/url-pattern&gt;</span><br><span class="line">&lt;/servlet-mapping&gt;</span><br></pre></td></tr></table></figure></p>
<p>pom.xml<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"> &lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;io.dropwizard.metrics&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;metrics-servlets&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;3.1.0&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;io.dropwizard.metrics&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;metrics-core&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;$&#123;project.version&#125;&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;com.codahale.metrics&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;metrics-jvm&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure></p>
<p>然后在业务里面打点就好了，这里使用很简单。</p>
<p>访问路由：<br><a href="http://127.0.0.1/metrics/[metrics|ping|thread|health]" target="_blank" rel="noopener">http://127.0.0.1/metrics/[metrics|ping|thread|health]</a></p>
<p>常见的指标：</p>
<ol>
<li>Timer（以下所有）</li>
<li>Meter（m1-m15）</li>
<li>Histogram（p66-p999）</li>
<li>Gauge（一个维度值）</li>
<li>Count (统计个数)</li>
</ol>
<p><a href="https://github.com/elastic/elasticsearch-metrics-reporter-java" target="_blank" rel="noopener">https://github.com/elastic/elasticsearch-metrics-reporter-java</a></p>
<p>更多文档：<br><a href="http://metrics.dropwizard.io/3.1.0/" target="_blank" rel="noopener">http://metrics.dropwizard.io/3.1.0/</a><br>还看到了一些不错的插件集成 spring 、aspcetj、elasticsearch 的。</p>
<h1 id="monitoring-of-JavaEE-applications"><a href="#monitoring-of-JavaEE-applications" class="headerlink" title="monitoring of JavaEE applications"></a>monitoring of JavaEE applications</h1><p><a href="https://github.com/javamelody/javamelody" target="_blank" rel="noopener">https://github.com/javamelody/javamelody</a><br>关键指标全部都有，配置起来比较简单<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;filter&gt;</span><br><span class="line">    &lt;filter-name&gt;javamelody&lt;/filter-name&gt;</span><br><span class="line">    &lt;filter-class&gt;net.bull.javamelody.MonitoringFilter&lt;/filter-class&gt;</span><br><span class="line">    &lt;async-supported&gt;true&lt;/async-supported&gt;</span><br><span class="line">&lt;/filter&gt;</span><br><span class="line">&lt;filter-mapping&gt;</span><br><span class="line">    &lt;filter-name&gt;javamelody&lt;/filter-name&gt;</span><br><span class="line">    &lt;url-pattern&gt;/*&lt;/url-pattern&gt;</span><br><span class="line">    &lt;dispatcher&gt;REQUEST&lt;/dispatcher&gt;</span><br><span class="line">    &lt;!--&lt;dispatcher&gt;ASYNC&lt;/dispatcher&gt;--&gt;</span><br><span class="line">&lt;/filter-mapping&gt;</span><br><span class="line">&lt;listener&gt;</span><br><span class="line">    &lt;listener-class&gt;net.bull.javamelody.SessionListener&lt;/listener-class&gt;</span><br><span class="line">&lt;/listener&gt;</span><br></pre></td></tr></table></figure></p>
<p>pom.xml<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!-- javamelody-core --&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;net.bull.javamelody&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;javamelody-core&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;1.58.0&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;!-- itext, option to add PDF export --&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;com.lowagie&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;itext&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;2.1.7&lt;/version&gt;</span><br><span class="line">    &lt;exclusions&gt;</span><br><span class="line">        &lt;exclusion&gt;</span><br><span class="line">            &lt;artifactId&gt;bcmail-jdk14&lt;/artifactId&gt;</span><br><span class="line">            &lt;groupId&gt;bouncycastle&lt;/groupId&gt;</span><br><span class="line">        &lt;/exclusion&gt;</span><br><span class="line">        &lt;exclusion&gt;</span><br><span class="line">            &lt;artifactId&gt;bcprov-jdk14&lt;/artifactId&gt;</span><br><span class="line">            &lt;groupId&gt;bouncycastle&lt;/groupId&gt;</span><br><span class="line">        &lt;/exclusion&gt;</span><br><span class="line">        &lt;exclusion&gt;</span><br><span class="line">            &lt;artifactId&gt;bctsp-jdk14&lt;/artifactId&gt;</span><br><span class="line">            &lt;groupId&gt;bouncycastle&lt;/groupId&gt;</span><br><span class="line">        &lt;/exclusion&gt;</span><br><span class="line">    &lt;/exclusions&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;com.thoughtworks.xstream&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;xstream&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;1.4.9&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure></p>
<p><img src="http://img.sandseasoft.com/image/c/f7/8aad90ae3a37dd9eebf90c5f49cdf.png" alt></p>
<h3 id="路由请求地址"><a href="#路由请求地址" class="headerlink" title="路由请求地址"></a>路由请求地址</h3><p><a href="http://127.0.0.1:8888/monitoring" target="_blank" rel="noopener">http://127.0.0.1:8888/monitoring</a></p>
<h3 id="api-说明文档"><a href="#api-说明文档" class="headerlink" title="api 说明文档"></a>api 说明文档</h3><p><a href="http://127.0.0.1:8888/monitoring?resource=help/api.html" target="_blank" rel="noopener">http://127.0.0.1:8888/monitoring?resource=help/api.html</a></p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>Deploy Tomcat</title>
    <url>/2015/11/19/0049-Deploy%20Tomcat/</url>
    <content><![CDATA[<p>虽然是最基本的，浪费我好多时间，记录如下</p>
<p><a href="http://tomcat.apache.org/" target="_blank" rel="noopener">http://tomcat.apache.org/</a></p>
<h1 id="安装-java7-orcale"><a href="#安装-java7-orcale" class="headerlink" title="安装 java7-orcale"></a>安装 java7-orcale</h1><h1 id="配置setenv-sh"><a href="#配置setenv-sh" class="headerlink" title="配置setenv.sh"></a>配置setenv.sh</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">JAVA_OPTS=&apos;-server -Xms1024M -Xmx1024M  -XX:PermSize=512M&apos;</span><br><span class="line">JAVA_HOME=&quot;/usr/lib/jvm/java-7-oracle/&quot;</span><br></pre></td></tr></table></figure>
<h1 id="管理界面"><a href="#管理界面" class="headerlink" title="管理界面"></a>管理界面</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vim conf/tomcat-users.xml</span><br><span class="line"></span><br><span class="line">&lt;role rolename=&quot;manager-gui&quot;/&gt;</span><br><span class="line">&lt;role rolename=&quot;manager-jmx&quot;/&gt;</span><br><span class="line">&lt;role rolename=&quot;manager-status&quot;/&gt;</span><br><span class="line">&lt;role rolename=&quot;manager-script&quot;/&gt;</span><br><span class="line">  &lt;role rolename=&quot;admin-gui&quot;/&gt;</span><br><span class="line">  &lt;user username=&quot;tomcat&quot; password=&quot;s3cret&quot; roles=&quot;admin-gui&quot;/&gt;</span><br><span class="line">&lt;user username=&quot;tomcat1&quot; password=&quot;tomcat&quot; roles=&quot;manager-gui&quot;/&gt;</span><br><span class="line">&lt;user username=&quot;tomcat2&quot; password=&quot;tomcat&quot; roles=&quot;manager-jmx&quot;/&gt;</span><br><span class="line">&lt;user username=&quot;tomcat3&quot; password=&quot;tomcat&quot; roles=&quot;manager-status&quot;/&gt;</span><br><span class="line">&lt;user username=&quot;tomcat4&quot; password=&quot;tomcat&quot; roles=&quot;manager-script&quot;/&gt;</span><br></pre></td></tr></table></figure>
<h1 id="配置conf-server-xml"><a href="#配置conf-server-xml" class="headerlink" title="配置conf/server.xml"></a>配置conf/server.xml</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">## 修改容器端口</span><br><span class="line">&lt;Server port=&quot;30004&quot; shutdown=&quot;SHUTDOWN&quot;&gt;</span><br><span class="line">## 增加 UTF8 编码修复</span><br><span class="line">&lt;Connector port=&quot;8083&quot; protocol=&quot;HTTP/1.1&quot;</span><br><span class="line">useBodyEncodingForURI=&quot;true&quot; URIEncoding=&quot;UTF-8&quot;</span><br><span class="line">## 删除 AJP 端口暴露</span><br><span class="line">&lt;!-- Define an AJP 1.3 Connector on port 8009 --&gt;</span><br></pre></td></tr></table></figure>
<p>当然可以直接使用 maven-plugin<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;plugin&gt;</span><br><span class="line">  &lt;groupId&gt;org.apache.tomcat.maven&lt;/groupId&gt;</span><br><span class="line">  &lt;artifactId&gt;tomcat7-maven-plugin&lt;/artifactId&gt;</span><br><span class="line">  &lt;version&gt;2.2&lt;/version&gt;</span><br><span class="line">&lt;/plugin&gt;</span><br></pre></td></tr></table></figure></p>
<h2 id="更改域名"><a href="#更改域名" class="headerlink" title="更改域名"></a>更改域名</h2><p>在 server.xml 的<host>标签增加<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;Context path=&quot;/jsp&quot; docBase=&quot;e:/jsp&quot; debug=&quot;0&quot; reloadable=&quot;true&quot; allowLinking=&quot;true&quot;&gt; &lt;/Context&gt;</span><br></pre></td></tr></table></figure></host></p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>Depoly gunicorn</title>
    <url>/2015/11/19/0050-Depoly%20gunicorn/</url>
    <content><![CDATA[<p>nginx+gunicorn+flask</p>
<p><a href="http://gunicorn.org/#" target="_blank" rel="noopener">http://gunicorn.org/#</a> quickstart</p>
<p>使用很简单</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ sudo pip install virtualenv</span><br><span class="line">$ mkdir ~/environments/</span><br><span class="line">$ virtualenv ~/environments/tutorial/</span><br><span class="line">$ cd ~/environments/tutorial/</span><br><span class="line">$ ls</span><br><span class="line">bin  include  lib</span><br><span class="line">$ source bin/activate</span><br><span class="line">(tutorial) $ pip install gunicorn</span><br><span class="line">(tutorial) $ mkdir myapp</span><br><span class="line">(tutorial) $ cd myapp/</span><br><span class="line">(tutorial) $ vi myapp.py</span><br><span class="line">(tutorial) $ cat myapp.py</span><br><span class="line"></span><br><span class="line">def app(environ, start_response):</span><br><span class="line">    data = &quot;Hello, World!\n&quot;</span><br><span class="line">    start_response(&quot;200 OK&quot;, [</span><br><span class="line">        (&quot;Content-Type&quot;, &quot;text/plain&quot;),</span><br><span class="line">        (&quot;Content-Length&quot;, str(len(data)))</span><br><span class="line">    ])</span><br><span class="line">    return iter([data])</span><br><span class="line"></span><br><span class="line">(tutorial) $ ../bin/gunicorn -w 4 myapp:app</span><br><span class="line">[2014-09-10 10:22:28 +0000] [30869] [INFO] Listening at: http://127.0.0.1:8000 (30869)</span><br><span class="line">[2014-09-10 10:22:28 +0000] [30869] [INFO] Using worker: sync</span><br><span class="line">[2014-09-10 10:22:28 +0000] [30874] [INFO] Booting worker with pid: 30874</span><br><span class="line">[2014-09-10 10:22:28 +0000] [30875] [INFO] Booting worker with pid: 30875</span><br><span class="line">[2014-09-10 10:22:28 +0000] [30876] [INFO] Booting worker with pid: 30876</span><br><span class="line">[2014-09-10 10:22:28 +0000] [30877] [INFO] Booting worker with pid: 30877</span><br></pre></td></tr></table></figure>
<p>然后 nginx 再反代一下就好了</p>
<p>tornado</p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>部署-sentry</title>
    <url>/2015/11/19/0051-%E9%83%A8%E7%BD%B2-sentry/</url>
    <content><![CDATA[<p>文档</p>
<p><a href="https://docs.getsentry.com/on-premise" target="_blank" rel="noopener">https://docs.getsentry.com/on-premise</a></p>
<p>lxml 依赖问题</p>
<p><a href="http://stackoverflow.com/questions/5178416/pip-install-lxml-error" target="_blank" rel="noopener">http://stackoverflow.com/questions/5178416/pip-install-lxml-error</a></p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>未归档</tag>
      </tags>
  </entry>
  <entry>
    <title>2014阿里云企业架构会场总结</title>
    <url>/2015/11/20/0053-2014%E9%98%BF%E9%87%8C%E4%BA%91%E4%BC%81%E4%B8%9A%E6%9E%B6%E6%9E%84%E4%BC%9A%E5%9C%BA%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<p>几个很有意思的项目</p>
<p>阿里云平台 架构云(运维Saas)<br>Face++(人脸识别,活体检测)<br>企业安全云盘(分区加密VerbType)<br>车联网,大数据分析(R语言 Hadoop应用)</p>
<p>阿里云产品</p>
<p>RDS,OSS,OTS,OCS,ODPS,ECS,SLB,CDN (TIS,ONES)<br>一些散词</p>
<p>CRM/大数据分析/供应链管理/分销管理/跨界营销/微信管理<br>支付宝公众号/易信公众号/微信公众号/百度直达号/企业APP/微信营销/传统互联网/移动WAP</p>
<p>基于阿里云平台的SAAS CRM架构实践</p>
<p>多平台打通,通用的电商数据采集,按模分配,宽表查询(solrCould)<br>SLB Master 5MB /Cluster 1M  , aliyun 内网/上行带宽free<br>车联网大数据分析与应用</p>
<p>分类,聚类,关联规则挖掘,回归,降维,推荐<br>SaaS应用海量数据的RDS解决之道, 万里牛的CEO报告<br><img src="http://img.sandseasoft.com/image/a/8d/5dfed36737a3316d2e3b89d42ac06.jpg" alt></p>
<p>![]</p>
<p><img src="http://img.sandseasoft.com/image/c/2b/7753827229d4f630bdd2aee864e28.jpg" alt><br>和目前大卖家的架构整体一致, 已经完成DBWapper, 也就是多个实例分库路由.</p>
<p>前端强大,不过耦合高, </p>
<p>完.</p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>manage</tag>
      </tags>
  </entry>
  <entry>
    <title>IDE IDEA/SequelPro</title>
    <url>/2015/11/23/0054-IDE%20IDEA-SequelPro/</url>
    <content><![CDATA[<h1 id="idea"><a href="#idea" class="headerlink" title="idea"></a>idea</h1><p><a href="https://www.jetbrains.com/idea/" target="_blank" rel="noopener">https://www.jetbrains.com/idea/</a></p>
<h2 id="破解"><a href="#破解" class="headerlink" title="破解"></a>破解</h2><p>docker-image-&gt;dominate/idea-license-server<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker run -d -p 1017:1017 dominate/idea-license-server</span><br></pre></td></tr></table></figure></p>
<h2 id="一些配置"><a href="#一些配置" class="headerlink" title="一些配置"></a>一些配置</h2><p>google style for idea<br><a href="https://github.com/darcyliu/google-styleguide/blob/master/intellij-java-google-style.xml" target="_blank" rel="noopener">https://github.com/darcyliu/google-styleguide/blob/master/intellij-java-google-style.xml</a></p>
<p><img src="http://img.sandseasoft.com/image/7/b4/dec7fc03a4d4bc8f3a939930af3df.png" alt></p>
<h2 id="tips"><a href="#tips" class="headerlink" title="tips"></a>tips</h2><ul>
<li>welcome 页面的配置是全局的 </li>
</ul>
<h1 id="SequelPro"><a href="#SequelPro" class="headerlink" title="SequelPro"></a>SequelPro</h1><p><a href="http://www.sequelpro.com/" target="_blank" rel="noopener">http://www.sequelpro.com/</a></p>
<ul>
<li>tips:配置使用，可以带会话工作</li>
</ul>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>manage</tag>
      </tags>
  </entry>
  <entry>
    <title>profile JProfiler9</title>
    <url>/2015/11/23/0055-profile%20JProfiler9/</url>
    <content><![CDATA[<h1 id="官网"><a href="#官网" class="headerlink" title="官网"></a>官网</h1><p>jprofiler9新版，支持remote ssh tunnel，跳版机…JVM界的idea<br><a href>www.ej-technologies.com/products/jprofiler/overview.html
</a></p>
<h2 id="破解"><a href="#破解" class="headerlink" title="破解:"></a>破解:</h2><p>key <a href="mailto:L-Larry_Lau@163.com" target="_blank" rel="noopener">L-Larry_Lau@163.com</a># 36573-fdkscp15axjj6# 25257</p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>下载两份包，一份 gui，一份 linux agent</p>
<h3 id="gui-相关"><a href="#gui-相关" class="headerlink" title="gui 相关"></a>gui 相关</h3><ul>
<li>session-&gt;ide integrations</li>
<li>telemetries-&gt;各种监控面板，可以添加自定义 MBeans</li>
<li>live memory-&gt;实时看内存使用状态</li>
<li>cpu views-&gt;实时看 cpu 使用状态，可以看方法调用时间 trace</li>
<li>heap walker-&gt;根据dump整体分析一个 heap 的内容，这里可以对 hprof快照分析</li>
<li>threas/monitoers、locks</li>
<li>databases-&gt;连接池状态，slow sqls</li>
<li>MBeans-&gt;查看、添加自定义 beans</li>
</ul>
<p>比较有用的功能</p>
<ul>
<li>remote ssh profiling</li>
<li>live memory all objects aggregations level by packages</li>
<li>javascrtipt XHR</li>
<li>databases jdbc hotspots</li>
<li>class loaders</li>
<li>MBeans-&gt; java.lang.*</li>
</ul>
<p>学会查看cpu 占用百分比，找出性能瓶颈，根据28定律优化到最佳。<br>内存问题查看class cpu profile，很多时候 cglib 不会造成内存泄露，但是 load 过高，内存自然无法释放。找出 io、net io、cpu 、sql的瓶颈尝试优化。</p>
<h3 id="agent"><a href="#agent" class="headerlink" title="agent"></a>agent</h3><p>相关教程</p>
<p><a href="http://blog.ej-technologies.com/2015/11/remote-profiling-through-ssh-tunnel.html" target="_blank" rel="noopener">http://blog.ej-technologies.com/2015/11/remote-profiling-through-ssh-tunnel.html</a></p>
<ol>
<li>agent.tar.gz upload 到 servers</li>
<li>执行./bin/jpenable会自动找到需要监听的 jvms 开启端口</li>
<li>ssh remote views, gui settings</li>
</ol>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>manage</tag>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring-datasource</title>
    <url>/2015/11/23/0056-Spring-datasource/</url>
    <content><![CDATA[<p>data-source 配置<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">   &lt;bean id=&quot;logFilter&quot; class=&quot;com.alibaba.druid.filter.logging.Slf4jLogFilter&quot;&gt;</span><br><span class="line">    &lt;property name=&quot;statementExecutableSqlLogEnable&quot; value=&quot;true&quot;/&gt;</span><br><span class="line">&lt;/bean&gt;</span><br><span class="line"></span><br><span class="line">&lt;bean id=&quot;stat-filter&quot; class=&quot;com.alibaba.druid.filter.stat.StatFilter&quot;&gt;</span><br><span class="line">    &lt;property name=&quot;slowSqlMillis&quot; value=&quot;1000&quot; /&gt;</span><br><span class="line">    &lt;property name=&quot;logSlowSql&quot; value=&quot;true&quot; /&gt;</span><br><span class="line">&lt;/bean&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;bean id=&quot;dataSourceOracle&quot; class=&quot;com.alibaba.druid.pool.DruidDataSource&quot;</span><br><span class="line">      init-method=&quot;init&quot; destroy-method=&quot;close&quot;&gt;</span><br><span class="line">    &lt;property name=&quot;driverClassName&quot; value=&quot;$&#123;ojdbc.driverClass&#125;&quot;/&gt;</span><br><span class="line">    &lt;property name=&quot;url&quot; value=&quot;$&#123;ojdbc.url&#125;&quot;/&gt;</span><br><span class="line">    &lt;property name=&quot;username&quot; value=&quot;$&#123;ojdbc.username&#125;&quot;/&gt;</span><br><span class="line">    &lt;property name=&quot;password&quot; value=&quot;$&#123;ojdbc.password&#125;&quot;/&gt;</span><br><span class="line">    &lt;!-- 配置初始化大小、最小、最大 --&gt;</span><br><span class="line">    &lt;property name=&quot;initialSize&quot; value=&quot;10&quot;/&gt;</span><br><span class="line">    &lt;property name=&quot;minIdle&quot; value=&quot;1&quot;/&gt;</span><br><span class="line">    &lt;property name=&quot;maxActive&quot; value=&quot;50&quot;/&gt;</span><br><span class="line">    &lt;!-- 配置获取连接等待超时的时间 --&gt;</span><br><span class="line">    &lt;property name=&quot;maxWait&quot; value=&quot;10000&quot;/&gt;</span><br><span class="line">    &lt;!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 --&gt;</span><br><span class="line">    &lt;property name=&quot;timeBetweenEvictionRunsMillis&quot; value=&quot;60000&quot;/&gt;</span><br><span class="line">    &lt;!-- 配置一个连接在池中最小生存的时间，单位是毫秒 --&gt;</span><br><span class="line">    &lt;property name=&quot;minEvictableIdleTimeMillis&quot; value=&quot;300000&quot;/&gt;</span><br><span class="line">    &lt;property name=&quot;testWhileIdle&quot; value=&quot;true&quot;/&gt;</span><br><span class="line">    &lt;!-- 这里建议配置为TRUE，防止取到的连接不可用 --&gt;</span><br><span class="line">    &lt;property name=&quot;testOnBorrow&quot; value=&quot;true&quot;/&gt;</span><br><span class="line">    &lt;property name=&quot;testOnReturn&quot; value=&quot;false&quot;/&gt;</span><br><span class="line">    &lt;!-- 打开PSCache，并且指定每个连接上PSCache的大小 --&gt;</span><br><span class="line">    &lt;property name=&quot;poolPreparedStatements&quot; value=&quot;true&quot;/&gt;</span><br><span class="line">    &lt;property name=&quot;maxPoolPreparedStatementPerConnectionSize&quot;</span><br><span class="line">              value=&quot;20&quot;/&gt;</span><br><span class="line">    &lt;!-- 这里配置提交方式，默认就是TRUE，可以不用配置 --&gt;</span><br><span class="line">    &lt;property name=&quot;defaultAutoCommit&quot; value=&quot;true&quot;/&gt;</span><br><span class="line">    &lt;!-- 验证连接有效与否的SQL，不同的数据配置不同 --&gt;</span><br><span class="line">    &lt;property name=&quot;validationQuery&quot; value=&quot;select 1 FROM DUAL &quot;/&gt;</span><br><span class="line">    &lt;property name=&quot;filters&quot; value=&quot;stat&quot;/&gt;</span><br><span class="line">    &lt;property name=&quot;proxyFilters&quot;&gt;</span><br><span class="line">        &lt;list&gt;</span><br><span class="line">            &lt;ref bean=&quot;logFilter&quot;/&gt;</span><br><span class="line">            &lt;ref bean=&quot;stat-filter&quot;/&gt;</span><br><span class="line">        &lt;/list&gt;</span><br><span class="line">    &lt;/property&gt;</span><br><span class="line">&lt;/bean&gt;</span><br></pre></td></tr></table></figure></p>
<p> spring-tx.xml 配置<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;bean id=&quot;txManager&quot; class=&quot;org.springframework.jdbc.datasource.DataSourceTransactionManager&quot;&gt;</span><br><span class="line">    &lt;property name=&quot;dataSource&quot; ref=&quot;dataSource&quot;/&gt;</span><br><span class="line">&lt;/bean&gt;</span><br><span class="line">&lt;tx:annotation-driven transaction-manager=&quot;txManager&quot; proxy-target-class=&quot;true&quot;/&gt;</span><br></pre></td></tr></table></figure></p>
<p>jdbc-template<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">   &lt;bean id=&quot;jdbcTemplate&quot;</span><br><span class="line">      class=&quot;org.springframework.jdbc.core.JdbcTemplate&quot;</span><br><span class="line">      lazy-init=&quot;false&quot;&gt;</span><br><span class="line">    &lt;property name=&quot;dataSource&quot; ref=&quot;expressDataSource&quot;/&gt;</span><br><span class="line">&lt;/bean&gt;</span><br></pre></td></tr></table></figure></p>
<p>手动事务使用<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@Resource</span><br><span class="line">private PlatformTransactionManager txnMgr;</span><br><span class="line">public void deleteItems(Staff staff, Long sysItemId) &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  TransactionStatus status = txnMgr.getTransaction(new DefaultTransactionDefinition());</span><br><span class="line">  try &#123;</span><br><span class="line">    stockService.deleteStock4DeleteSysItem(staff, dmjItem);</span><br><span class="line">    iDmjItemDAO.deleteBySysItemId(staff, sysItemId);</span><br><span class="line">    iDmjSkuDAO.deleteBySysItemId(staff, Lists.newArrayList(sysItemId));</span><br><span class="line">    erpBridgeDAO.deleteByItemSysId(staff, Lists.newArrayList(sysItemId));</span><br><span class="line">    skuErpBridgeDAO.deleteByItemSysId(staff, Lists.newArrayList(sysItemId));</span><br><span class="line">    txnMgr.commit(status);</span><br><span class="line"></span><br><span class="line">  &#125; catch (Exception e) &#123;</span><br><span class="line">    txnMgr.rollback(status);</span><br><span class="line">    logger.error(LogHelper.buildLogHead(staff) + &quot;批量删除异常&quot;, e);</span><br><span class="line">    throw new DataAccessException(&quot;批量删除异常&quot;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p><img src="http://img.sandseasoft.com/image/d/b0/cc88f852d1f1fd1d9a6cfa8f9d2b9.png" alt></p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>并发队列框架-disruptor</title>
    <url>/2015/11/23/0057-%E5%B9%B6%E5%8F%91%E9%98%9F%E5%88%97%E6%A1%86%E6%9E%B6-disruptor/</url>
    <content><![CDATA[<p>出自 LMAX</p>
<p><a href="https://github.com/LMAX-Exchange/disruptor" target="_blank" rel="noopener">https://github.com/LMAX-Exchange/disruptor</a></p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>未归档</tag>
      </tags>
  </entry>
  <entry>
    <title>Java concurrent</title>
    <url>/2015/11/25/0058-Java%20concurrent/</url>
    <content><![CDATA[<h1 id="原子"><a href="#原子" class="headerlink" title="原子"></a>原子</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@Test</span><br><span class="line">public void _testMain() throws Exception &#123;</span><br><span class="line">  AtomicLong aLong = new AtomicLong(1);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="基础接口-callable-future-futuretask"><a href="#基础接口-callable-future-futuretask" class="headerlink" title="基础接口 callable\future\futuretask"></a>基础接口 callable\future\futuretask</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public class ThreadDemoTest &#123;</span><br><span class="line"></span><br><span class="line">  @Test</span><br><span class="line">  public void testMain() throws Exception &#123;</span><br><span class="line">    new Thread(new Runnable() &#123;</span><br><span class="line">      public void run() &#123;</span><br><span class="line">        System.out.println(&quot;hello world&quot;);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;).start();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  @Test</span><br><span class="line">  public void testMain2() throws Exception &#123;</span><br><span class="line">    ExecutorService executor = Executors.newCachedThreadPool();</span><br><span class="line"></span><br><span class="line">    Future&lt;Long&gt; result = executor.submit(new Callable&lt;Long&gt;() &#123;</span><br><span class="line">      public Long call() throws Exception &#123;</span><br><span class="line">        return 0L;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    System.out.println(result.get());</span><br><span class="line"></span><br><span class="line">    FutureTask&lt;Long&gt; result2 = new FutureTask&lt;Long&gt;(new Callable&lt;Long&gt;() &#123;</span><br><span class="line">      public Long call() throws Exception &#123;</span><br><span class="line">        return 0L;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    executor.submit(result2);</span><br><span class="line">    System.out.println(result2.get());</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="线程池"><a href="#线程池" class="headerlink" title="线程池"></a>线程池</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@Test</span><br><span class="line">public void testMain4() &#123;</span><br><span class="line">  //线程安全的数据结构</span><br><span class="line"></span><br><span class="line">  //常见的阻塞队列,即队列满等待</span><br><span class="line">  Queue&lt;Long&gt; queue1 = new ArrayBlockingQueue&lt;Long&gt;(1024);</span><br><span class="line">  Queue&lt;Long&gt; queue2 = new LinkedBlockingDeque&lt;Long&gt;(1024);</span><br><span class="line">  Queue&lt;Long&gt; queue3 = new PriorityBlockingQueue&lt;Long&gt;(1024);</span><br><span class="line"></span><br><span class="line">  //常见的数据字段</span><br><span class="line">  Map&lt;String, Object&gt; dict = new ConcurrentHashMap&lt;String, Object&gt;();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="线程安全数据结构"><a href="#线程安全数据结构" class="headerlink" title="线程安全数据结构"></a>线程安全数据结构</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@Test</span><br><span class="line">public void testMain4() &#123;</span><br><span class="line">  //线程安全的数据结构</span><br><span class="line"></span><br><span class="line">  //常见的阻塞队列,即队列满等待</span><br><span class="line">  Queue&lt;Long&gt; queue1 = new ArrayBlockingQueue&lt;Long&gt;(1024);</span><br><span class="line">  Queue&lt;Long&gt; queue2 = new LinkedBlockingDeque&lt;Long&gt;(1024);</span><br><span class="line">  Queue&lt;Long&gt; queue3 = new PriorityBlockingQueue&lt;Long&gt;(1024);</span><br><span class="line"></span><br><span class="line">  //常见的数据字段</span><br><span class="line">  Map&lt;String, Object&gt; dict = new ConcurrentHashMap&lt;String, Object&gt;();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@Test</span><br><span class="line">public void testMain5() throws InterruptedException &#123;</span><br><span class="line"></span><br><span class="line">  //闭锁, 当 countDown 调用3次, wait 阻塞才会释放</span><br><span class="line">  CountDownLatch latch = new CountDownLatch(3);</span><br><span class="line"></span><br><span class="line">  latch.countDown();</span><br><span class="line">  latch.countDown();</span><br><span class="line">  latch.countDown();</span><br><span class="line"></span><br><span class="line">  latch.wait();</span><br><span class="line"></span><br><span class="line">  //栅栏,当2个线程阻塞才会释放</span><br><span class="line">  CyclicBarrier barrier = new CyclicBarrier(2);</span><br><span class="line">  barrier.await();</span><br><span class="line"></span><br><span class="line">  //信号量, 保证1个线程通过当前方法</span><br><span class="line">  Semaphore semaphore = new Semaphore(1);</span><br><span class="line"></span><br><span class="line">  semaphore.acquire();</span><br><span class="line"></span><br><span class="line">  semaphore.release();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="增强包-guava"><a href="#增强包-guava" class="headerlink" title="增强包 guava"></a>增强包 guava</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">//todo</span><br></pre></td></tr></table></figure>
<p>线城池<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@Test</span><br><span class="line">public void testMain3() throws Exception &#123;</span><br><span class="line">  //固定最大线程数</span><br><span class="line">  ExecutorService executor1 = Executors.newFixedThreadPool(Runtime.getRuntime().availableProcessors());</span><br><span class="line">  //存在超时机制,缓存复用线程</span><br><span class="line">  ExecutorService executor2 = Executors.newCachedThreadPool();</span><br><span class="line">  //单列线程</span><br><span class="line">  ExecutorService executor3 = Executors.newSingleThreadExecutor();</span><br><span class="line">  //线程周期执行,固定大小</span><br><span class="line">  ExecutorService executor4 = Executors.newScheduledThreadPool(4);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h1 id="forkjoin"><a href="#forkjoin" class="headerlink" title="forkjoin"></a>forkjoin</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">  @Test</span><br><span class="line">  public void testMain6() &#123;</span><br><span class="line"></span><br><span class="line">    ForkJoinPool pool = new ForkJoinPool(Runtime.getRuntime().availableProcessors());</span><br><span class="line">    pool.invoke(new SubTask());</span><br><span class="line">    Long result=pool.submit(new SubTask2()).get();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class SubTask extends RecursiveAction &#123;</span><br><span class="line"></span><br><span class="line">  private int beg;</span><br><span class="line">  private int end;</span><br><span class="line"></span><br><span class="line">  @Override</span><br><span class="line">  protected void compute() &#123;</span><br><span class="line">    if (end - beg &gt; Runtime.getRuntime().availableProcessors()) &#123;</span><br><span class="line">      int mid = (beg + end) / 2;</span><br><span class="line">      SubTask</span><br><span class="line">          t1 = new SubTask().setBeg(beg).setEnd(mid);</span><br><span class="line">      SubTask</span><br><span class="line">          t2 = new SubTask().setBeg(mid).setEnd(end);</span><br><span class="line">      invokeAll(t1, t2);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line"></span><br><span class="line">      return;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  public int getBeg() &#123;</span><br><span class="line">    return beg;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  public SubTask setBeg(int beg) &#123;</span><br><span class="line">    this.beg = beg;</span><br><span class="line">    return this;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  public int getEnd() &#123;</span><br><span class="line">    return end;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  public SubTask setEnd(int end) &#123;</span><br><span class="line">    this.end = end;</span><br><span class="line">    return this;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class SubTask2 extends RecursiveTask&lt;Long&gt; &#123;</span><br><span class="line"></span><br><span class="line">  private int beg;</span><br><span class="line">  private int end;</span><br><span class="line"></span><br><span class="line">  @Override</span><br><span class="line">  protected Long compute() &#123;</span><br><span class="line"></span><br><span class="line">    List&lt;RecursiveTask&lt;SubTask2&gt;&gt; subtasks =</span><br><span class="line">        new ArrayList&lt;RecursiveTask&lt;SubTask2&gt;&gt;();</span><br><span class="line"></span><br><span class="line">    if (end - beg &gt; Runtime.getRuntime().availableProcessors()) &#123;</span><br><span class="line">      int mid = (beg + end) / 2;</span><br><span class="line">      SubTask2</span><br><span class="line">          t1 = new SubTask2().setBeg(beg).setEnd(mid);</span><br><span class="line">      SubTask2</span><br><span class="line">          t2 = new SubTask2().setBeg(mid).setEnd(end);</span><br><span class="line">      t1.fork();</span><br><span class="line">      t2.fork();</span><br><span class="line"></span><br><span class="line">      return t1.join() + t2.join();</span><br><span class="line">    &#125;</span><br><span class="line">    return 1L;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  public int getBeg() &#123;</span><br><span class="line">    return beg;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  public SubTask2 setBeg(int beg) &#123;</span><br><span class="line">    this.beg = beg;</span><br><span class="line">    return this;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  public int getEnd() &#123;</span><br><span class="line">    return end;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  public SubTask2 setEnd(int end) &#123;</span><br><span class="line">    this.end = end;</span><br><span class="line">    return this;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="actors-eventBus-模型"><a href="#actors-eventBus-模型" class="headerlink" title="actors/eventBus 模型"></a>actors/eventBus 模型</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">  @Test</span><br><span class="line">  public void testMain7() &#123;</span><br><span class="line">    EventBus eventBus = new EventBus(&quot;test&quot;);</span><br><span class="line">    EventListener listener = new EventListener();</span><br><span class="line"></span><br><span class="line">    eventBus.register(listener);</span><br><span class="line"></span><br><span class="line">    eventBus.post(new TestEvent(200));</span><br><span class="line">    eventBus.post(new TestEvent(300));</span><br><span class="line">    eventBus.post(new TestEvent(400));</span><br><span class="line"></span><br><span class="line">    System.out.println(&quot;LastMessage:&quot; + listener.getLastMessage());</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class TestEvent &#123;</span><br><span class="line"></span><br><span class="line">  private final int message;</span><br><span class="line"></span><br><span class="line">  public TestEvent(int message) &#123;</span><br><span class="line">    this.message = message;</span><br><span class="line">    System.out.println(&quot;event message:&quot; + message);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  public int getMessage() &#123;</span><br><span class="line">    return message;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class EventListener &#123;</span><br><span class="line"></span><br><span class="line">  public int lastMessage = 0;</span><br><span class="line"></span><br><span class="line">  @Subscribe</span><br><span class="line">  public void listen(TestEvent event) &#123;</span><br><span class="line">    lastMessage = event.getMessage();</span><br><span class="line">    System.out.println(&quot;Message:&quot; + lastMessage);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  public int getLastMessage() &#123;</span><br><span class="line">    return lastMessage;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="并发框架-Disruptor"><a href="#并发框架-Disruptor" class="headerlink" title="并发框架 Disruptor"></a>并发框架 Disruptor</h1><p>效率很高，有很多 hack 写法，非常值得学习</p>
<p><a href="https://github.com/LMAX-Exchange/disruptor" target="_blank" rel="noopener">https://github.com/LMAX-Exchange/disruptor</a><br><a href="http://ifeve.com/disruptor-getting-started/" target="_blank" rel="noopener">http://ifeve.com/disruptor-getting-started/</a></p>
<h1 id="书籍"><a href="#书籍" class="headerlink" title="书籍"></a>书籍</h1><p>《JAVA并发编程实践》</p>
<h1 id="很有意思的一个项目"><a href="#很有意思的一个项目" class="headerlink" title="很有意思的一个项目"></a>很有意思的一个项目</h1><p><a href="http://sourceforge.net/projects/javaconcurrenta/" target="_blank" rel="noopener">http://sourceforge.net/projects/javaconcurrenta/</a></p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>Java Cache</title>
    <url>/2015/11/25/0059-Java%20Cache/</url>
    <content><![CDATA[<h1 id="heap内存相关"><a href="#heap内存相关" class="headerlink" title="heap内存相关"></a>heap内存相关</h1><h2 id="concurrenthashmap"><a href="#concurrenthashmap" class="headerlink" title="concurrenthashmap"></a>concurrenthashmap</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public Map&lt;String, String&gt; dict = new ConcurrentHashMap&lt;String, String&gt;();</span><br></pre></td></tr></table></figure>
<h2 id="guava-cache"><a href="#guava-cache" class="headerlink" title="guava-cache"></a>guava-cache</h2><p><a href="https://github.com/google/guava/wiki" target="_blank" rel="noopener">https://github.com/google/guava/wiki</a><br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">LoadingCache&lt;String, String&gt; cahceBuilder = CacheBuilder</span><br><span class="line">    .newBuilder()</span><br><span class="line">    .build(new CacheLoader&lt;String, String&gt;() &#123;</span><br><span class="line">      @Override</span><br><span class="line">      public String load(String key) throws Exception &#123;</span><br><span class="line">        System.out.println(&quot;加载 key :&quot; + key);</span><br><span class="line">        return key;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">cahceBuilder.put(&quot;zuoyun&quot;, &quot;123456&quot;);</span><br></pre></td></tr></table></figure></p>
<h1 id="分布式内存网格"><a href="#分布式内存网格" class="headerlink" title="分布式内存网格"></a>分布式内存网格</h1><h2 id="hazelcast"><a href="#hazelcast" class="headerlink" title="hazelcast"></a>hazelcast</h2><p><a href="https://hazelcast.com/products/" target="_blank" rel="noopener">https://hazelcast.com/products/</a><br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">public class HazelcastDemo &#123;</span><br><span class="line"></span><br><span class="line">  @Test</span><br><span class="line">  public void demo() &#123;</span><br><span class="line">    Config config = new Config();</span><br><span class="line">    HazelcastInstance hazelcast = Hazelcast.newHazelcastInstance(config);</span><br><span class="line"></span><br><span class="line">    Map&lt;String, String&gt; mapCustomers = hazelcast.getMap(&quot;demo&quot;);</span><br><span class="line">    mapCustomers.put(&quot;1&quot;, &quot;Smith&quot;);</span><br><span class="line">    mapCustomers.put(&quot;2&quot;, &quot;Zuo&quot;);</span><br><span class="line">    mapCustomers.put(&quot;3&quot;, &quot;Evin John&quot;);</span><br><span class="line"></span><br><span class="line">    System.out.println(mapCustomers.get(&quot;2&quot;));</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></p>
<p>pom.xml<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;com.hazelcast&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;hazelcast&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;3.5.2&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure></p>
<h1 id="off-heap-内存相关"><a href="#off-heap-内存相关" class="headerlink" title="off-heap 内存相关"></a>off-heap 内存相关</h1><h1 id="mapdb"><a href="#mapdb" class="headerlink" title="mapdb"></a>mapdb</h1><ul>
<li>支持事务，隔离</li>
</ul>
<p><a href="http://www.infoq.com/cn/news/2014/07/mapdb-java" target="_blank" rel="noopener">http://www.infoq.com/cn/news/2014/07/mapdb-java</a><br><a href="https://github.com/jankotek/mapdb" target="_blank" rel="noopener">https://github.com/jankotek/mapdb</a><br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">DB db = DBMaker</span><br><span class="line">        .newMemoryDB()</span><br><span class="line">        .transactionDisable()</span><br><span class="line">        .make();</span><br></pre></td></tr></table></figure></p>
<h1 id="redis"><a href="#redis" class="headerlink" title="redis"></a>redis</h1><ul>
<li>单线程</li>
<li>缓存会话集群<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;redis.clients&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;jedis&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;2.7.3&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h1 id="memcached"><a href="#memcached" class="headerlink" title="memcached"></a>memcached</h1><ul>
<li>多线程</li>
</ul>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>store</tag>
      </tags>
  </entry>
  <entry>
    <title>MicroService Dubbo</title>
    <url>/2015/11/25/0060-MicroService%20Dubbo/</url>
    <content><![CDATA[<h1 id="官方网站"><a href="#官方网站" class="headerlink" title="官方网站"></a>官方网站</h1><p><a href="http://dubbo.io/" target="_blank" rel="noopener">http://dubbo.io/</a></p>
<p>此文对文档和生产线上的使用总结</p>
<h2 id="分支扩展集成"><a href="#分支扩展集成" class="headerlink" title="分支扩展集成"></a>分支扩展集成</h2><p><a href="https://github.com/alibaba/dubbo" target="_blank" rel="noopener">https://github.com/alibaba/dubbo</a><br><a href="https://github.com/dangdangdotcom/dubbox" target="_blank" rel="noopener">https://github.com/dangdangdotcom/dubbox</a><br><a href="https://github.com/Percy0601/boot-dubbo" target="_blank" rel="noopener">https://github.com/Percy0601/boot-dubbo</a></p>
<h2 id="核心"><a href="#核心" class="headerlink" title="核心"></a>核心</h2><p><img src="http://img.sandseasoft.com/image/0/5d/a45bcf1d641b55c4ab805c6e634b9.png" alt></p>
<h3 id="模块解释"><a href="#模块解释" class="headerlink" title="模块解释"></a>模块解释</h3><blockquote>
<p>单个服务坐标， app-name+group+version+name</p>
</blockquote>
<h3 id="注解"><a href="#注解" class="headerlink" title="注解"></a>注解</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">     # 应用名称</span><br><span class="line">    &lt;dubbo:application name=&quot;hello-world-app&quot; owner=&quot;zuoyun&quot; /&gt;</span><br><span class="line">     # 注册中心</span><br><span class="line">    &lt;dubbo:registry address=&quot;multicast://224.5.6.7:1234&quot; register=&quot;true&quot; subscribe=&quot;true&quot; /&gt;</span><br><span class="line">     # 暴露协议,name=&quot;injvm&quot; 本地调用</span><br><span class="line">    &lt;dubbo:protocol name=&quot;dubbo&quot; port=&quot;20880&quot; dispatcher=&quot;all&quot; threadpool=&quot;fixed&quot; threads=&quot;100&quot;  token=&quot;true&quot;  /&gt;  </span><br><span class="line">     # 生产者全局配置  </span><br><span class="line">    &lt;dubbo:provider/&gt; </span><br><span class="line">     # 消费者全局配置</span><br><span class="line">    &lt;dubbo:consumer/&gt; </span><br><span class="line">     # 监控中心全局配置</span><br><span class="line">     &lt;dubbo:monitor/&gt; </span><br><span class="line">     # 暴露服务名称</span><br><span class="line">    &lt;dubbo:service interface=&quot;com.alibaba.dubbo.demo.DemoService&quot; ref=&quot;demoServiceLocal&quot; version=&quot;1.0.0&quot; validation=&quot;true&quot; async=&quot;true&quot;sent=&quot;true&quot;  executes=&quot;10&quot; accepts=&quot;10&quot;  /&gt;</span><br><span class="line">     # 消费服务名称</span><br><span class="line">    &lt;dubbo:reference id=&quot;demoServiceRemote&quot;</span><br><span class="line">interface=&quot;com.alibaba.dubbo.demo.DemoService&quot; version=&quot;1.0.0&quot; validation=&quot;true&quot; actives=&quot;10&quot;  connections=&quot;10&quot;/&gt;</span><br></pre></td></tr></table></figure>
<h3 id="功能详解"><a href="#功能详解" class="headerlink" title="功能详解"></a>功能详解</h3><p>集群容错<br>负载均衡</p>
<h2 id="相关配置"><a href="#相关配置" class="headerlink" title="相关配置"></a>相关配置</h2><h3 id="生产者配置"><a href="#生产者配置" class="headerlink" title="生产者配置"></a>生产者配置</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!--主配置--&gt;</span><br><span class="line">&lt;dubbo:application name=&quot;demo-dubbo&quot; /&gt;</span><br><span class="line">&lt;dubbo:registry address=&quot;zookeeper://127.0.0.1:2181&quot; client=&quot;curator&quot;/&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--生产--&gt;</span><br><span class="line">&lt;dubbo:protocol name=&quot;dubbo&quot; port=&quot;20880&quot;/&gt;</span><br><span class="line"></span><br><span class="line">&lt;bean id=&quot;dubboServiceImpl&quot; class=&quot;zuoyun.me.dubbo.DubboServiceImpl&quot;/&gt;</span><br><span class="line"></span><br><span class="line">&lt;dubbo:service interface=&quot;zuoyun.me.dubbo.DubboService&quot; ref=&quot;dubboServiceImpl&quot; /&gt;</span><br></pre></td></tr></table></figure>
<h3 id="消费者配置"><a href="#消费者配置" class="headerlink" title="消费者配置"></a>消费者配置</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!--主配置--&gt;</span><br><span class="line">&lt;dubbo:application name=&quot;demo-dubbo&quot;/&gt;</span><br><span class="line">&lt;dubbo:registry address=&quot;zookeeper://127.0.0.1:2181&quot;/&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--消费--&gt;</span><br><span class="line">&lt;dubbo:reference id=&quot;dubboService&quot; interface=&quot;zuoyun.me.dubbo.DubboService&quot; check=&quot;false&quot;</span><br><span class="line">                 timeout=&quot;5000&quot;/&gt;</span><br></pre></td></tr></table></figure>
<h3 id="依赖，-服务发现用-zoo-，client-用curator"><a href="#依赖，-服务发现用-zoo-，client-用curator" class="headerlink" title="依赖， 服务发现用 zoo ，client 用curator"></a>依赖， 服务发现用 zoo ，client 用curator</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;com.alibaba&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;dubbo&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;2.5.3&lt;/version&gt;</span><br><span class="line">    &lt;exclusions&gt;</span><br><span class="line">        &lt;exclusion&gt;</span><br><span class="line">            &lt;artifactId&gt;commons-logging&lt;/artifactId&gt;</span><br><span class="line">            &lt;groupId&gt;commons-logging&lt;/groupId&gt;</span><br><span class="line">        &lt;/exclusion&gt;</span><br><span class="line">    &lt;/exclusions&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;com.netflix.curator&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;curator-framework&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;1.3.1&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.apache.zookeeper&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;zookeeper&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;3.3.3&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure>
<h2 id="其他功能"><a href="#其他功能" class="headerlink" title="其他功能"></a>其他功能</h2><h3 id="RPC上下文"><a href="#RPC上下文" class="headerlink" title="RPC上下文"></a>RPC上下文</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">xxxService.xxx(); // 远程调用</span><br><span class="line">boolean isConsumerSide = RpcContext.getContext().isConsumerSide(); // 本端是否为消费端，这里会返回true</span><br><span class="line">RpcContext.getContext().setAttachment(&quot;index&quot;, &quot;1&quot;); // 隐式传参，后面的远程调用都会隐式将这些参数发送到服务器端，类似cookie，用于框架集成，不建议常规业务使用</span><br><span class="line"></span><br><span class="line">String serverIP = RpcContext.getContext().getRemoteHost(); // 获取最后一次调用的提供方IP地址</span><br><span class="line">String application = RpcContext.getContext().getUrl().getParameter(&quot;application&quot;); // 获取当前服务配置信息，所有配置信息都将转换为URL的参数</span><br><span class="line">// ...</span><br><span class="line">yyyService.yyy(); // 注意：每发起RPC调用，上下文状态会变化</span><br><span class="line">// ...</span><br><span class="line"></span><br><span class="line">fooService.findFoo(fooId); // 此调用会立即返回null</span><br><span class="line">Future&lt;Foo&gt; fooFuture = RpcContext.getContext().getFuture(); // 拿到调用的Future引用，当结果返回后，会被通知和设置到此Future。</span><br></pre></td></tr></table></figure>
<h3 id="回声测试"><a href="#回声测试" class="headerlink" title="回声测试"></a>回声测试</h3><p>所有服务自动实现EchoService接口<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">MemberService memberService = ctx.getBean(&quot;memberService&quot;); // 远程服务引用</span><br><span class="line"> </span><br><span class="line">EchoService echoService = (EchoService) memberService; // 强制转型为EchoService</span><br><span class="line"> </span><br><span class="line">String status = echoService.$echo(&quot;OK&quot;); // 回声测试可用性</span><br><span class="line"> </span><br><span class="line">assert(status.equals(&quot;OK&quot;))</span><br></pre></td></tr></table></figure></p>
<h3 id="参数回调"><a href="#参数回调" class="headerlink" title="参数回调"></a>参数回调</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public class CallbackServiceImpl implements CallbackService</span><br></pre></td></tr></table></figure>
<h3 id="本地存根"><a href="#本地存根" class="headerlink" title="本地存根"></a>本地存根</h3><p>本地调用前，先调用一个伪装的实现方法，在执行真正的方法<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;dubbo:service interface=&quot;com.foo.BarService&quot; stub=&quot;com.foo.BarServiceStub&quot; /&gt;</span><br></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">com.foo.BarService</span><br><span class="line">com.foo.BarServiceStub // 在API旁边放一个Stub实现，它实现BarService接口，并有一个传入远程BarService实例的构造函数</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">package com.foo</span><br><span class="line">public class BarServiceStub implements BarService &#123;</span><br><span class="line"> </span><br><span class="line">    private final BarService barService;</span><br><span class="line"> </span><br><span class="line">    // 构造函数传入真正的远程代理对象</span><br><span class="line">    public (BarService barService) &#123;</span><br><span class="line">        this.barService = barService;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    public String sayHello(String name) &#123;</span><br><span class="line">        // 此代码在客户端执行</span><br><span class="line">        // 你可以在客户端做ThreadLocal本地缓存，或预先验证参数是否合法，等等</span><br><span class="line">        try &#123;</span><br><span class="line">            return barService.sayHello(name);</span><br><span class="line">        &#125; catch (Exception e) &#123;</span><br><span class="line">            // 你可以容错，可以做任何AOP拦截事项</span><br><span class="line">            return &quot;容错数据&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="本地伪装"><a href="#本地伪装" class="headerlink" title="本地伪装"></a>本地伪装</h3><p>当抛出异常的时候调用伪装的service<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;dubbo:service interface=&quot;com.foo.BarService&quot; mock=&quot;com.foo.BarServiceMock&quot; /&gt;</span><br></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">com.foo.BarService</span><br><span class="line">com.foo.BarServiceMock // 在API旁边放一个Mock实现，它实现BarService接口，并有一个无参构造函数</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">package com.foo</span><br><span class="line">public class BarServiceMock implements BarService &#123;</span><br><span class="line"> </span><br><span class="line">    public String sayHello(String name) &#123;</span><br><span class="line">        // 你可以伪造容错数据，此方法只在出现RpcException时被执行</span><br><span class="line">        return &quot;容错数据&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="最佳实践"><a href="#最佳实践" class="headerlink" title="最佳实践"></a>最佳实践</h2><ul>
<li>在Provider上尽量多配置Consumer端属性</li>
<li>Provider上配置合理的Provider端属性</li>
<li>配置上管理信息</li>
<li>配置上Dubbo缓存文件</li>
</ul>
<h2 id="运维相关"><a href="#运维相关" class="headerlink" title="运维相关"></a>运维相关</h2><h3 id="dubbo-admin"><a href="#dubbo-admin" class="headerlink" title="dubbo-admin"></a>dubbo-admin</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">dubbo-admin-2.5.4.war</span><br></pre></td></tr></table></figure>
<h3 id="dubbo-telnet"><a href="#dubbo-telnet" class="headerlink" title="dubbo-telnet"></a>dubbo-telnet</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">telnet 127.0.0.1 8080</span><br><span class="line">ps</span><br><span class="line">pwd</span><br><span class="line">status</span><br><span class="line">invoke</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>动画-mojs</title>
    <url>/2015/11/26/0061-%E5%8A%A8%E7%94%BB-mojs/</url>
    <content><![CDATA[<p>jpg/gif/svg/cavans</p>
<p><a href="https://github.com/legomushroom/mojs" target="_blank" rel="noopener">https://github.com/legomushroom/mojs</a></p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>未归档</tag>
      </tags>
  </entry>
  <entry>
    <title>web 压测工具</title>
    <url>/2015/12/01/0065-web%20%E5%8E%8B%E6%B5%8B%E5%B7%A5%E5%85%B7/</url>
    <content><![CDATA[<h3 id="api"><a href="#api" class="headerlink" title="api"></a>api</h3><p><a href="ping.chinaz.com">ping.chinaz.com</a></p>
<h3 id="ab"><a href="#ab" class="headerlink" title="ab"></a>ab</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 1000并发 50次连接</span><br><span class="line">ab -kn 1000 -c 50 https://zuoyun.me/</span><br></pre></td></tr></table></figure>
<h3 id="jmeter"><a href="#jmeter" class="headerlink" title="jmeter"></a>jmeter</h3><p>TODO</p>
<h3 id="Ngrinder"><a href="#Ngrinder" class="headerlink" title="Ngrinder"></a>Ngrinder</h3><ol>
<li>系统账号  admin admin<br>测试   user user</li>
<li>增加一个 agent<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sh run_agent.sh  &gt;/dev/null 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p><img src="http://img.sandseasoft.com/image/f/53/b83b71384774f2731d77ce092b2dc.png" alt></p>
<p>demo<br><a href="http://ngrinder-demo.nhnopensource.org/" target="_blank" rel="noopener">http://ngrinder-demo.nhnopensource.org/</a><br><a href="http://www.cubrid.org/wiki_ngrinder/entry/installation-guide" target="_blank" rel="noopener">http://www.cubrid.org/wiki_ngrinder/entry/installation-guide</a></p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>devops</tag>
      </tags>
  </entry>
  <entry>
    <title>mysql-迁移恢复方案</title>
    <url>/2015/12/01/0066-mysql-%E8%BF%81%E7%A7%BB%E6%81%A2%E5%A4%8D%E6%96%B9%E6%A1%88/</url>
    <content><![CDATA[<p>读写分离<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 启动 </span><br><span class="line">mysqld</span><br></pre></td></tr></table></figure></p>
<p>热备份<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">xtrabackup</span><br></pre></td></tr></table></figure></p>
<h2 id="开启binlog"><a href="#开启binlog" class="headerlink" title="开启binlog"></a>开启binlog</h2><p>/etc/my.conf<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">log-bin=mylog</span><br></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 查看是否开启</span><br><span class="line">show variables like  &apos;%bin%&apos;</span><br><span class="line"># 查看具体的方案</span><br><span class="line">show binlog events in &apos;mysql_bin.000001</span><br><span class="line"># 恢复</span><br><span class="line">mysqlbinlog  --start-date=&quot;2012-10-15 16:30:00&quot; --stop-date=&quot;2012-10-15 17:00:00&quot; --stop-postion=&quot;100&quot; mysql_bin.000001 |mysql -uroot -p123456</span><br><span class="line"># 重启 binlog</span><br><span class="line">flush logs;</span><br></pre></td></tr></table></figure>
<p>参考</p>
<p><a href="http://orangeholic.iteye.com/blog/1698736" target="_blank" rel="noopener">http://orangeholic.iteye.com/blog/1698736</a></p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>未归档</tag>
      </tags>
  </entry>
  <entry>
    <title>LogAnalyize rsyslog</title>
    <url>/2015/12/02/0067-LogAnalyize%20rsyslog/</url>
    <content><![CDATA[<p>系统日志</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 开启</span><br><span class="line">service rsyslog start</span><br><span class="line"># 查看状态</span><br><span class="line">/etc/init.d/rsyslog status</span><br><span class="line"># 测试</span><br><span class="line">logger  &quot;hello &quot;</span><br></pre></td></tr></table></figure>
<p>配置相关<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 配置</span><br><span class="line">vim /etc/rsyslog.conf</span><br><span class="line"></span><br><span class="line">开启 UDP</span><br><span class="line">#  provides UDP syslog reception</span><br><span class="line"># $ModLoad imudp</span><br><span class="line"># $UDPServerRun 514</span><br><span class="line"></span><br><span class="line">#  provides TCP syslog reception</span><br><span class="line">$ModLoad imtcp</span><br><span class="line">$InputTCPServerRun 514</span><br></pre></td></tr></table></figure></p>
<p>整合 logstash<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">input &#123;</span><br><span class="line">    syslog&#123;</span><br><span class="line">       port=&gt;5514</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">output &#123;</span><br><span class="line">    stdout &#123;</span><br><span class="line">        codec =&gt; rubydebug</span><br><span class="line">    &#125;</span><br><span class="line">    redis &#123;</span><br><span class="line">        host =&gt; &quot;192.168.31.202&quot;</span><br><span class="line">        port =&gt; 9979</span><br><span class="line">        key =&gt; [&quot;db0&quot;]</span><br><span class="line">        password =&gt; &quot;T90ZFoEYrjffuPFDBWhrkD4ZHfXQydch&quot;</span><br><span class="line">        data_type =&gt; &quot;list&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p><a href="http://blog.csdn.net/sdlyjzh/article/details/40855599" target="_blank" rel="noopener">http://blog.csdn.net/sdlyjzh/article/details/40855599</a></p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>ETL  kettle</title>
    <url>/2015/12/02/0068-ETL%20%20kettle/</url>
    <content><![CDATA[<p>ETL 工具<br>Extract -&gt; Transform -&gt; Load</p>
<p>抽取，标记，清洗，计算，回归</p>
<p>公式 currentValue*系数/currentMax</p>
<ul>
<li>Chef——工作(job)设计工具 (GUI方式)</li>
<li>Kitchen——工作(job)执行器 (命令行方式)</li>
<li>Spoon——转换(transform)设计工具 (GUI方式)</li>
<li>Span——转换(trasform)执行器 (命令行方式)</li>
</ul>
<p>Chef中的作业项包括：</p>
<ol>
<li>转换：指定更细的转换任务，通过Spoon生成。通过Field来输入参数；</li>
<li>SQL：sql语句执行；</li>
<li>FTP：下载ftp文件；</li>
<li>Job包：作为嵌套作业使用。</li>
<li>JavaScript执行：这个比较有意思，我看了一下源码，如果你有自已的Script引擎，     可以很方便的替换成自定义Script，来扩充其功能；</li>
<li>SFTP：安全的Ftp协议传输；</li>
<li>Start单元：任务必须由此开始。设计作业时，以此为起点。</li>
<li>OK单元：可以编制做为中间任务单元，且进行脚本编制，用来控制流程。</li>
<li>ERROR单元：用途同上。</li>
<li>DUMMY单元：什么都不做，主要是用来支持多分支的情况，文档中有例子。</li>
</ol>
<p>Input-Steps：输入步骤</p>
<ol>
<li>Text file input：文本文件输入<br>可以支持多文件合并，有不少参数，基本一看参数名就能明白其意图。</li>
<li>Table input：数据表输入<br>实际上是视图方式输入，因为输入的是sql语句。当然，需要指定数据源(数据源的定制方式在后面讲一下)<br>Get system info：取系统信息<br>就是取一些固定的系统环境值，如本月最后一天的时间，本机的IP地址之类。</li>
<li>Generate Rows：生成多行。<br>这个需要匹配使用，主要用于生成多行的数据输入，比如配合Add sequence可以生成一个指定序号的数据列。</li>
</ol>
<p>Output-Steps： 输出步聚</p>
<ol>
<li>Text file output：文本文件输出。这个用来作测试蛮好，呵呵。很方便的看到转换的输出。</li>
<li>Table output：输出到目的表。</li>
<li>Insert/Update：目的表和输入数据行进行比较，然后有选择的执行增加，更新操作。</li>
<li>Update：同上，只是不支持增加操作。</li>
</ol>
<p>Transform 转换</p>
<ol>
<li>Select values<br>对输入的行记录数据的字段进行更改 (更改数据类型，更改字段名或删除) 数据类型变更时，数据的转换有固定规则，可简单定制参数。可用来进行数据表的改装。</li>
<li>Filter rows<br>对输入的行记录进行指定复杂条件的过滤。用途可扩充sql语句现有的过滤功能。但现有提供逻辑功能超出标准sql的不多。</li>
<li>Sort rows<br>对指定的列以升序或降序排序，当排序的行数超过5000时需要临时表。</li>
<li>Add sequence<br>为数据流增加一个序列，这个配合其它Step(Generate rows, rows join)，可以生成序列表，如日期维度表(年、月、日)。</li>
<li>Dummy<br>不做任何处理，主要用来作为分支节点。</li>
<li>Join Rows<br>对所有输入流做笛卡儿乘积。</li>
<li>Aggregate<br>聚合，分组处理</li>
<li>Group by<br>分组，用途可扩充sql语句现有的分组，聚合函数。但我想可能会有其它方式的sql语句能实现。</li>
<li>Java Script value<br>使用mozilla的rhino作为脚本语言，并提供了很多函数，用户可以在脚本中使用这些函数。</li>
<li>Row Normaliser<br>该步骤可以从透视表中还原数据到事实表，通过指定维度字段及其分类值，度量字段，最终还原出事实表数据。</li>
<li>Unique rows<br>去掉输入流中的重复行，在使用该节点前要先排序，否则只能删除连续的重复行。 </li>
<li>Calculator<br>提供了一组函数对列值进行运算，用该方式比用户自定义JAVA SCRIPT脚本速度更快。</li>
<li>Merge Rows<br>用于比较两组输入数据，一般用于更新后的数据重新导入到数据仓库中。</li>
<li>Add constants：<br>增加常量值。</li>
<li>Row denormaliser<br>同Normaliser过程相反。</li>
<li>Row flattener<br>表扁平化处理，指定需处理的字段和扃平化后的新字段，将其它字段做为组合Key进行扃平化处理。</li>
</ol>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>store</tag>
      </tags>
  </entry>
  <entry>
    <title>SQL MySQL</title>
    <url>/2015/12/03/0069-SQL%20MySQL/</url>
    <content><![CDATA[<p>命令相关<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysqld </span><br><span class="line">mysqladmin</span><br><span class="line">mysqldump </span><br><span class="line">mysql -u use -h localhost -P 3386 -p   </span><br><span class="line">mysql -h</span><br><span class="line">set character_set_server=utf8</span><br></pre></td></tr></table></figure></p>
<p>配置 binlog<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line"># innodb_force_recovery= 1</span><br><span class="line"># basedir = /var/root/data</span><br><span class="line">datadir = /Users/zuoyun1/data</span><br><span class="line">log-bin=mysql-bin</span><br><span class="line">server_id =1</span><br><span class="line">sql_mode=NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES</span><br><span class="line"></span><br><span class="line"># 解决字符集问题</span><br><span class="line">character-set-server=utf8</span><br><span class="line">collation-server=utf8_general_ci</span><br><span class="line"></span><br><span class="line">slow_query_log=TRUE</span><br><span class="line">slow_query_log_file=/usr/log/slow_log.txt</span><br><span class="line">long_query_time=3</span><br><span class="line">max_connections=300</span><br><span class="line"># 大小写敏感</span><br><span class="line">lower_case_table_names=1</span><br><span class="line">[client]</span><br><span class="line">default-character-set=utf8</span><br></pre></td></tr></table></figure></p>
<p>初始化一个新的 mysql<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 新建一个指定目录</span><br><span class="line">mysqld --initialize --user=zuoyun1 --datadir=/Users/zuoyun1/data</span><br><span class="line"># 修改初始化密码</span><br><span class="line">mysql -u root -p </span><br><span class="line">SET PASSWORD FOR root=PASSWORD(&apos;123456&apos;);</span><br></pre></td></tr></table></figure></p>
<p>开启远程登录<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 将 discuz 数据库的所有权限授权给 ted 这个用户，允许 ted 用户在 123.123.123.123 这个 IP 进行远程登陆，并设置 ted 用户的密码为 123456 </span><br><span class="line">grant all PRIVILEGES on discuz.* to ted@&apos;123.123.123.123&apos; identified by &apos;123456&apos;;</span><br><span class="line"></span><br><span class="line"># create account for all domain</span><br><span class="line">create user jik1992@&apos;%&apos; identified by &apos;xxxx&apos;;</span><br><span class="line">grant all privileges on *.* to jik1992@&apos;%&apos; with grant option;</span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>store</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring-cheatsheet</title>
    <url>/2015/12/04/0070-Spring-cheatsheet/</url>
    <content><![CDATA[<h2 id="静态方法装载-spring"><a href="#静态方法装载-spring" class="headerlink" title="静态方法装载 spring"></a>静态方法装载 spring</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">static ApplicationContext ctx;</span><br><span class="line"></span><br><span class="line">static &#123;</span><br><span class="line">    //装载log4j.xml</span><br><span class="line">    try &#123;</span><br><span class="line">      Log4jConfigurer.initLogging(&quot;classpath:_log4j.xml&quot;);</span><br><span class="line">    &#125; catch (FileNotFoundException e) &#123;</span><br><span class="line">      logger.error(&quot;日志异常&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    //Spring装载扫描</span><br><span class="line">    ctx = new ClassPathXmlApplicationContext(&quot;classpath:spring/dubbo-produce.xml&quot;);</span><br><span class="line">    dubboService = ctx.getBean(&quot;dubboServiceImpl&quot;, DubboServiceImpl.class);</span><br><span class="line">    System.out.println(dubboService.hello());</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<h2 id="常规注解"><a href="#常规注解" class="headerlink" title="常规注解"></a>常规注解</h2><ul>
<li>@compent</li>
<li>@resouce</li>
<li>@controll</li>
<li>@postconstruct</li>
</ul>
<h2 id="常规接口"><a href="#常规接口" class="headerlink" title="常规接口"></a>常规接口</h2><ul>
<li>InitializingBean</li>
</ul>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>1.0 Springboot Guide</title>
    <url>/2015/12/04/0071-1.0%20Springboot%20Guide/</url>
    <content><![CDATA[<p><img src="http://img.sandseasoft.com/image/f/52/9061cd4c99d6fd572d61ff049a81d.png" alt></p>
<p><a href="https://github.com/spring-projects/spring-boot" target="_blank" rel="noopener">https://github.com/spring-projects/spring-boot</a><br><a href="https://github.com/jik1992/springbootDemo1" target="_blank" rel="noopener">https://github.com/jik1992/springbootDemo1</a><br><a href="http://www.ibm.com/developerworks/cn/java/j-lo-spring-boot/" target="_blank" rel="noopener">http://www.ibm.com/developerworks/cn/java/j-lo-spring-boot/</a></p>
<h3 id="默认的约定"><a href="#默认的约定" class="headerlink" title="默认的约定"></a>默认的约定</h3><ul>
<li>默认静态文件位置 /resources/static</li>
<li>默认配置文件位置 /resources/application.properties</li>
<li>提倡javaconf（@Configuration<br>） 兼容 xml （@ImportResource(“classpath:spring/spring-*.xml”)</li>
</ul>
<h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@SpringBootApplication</span><br><span class="line">public class Application &#123;</span><br><span class="line"></span><br><span class="line">  final static Logger logger = LoggerFactory.getLogger(Application.class);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  public static void main(String[] args) throws InterruptedException &#123;</span><br><span class="line"></span><br><span class="line">    SpringApplication application = new SpringApplication(Application.class);</span><br><span class="line">    application.run(args);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>/pom.xml<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;parent&gt;</span><br><span class="line">       &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">       &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;</span><br><span class="line">       &lt;version&gt;1.4.2.RELEASE&lt;/version&gt;</span><br><span class="line">   &lt;/parent&gt;</span><br><span class="line"></span><br><span class="line">   &lt;groupId&gt;demo&lt;/groupId&gt;</span><br><span class="line">   &lt;artifactId&gt;shiro-spring&lt;/artifactId&gt;</span><br><span class="line">   &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;</span><br><span class="line"></span><br><span class="line">   &lt;dependencies&gt;</span><br><span class="line">       &lt;dependency&gt;</span><br><span class="line">           &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">           &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;</span><br><span class="line">       &lt;/dependency&gt;</span><br><span class="line">       &lt;dependency&gt;</span><br><span class="line">           &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">           &lt;artifactId&gt;spring-boot-starter&lt;/artifactId&gt;</span><br><span class="line">       &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">   &lt;/dependencies&gt;</span><br><span class="line">   &lt;build&gt;</span><br><span class="line">       &lt;plugins&gt;</span><br><span class="line">           &lt;plugin&gt;</span><br><span class="line">               &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">               &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;</span><br><span class="line">           &lt;/plugin&gt;</span><br><span class="line">       &lt;/plugins&gt;</span><br><span class="line"></span><br><span class="line">   &lt;/build&gt;</span><br></pre></td></tr></table></figure></p>
<p>/resouces/logback.xml<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;configuration&gt;</span><br><span class="line">    &lt;include resource=&quot;org/springframework/boot/logging/logback/base.xml&quot;/&gt;</span><br><span class="line"></span><br><span class="line">    &lt;appender name=&quot;file&quot; class=&quot;ch.qos.logback.core.rolling.RollingFileAppender&quot;&gt;</span><br><span class="line">        &lt;file&gt;weixin.log&lt;/file&gt;</span><br><span class="line">        &lt;rollingPolicy class=&quot;ch.qos.logback.core.rolling.TimeBasedRollingPolicy&quot;&gt;</span><br><span class="line">            &lt;fileNamePattern&gt;weixin.%d&#123;yyyy-MM-dd-HH&#125;.log&lt;/fileNamePattern&gt;</span><br><span class="line">            &lt;maxHistory&gt;72&lt;/maxHistory&gt;</span><br><span class="line">        &lt;/rollingPolicy&gt;</span><br><span class="line">        &lt;encoder&gt;</span><br><span class="line">            &lt;pattern&gt;%d&#123;HH:mm:ss.SSS&#125; [%thread] %-5level %logger&#123;36&#125; %line - %msg%n&lt;/pattern&gt;</span><br><span class="line">        &lt;/encoder&gt;</span><br><span class="line">    &lt;/appender&gt;</span><br><span class="line"></span><br><span class="line">    &lt;logger name=&quot;org.springframework.web&quot; level=&quot;INFO&quot;/&gt;</span><br><span class="line">    &lt;logger name=&quot;me.zuoyun&quot; level=&quot;DEBUG&quot;&gt;</span><br><span class="line">        &lt;appender-ref ref=&quot;file&quot;/&gt;</span><br><span class="line">    &lt;/logger&gt;</span><br><span class="line"></span><br><span class="line">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure></p>
<h2 id="常用注解"><a href="#常用注解" class="headerlink" title="常用注解"></a>常用注解</h2><ul>
<li>@RestController</li>
</ul>
<h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><p><a href="http://blog.csdn.net/linzhiqiang0316/article/details/52639265" target="_blank" rel="noopener">http://blog.csdn.net/linzhiqiang0316/article/details/52639265</a></p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>Java-Logback</title>
    <url>/2015/12/04/0072-Java-Logback/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><ul>
<li>append 各种基础过滤器，提供各种输出管道</li>
<li>layout 格式化工具</li>
<li>logger 定义日志范围级别</li>
<li>root   默认根路径</li>
<li>MDC/NDC 线程上下文</li>
</ul>
<h2 id="几种不同的日志"><a href="#几种不同的日志" class="headerlink" title="几种不同的日志"></a>几种不同的日志</h2><ul>
<li>slf4j 简单日志门面，可以替换不同的日志系统。（兼容性，插件都有问题）</li>
<li>log4j /log4j2</li>
<li>logback </li>
</ul>
<h2 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h2><h3 id="扩展组件"><a href="#扩展组件" class="headerlink" title="扩展组件"></a>扩展组件</h3><ol>
<li>ConsoleAppender  输出结果到System.out或是System.err。</li>
<li>FileAppender  输出结果到指定文件，同时可以指定输出数据的格式。append=“false”指定不追加到文件末尾 </li>
<li>RollingFileAppender  自动追加日志信息到文件中，直至文件达到预定的大小，然后自动重新生成另外一个文件来记录之后的日志。</li>
</ol>
<h3 id="过滤标签"><a href="#过滤标签" class="headerlink" title="过滤标签"></a>过滤标签</h3><ol>
<li>ThresholdFilter 用来过滤指定高于优先级的事件。</li>
<li>TimeFilter 设置start和end，来指定接收日志信息的时间区间。</li>
<li>LevelFilter  用来过滤指定优先级的事件。</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;filter class=&quot;ch.qos.logback.classic.filter.ThresholdFilter&quot;&gt;</span><br><span class="line">    &lt;level&gt;WARN&lt;/level&gt;</span><br><span class="line">&lt;/filter&gt;</span><br><span class="line">        &lt;filter class=&quot;ch.qos.logback.classic.filter.LevelFilter&quot;&gt;</span><br><span class="line">            &lt;level&gt;ERROR&lt;/level&gt;</span><br><span class="line">            &lt;onMatch&gt;ACCEPT&lt;/onMatch&gt;</span><br><span class="line">            &lt;onMismatch&gt;DENY&lt;/onMismatch&gt;</span><br><span class="line">        &lt;/filter&gt;</span><br></pre></td></tr></table></figure>
<h3 id="logger"><a href="#logger" class="headerlink" title="logger"></a>logger</h3><ul>
<li>logger 和 root 对指定域设定日志， 其中 root 中的 appender 会感染所有的 logger，慎用。</li>
<li>logger 有一个属性叫 additivity ，可以多个 logger 名空间重叠导致的日志重复输出，但是不能隔离 root</li>
</ul>
<h2 id="最佳实践"><a href="#最佳实践" class="headerlink" title="最佳实践"></a>最佳实践</h2><ul>
<li>可以把所有相同类型的日志往同一个文件夹里面打， 也可以写同一个文件，注意文件锁问题，logback 有配置</li>
</ul>
<h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>pom.xml<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;dependencies&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.slf4j&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;slf4j-api&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;1.7.12&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;ch.qos.logback&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;logback-classic&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;1.1.3&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;ch.qos.logback&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;logback-core&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;1.1.3&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">&lt;/dependencies&gt;</span><br></pre></td></tr></table></figure></p>
<p>一份复杂的配置<br>logback.xml<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line"></span><br><span class="line">&lt;configuration scan=&quot;true&quot; scanPeriod=&quot;30 seconds&quot;&gt;</span><br><span class="line">    &lt;statusListener class=&quot;ch.qos.logback.core.status.OnConsoleStatusListener&quot;/&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!--console--&gt;</span><br><span class="line">    &lt;appender name=&quot;console&quot; class=&quot;ch.qos.logback.core.ConsoleAppender&quot;&gt;</span><br><span class="line">        &lt;encoder&gt;</span><br><span class="line">            &lt;pattern&gt;%d&#123;HH:mm:ss.SSS&#125; [%thread] %-5level %logger&#123;36&#125; %line - %msg%n&lt;/pattern&gt;</span><br><span class="line">        &lt;/encoder&gt;</span><br><span class="line">    &lt;/appender&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!--QuicloudMonitor--&gt;</span><br><span class="line">    &lt;appender name=&quot;monitor&quot; class=&quot;ch.qos.logback.core.rolling.RollingFileAppender&quot;&gt;</span><br><span class="line">        &lt;file&gt;/data/logs/logstash/trace/trace.log&lt;/file&gt;</span><br><span class="line">        &lt;rollingPolicy class=&quot;ch.qos.logback.core.rolling.TimeBasedRollingPolicy&quot;&gt;</span><br><span class="line">            &lt;fileNamePattern&gt;/data/logs/logstash/trace/trace.%d&#123;yyyy-MM-dd-HH&#125;.log&lt;/fileNamePattern&gt;</span><br><span class="line">            &lt;maxHistory&gt;72&lt;/maxHistory&gt;</span><br><span class="line">        &lt;/rollingPolicy&gt;</span><br><span class="line">        &lt;filter class=&quot;ch.qos.logback.classic.filter.LevelFilter&quot;&gt;</span><br><span class="line">            &lt;level&gt;TRACE&lt;/level&gt;</span><br><span class="line">            &lt;onMatch&gt;ACCEPT&lt;/onMatch&gt;</span><br><span class="line">            &lt;onMismatch&gt;DENY&lt;/onMismatch&gt;</span><br><span class="line">        &lt;/filter&gt;</span><br><span class="line">        &lt;encoder class=&quot;ch.qos.logback.core.encoder.LayoutWrappingEncoder&quot;&gt;</span><br><span class="line">            &lt;layout class=&quot;com.raycloud.express.monitor.logback.layout.QuicloudMonitorLayout&quot;/&gt;</span><br><span class="line">        &lt;/encoder&gt;</span><br><span class="line">    &lt;/appender&gt;</span><br><span class="line"></span><br><span class="line">    &lt;appender name=&quot;errorMonitor&quot; class=&quot;ch.qos.logback.core.rolling.RollingFileAppender&quot;&gt;</span><br><span class="line">        &lt;file&gt;/data/logs/logstash/error/error.log&lt;/file&gt;</span><br><span class="line">        &lt;rollingPolicy class=&quot;ch.qos.logback.core.rolling.TimeBasedRollingPolicy&quot;&gt;</span><br><span class="line">            &lt;fileNamePattern&gt;/data/logs/logstash/error/error.%d&#123;yyyy-MM-dd&#125;.log&lt;/fileNamePattern&gt;</span><br><span class="line">            &lt;maxHistory&gt;72&lt;/maxHistory&gt;</span><br><span class="line">        &lt;/rollingPolicy&gt;</span><br><span class="line">        &lt;filter class=&quot;ch.qos.logback.classic.filter.LevelFilter&quot;&gt;</span><br><span class="line">            &lt;level&gt;ERROR&lt;/level&gt;</span><br><span class="line">            &lt;onMatch&gt;ACCEPT&lt;/onMatch&gt;</span><br><span class="line">            &lt;onMismatch&gt;DENY&lt;/onMismatch&gt;</span><br><span class="line">        &lt;/filter&gt;</span><br><span class="line">        &lt;encoder class=&quot;ch.qos.logback.core.encoder.LayoutWrappingEncoder&quot;&gt;</span><br><span class="line">            &lt;layout class=&quot;com.raycloud.express.monitor.logback.layout.QuicloudMonitorLayout&quot;/&gt;</span><br><span class="line">        &lt;/encoder&gt;</span><br><span class="line">    &lt;/appender&gt;</span><br><span class="line">     </span><br><span class="line">    &lt;logger name=&quot;com.raycloud.express.monitor.logback.helper.QuicloudMonitorTracer&quot; addtivity=&quot;false&quot;&gt;</span><br><span class="line">        &lt;appender-ref ref=&quot;monitor&quot;/&gt;</span><br><span class="line">    &lt;/logger&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &lt;root level=&quot;INFO&quot;&gt;</span><br><span class="line">        &lt;appender-ref ref=&quot;errorMonitor&quot;/&gt;</span><br><span class="line">        &lt;appender-ref ref=&quot;console&quot;/&gt;</span><br><span class="line">    &lt;/root&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure></p>
<h2 id="显示装载-logback"><a href="#显示装载-logback" class="headerlink" title="显示装载 logback"></a>显示装载 logback</h2><p><a href="http://stackoverflow.com/search?tab=votes&amp;q=logback%20LoggerContext" target="_blank" rel="noopener">http://stackoverflow.com/search?tab=votes&amp;q=logback%20LoggerContext</a><br><a href="http://stackoverflow.com/questions/7824620/logback-set-log-file-name-programatically/7825685#" target="_blank" rel="noopener">http://stackoverflow.com/questions/7824620/logback-set-log-file-name-programatically/7825685#</a> 7825685</p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>Intro FED/BED</title>
    <url>/2015/12/04/0073-Intro%20FED-BED/</url>
    <content><![CDATA[<h2 id="移动端方案"><a href="#移动端方案" class="headerlink" title="移动端方案"></a>移动端方案</h2><p>vuejs+framwork+phonegap<br><a href="http://cn.vuejs.org/" target="_blank" rel="noopener">http://cn.vuejs.org/</a><br><a href="http://framework7.taobao.org/" target="_blank" rel="noopener">http://framework7.taobao.org/</a></p>
<h2 id="Web-站点方案"><a href="#Web-站点方案" class="headerlink" title="Web 站点方案"></a>Web 站点方案</h2><p>semantic+gulp+sass<br><a href="http://www.semantic-ui.cn/" target="_blank" rel="noopener">http://www.semantic-ui.cn/</a><br><a href="http://www.semantic-ui-cn.com/" target="_blank" rel="noopener">http://www.semantic-ui-cn.com/</a></p>
<h2 id="实时性数据方案"><a href="#实时性数据方案" class="headerlink" title="实时性数据方案"></a>实时性数据方案</h2><p>sails<br><a href="http://www.sailsjs.org/" target="_blank" rel="noopener">http://www.sailsjs.org/</a><br>meteor<br><a href="https://www.meteor.com/" target="_blank" rel="noopener">https://www.meteor.com/</a></p>
<h2 id="常用文档"><a href="#常用文档" class="headerlink" title="常用文档"></a>常用文档</h2><p>MDN<br><a href="https://developer.mozilla.org/zh-CN/" target="_blank" rel="noopener">https://developer.mozilla.org/zh-CN/</a><br>JQuery<br><a href="http://devdocs.io/" target="_blank" rel="noopener">http://devdocs.io/</a><br>BootStarp<br><a href="http://v3.bootcss.com/" target="_blank" rel="noopener">http://v3.bootcss.com/</a><br>CDN<br><a href="http://bootcdn.cn" target="_blank" rel="noopener">http://bootcdn.cn</a></p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>nodejs</tag>
      </tags>
  </entry>
  <entry>
    <title>Guide 大数据</title>
    <url>/2015/12/04/0074-Guide%20%E5%A4%A7%E6%95%B0%E6%8D%AE/</url>
    <content><![CDATA[<p>云服务<br>ODPS<br><a href="http://help.aliyun.com/product/8314999_odps.html" target="_blank" rel="noopener">http://help.aliyun.com/product/8314999_odps.html</a><br>Qingyun Spark<br><a href="https://www.qingcloud.com/" target="_blank" rel="noopener">https://www.qingcloud.com/</a></p>
<p>本地计算</p>
<p>HIVE/impala +cdh/Spark +Kettle<br><a href="http://hive.apache.org/" target="_blank" rel="noopener">http://hive.apache.org/</a><br><a href="http://www.cloudera.com/" target="_blank" rel="noopener">http://www.cloudera.com/</a><br><a href="http://community.pentaho.com/projects/data-integration/" target="_blank" rel="noopener">http://community.pentaho.com/projects/data-integration/</a><br>hive 做接口使用 集群，Kettle 做迁移</p>
<p>API 接口<br><a href="http://www.ipip.net/" target="_blank" rel="noopener">http://www.ipip.net/</a><br><a href="http://bosonnlp.com/" target="_blank" rel="noopener">http://bosonnlp.com/</a><br><a href="http://www.uuwise.com/" target="_blank" rel="noopener">http://www.uuwise.com/</a><br><a href="http://sendcloud.sohu.com/" target="_blank" rel="noopener">http://sendcloud.sohu.com/</a></p>
<p>机器学习<br><a href="http://gephi.org/" target="_blank" rel="noopener">http://gephi.org/</a></p>
<p>BI 工具<br>jaspersoft/kettle/spagoBI</p>
<p>离线数据分析<br>实时数据分析<br>ETL  聚合、过滤、重组</p>
<p>算法<br>LR，SVM，聚类算法，神经网络算法，决策树，随机森林，GBDT，异常值检测<br>DataCastle<br>环节<br>ETL、DW、OLAP、DM</p>
<p><a href="http://www.cnblogs.com/mybi/p/4546728.html" target="_blank" rel="noopener">http://www.cnblogs.com/mybi/p/4546728.html</a></p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>指标维度</title>
    <url>/2015/12/06/0075-%E6%8C%87%E6%A0%87%E7%BB%B4%E5%BA%A6/</url>
    <content><![CDATA[<p>uv<br>total active user<br>total sleep user<br>today lose user<br>today new user<br>today bad review<br>today unit price</p>
<p>today renew<br>renew ratio<br>renew of total ratio<br>total renew user</p>
<p>today free user<br>total free user<br>today free to pay ratio</p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>未归档</tag>
      </tags>
  </entry>
  <entry>
    <title>集群</title>
    <url>/2015/12/06/0076-%E9%9B%86%E7%BE%A4/</url>
    <content><![CDATA[<p>mesos/aurora+docker </p>
<p><a href="http://mesos.mydoc.io/" target="_blank" rel="noopener">http://mesos.mydoc.io/</a></p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>未归档</tag>
      </tags>
  </entry>
  <entry>
    <title>服务治理</title>
    <url>/2015/12/06/0077-%E6%9C%8D%E5%8A%A1%E6%B2%BB%E7%90%86/</url>
    <content><![CDATA[<p>spring cloud netflix<br>hystrix<br>JGroups<br>Quasar</p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>未归档</tag>
      </tags>
  </entry>
  <entry>
    <title>LogAnalyize Logstash/Beats</title>
    <url>/2015/12/08/0079-LogAnalyize%20Logstash-Beats/</url>
    <content><![CDATA[<h1 id="流式日志收集基础架构"><a href="#流式日志收集基础架构" class="headerlink" title="流式日志收集基础架构"></a>流式日志收集基础架构</h1><p><img src="http://img.sandseasoft.com/image/6/de/7070f73d53f1186286c6519ae05cb.png" alt></p>
<p><img src="http://img.sandseasoft.com/image/c/7d/f539840247f98f8b0a0770fcc28aa.png" alt></p>
<h1 id="Logstash"><a href="#Logstash" class="headerlink" title="Logstash"></a>Logstash</h1><p>核心：input-&gt;filter-&gt;output</p>
<p>负责收集日志，格式化，然后导出，有强大的插件机制支持各种不同类型的日志收集系统，无缝对接 es 平台。所有的插件能在 logstash 官网找到 。当配置无法生效尝试安装对应插件启用 ./bin/plugin list  -&gt;./bin/plugin install </p>
<ul>
<li>logstash 是不会丢日志的， 当 output 阻塞以后，日志会落地持久化，重启后会继续输出。</li>
<li>logstash 支持 redis 集群随机多写，单读</li>
</ul>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">bin/logstash -f xxx.conf</span><br><span class="line">cd logstash-6.0.0</span><br><span class="line">bin/logstash -e &apos;input &#123; stdin &#123; &#125; &#125; output &#123; stdout &#123;&#125; &#125;&apos;</span><br></pre></td></tr></table></figure>
<h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">input &#123;</span><br><span class="line">    log4j &#123;</span><br><span class="line">        host =&gt; &quot;0.0.0.0&quot;</span><br><span class="line">        port =&gt; 4560</span><br><span class="line">    &#125;</span><br><span class="line">    stdin &#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line">output &#123;</span><br><span class="line">    stdout &#123;</span><br><span class="line">        codec =&gt; rubydebug</span><br><span class="line">    &#125;</span><br><span class="line">    redis &#123;</span><br><span class="line">        host =&gt; &quot;192.168.31.202&quot;</span><br><span class="line">        port =&gt; 9979</span><br><span class="line">        key =&gt; [&quot;db0&quot;]</span><br><span class="line">        password =&gt; &quot;T90ZFoEYrjffuPFDBWhrkD4ZHfXQydch&quot;</span><br><span class="line">        data_type =&gt; &quot;list&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="最佳实践"><a href="#最佳实践" class="headerlink" title="最佳实践"></a>最佳实践</h2><p>检测吞吐量<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">input &#123;</span><br><span class="line"> generator &#123; count =&gt; 30000000 &#125;</span><br><span class="line">&#125;</span><br><span class="line">output&#123;</span><br><span class="line"> stdout&#123; codec =&gt; dots&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">bin/logstash -f shipper.conf  | pv -abt &gt; /dev/null</span><br></pre></td></tr></table></figure>
<p>elastic 有mapping的概念，如果 build index 使用的是外部 mapping ，那么 logstash 设定的 index 类型将会失效。当然也可以开启强制重写索引template_overwrite:false</p>
<p>注意，之前吞吐量上不去，发现并发线程配低了，es 单线程单点入库了2k 左右<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">input &#123;</span><br><span class="line">  redis &#123;</span><br><span class="line">    host =&gt; &apos;127.0.0.1&apos;</span><br><span class="line">    data_type =&gt; &apos;list&apos;</span><br><span class="line">    key =&gt; &apos;logstash:redis&apos;</span><br><span class="line">    threads =&gt; 10</span><br><span class="line">    # batch_count =&gt; 1000</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">output &#123;</span><br><span class="line">  elasticsearch &#123;</span><br><span class="line">    # embedded =&gt; true</span><br><span class="line">    host =&gt; localhost</span><br><span class="line">    workers =&gt; 10</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">大概每S可2W</span><br></pre></td></tr></table></figure></p>
<p>解析失败会增加_grokparserfailure、_jsonparsefailure</p>
<p><a href="http://grokdebug.herokuapp.com/" target="_blank" rel="noopener">http://grokdebug.herokuapp.com/</a></p>
<ul>
<li><p>执行bashshell插件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">output&#123;</span><br><span class="line"> exec&#123;</span><br><span class="line">     command=&gt;&quot;xxxx %&#123;message&#125;&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>心跳插件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">input &#123;</span><br><span class="line">    heartbeat &#123;</span><br><span class="line">    interval=&gt;60</span><br><span class="line">    message=&gt;ok</span><br><span class="line">    type=&gt;string</span><br><span class="line">    tags=&gt;[&quot;heartbeat&quot;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="正则"><a href="#正则" class="headerlink" title="正则"></a>正则</h2><h3 id="基础写法"><a href="#基础写法" class="headerlink" title="基础写法"></a>基础写法</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 自定义</span><br><span class="line">(?&lt;name&gt;[0..9]&#123;1,2&#125;)</span><br><span class="line"># 正则函数</span><br><span class="line">%&#123;DATA:name&#125;</span><br><span class="line"># 匹配</span><br><span class="line">if [message] =~ &quot;QAQ &#123;&#125;</span><br></pre></td></tr></table></figure>
<h3 id="正则检测"><a href="#正则检测" class="headerlink" title="正则检测"></a>正则检测</h3><p><a href="http://grokdebug.herokuapp.com/" target="_blank" rel="noopener">http://grokdebug.herokuapp.com/</a></p>
<h3 id="字符串转-json"><a href="#字符串转-json" class="headerlink" title="字符串转 json"></a>字符串转 json</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">filter &#123;</span><br><span class="line">  json &#123;</span><br><span class="line">    source =&gt; &quot;message&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="一个复杂的正则用例"><a href="#一个复杂的正则用例" class="headerlink" title="一个复杂的正则用例"></a>一个复杂的正则用例</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">input &#123;</span><br><span class="line">    file &#123;</span><br><span class="line">        path =&gt; [&quot;/data/logs/logstash/trace/*.log&quot;]</span><br><span class="line">        start_position =&gt; &quot;beginning&quot;</span><br><span class="line">        tags =&gt; [&quot;trace&quot;]</span><br><span class="line">    &#125;</span><br><span class="line">    file &#123;</span><br><span class="line">        path =&gt; [&quot;/data/logs/logstash/error/*.log&quot;]</span><br><span class="line">        start_position =&gt; &quot;beginning&quot;</span><br><span class="line">        tags =&gt; [&quot;error&quot;]</span><br><span class="line">    &#125;</span><br><span class="line">    heartbeat &#123;</span><br><span class="line">        interval =&gt; 60</span><br><span class="line">        message =&gt; ok</span><br><span class="line">        type =&gt; string</span><br><span class="line">        tags =&gt; [&quot;heartbeat&quot;, &quot;metrics&quot;]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">filter &#123;</span><br><span class="line">    if &quot;heartbeat&quot; in [tags] &#123;&#125; else if [message] =~&quot;QAQ&quot; &#123;</span><br><span class="line">        grok &#123;</span><br><span class="line">            match =&gt; &#123;</span><br><span class="line">                &quot;message&quot; =&gt; &quot;QAQ%&#123;DATA:level&#125;QAQ%&#123;DATA:method&#125;QAQ%&#123;DATA:thread&#125;QAQ%&#123;DATA:logdate&#125;QAQ%&#123;DATA:appName&#125;QAQ%&#123;DATA:appNode&#125;QAQ%&#123;DATA:traceId&#125;QAQ%&#123;DATA:userIp&#125;QAQ%&#123;DATA:userUrl&#125;QAQ%&#123;DATA:waitTime&#125;QAQ%&#123;DATA:id&#125;QAQ%&#123;DATA:pid&#125;QAQ%&#123;DATA:json_g&#125;QAQ%&#123;DATA:sms&#125;QAQ%&#123;DATA:event&#125;QAQ%&#123;DATA:spendTime&#125;QAQ%&#123;DATA:json&#125;QAQ&quot;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        json &#123;</span><br><span class="line">            source =&gt; &quot;json&quot;</span><br><span class="line">        &#125;</span><br><span class="line">        json &#123;</span><br><span class="line">            source =&gt; &quot;json_g&quot;</span><br><span class="line">            remove_field =&gt; [&quot;json&quot;, &quot;json_g&quot;, &quot;message&quot;]</span><br><span class="line">        &#125;</span><br><span class="line">        grok &#123;</span><br><span class="line">            match =&gt; [&quot;logdate&quot;, &quot;%&#123;TIMESTAMP_ISO8601:logtime&#125;&quot;]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        grok &#123;</span><br><span class="line">            match =&gt; &#123;</span><br><span class="line">                &quot;message&quot; =&gt; &quot;%&#123;GREEDYDATA:sms&#125;&quot;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">output &#123;</span><br><span class="line">    stdout &#123;</span><br><span class="line">        codec =&gt; dots</span><br><span class="line">    &#125;</span><br><span class="line">    if &quot;_grokparsefailure&quot; in [tags] &#123;</span><br><span class="line">        stdout &#123;</span><br><span class="line">            codec =&gt; rubydebug</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; else if &quot;trace&quot; in [tags] &#123;</span><br><span class="line">        redis &#123;</span><br><span class="line">            host =&gt; [&quot;10.168.158.199:6379&quot;, &quot;10.117.6.144:6379&quot;]</span><br><span class="line">            key =&gt; [&quot;trace&quot;]</span><br><span class="line">            batch =&gt; true</span><br><span class="line">            batch_events =&gt; 500</span><br><span class="line">            workers =&gt; 3</span><br><span class="line">            data_type =&gt; &quot;list&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; else if &quot;info&quot; in [tags] &#123;</span><br><span class="line">        redis &#123;</span><br><span class="line">            host =&gt; [&quot;10.168.158.199:6379&quot;, &quot;10.117.6.144:6379&quot;]</span><br><span class="line">            key =&gt; [&quot;info&quot;]</span><br><span class="line">            data_type =&gt; &quot;list&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; else if &quot;error&quot; in [tags] &#123;</span><br><span class="line">        redis &#123;</span><br><span class="line">            host =&gt; [&quot;10.168.158.199:6379&quot;, &quot;10.117.6.144:6379&quot;]</span><br><span class="line">            key =&gt; [&quot;error&quot;]</span><br><span class="line">            data_type =&gt; &quot;list&quot;</span><br><span class="line">            batch =&gt; true</span><br><span class="line">            batch_events =&gt; 500</span><br><span class="line">            workers =&gt; 3</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; else if &quot;metrics&quot; in [tags] &#123;</span><br><span class="line">        redis &#123;</span><br><span class="line">            host =&gt; [&quot;10.168.158.199:6379&quot;, &quot;10.117.6.144:6379&quot;]</span><br><span class="line">            key =&gt; [&quot;metrics&quot;]</span><br><span class="line">            data_type =&gt; &quot;list&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="Beats"><a href="#Beats" class="headerlink" title="Beats"></a>Beats</h1><p>是从Logstash分出来的一个分支，用go语言写的，性能相对来说更好，分为 产品线</p>
<ul>
<li>Filebeat 收集中间件日志</li>
<li>Metricbeat 收集系统级性能日志</li>
<li>Packetbeat 收集网络数据包日志</li>
<li>Winlogbeat 收集win日志</li>
<li>Auditbeat 收集审计日志</li>
<li>Heartbeat 收集心跳相关日志</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">./filebeat -e -c metricbeat.yml</span><br><span class="line"></span><br><span class="line">./metricbeat -e -c metricbeat.yml</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>store</tag>
      </tags>
  </entry>
  <entry>
    <title>NoSQL LevelDB for java</title>
    <url>/2015/12/10/0080-NoSQL%20LevelDB%20for%20java/</url>
    <content><![CDATA[<p>借鉴的 hbase 的思想，本身也是 activeMQ 的核心组件。<br>作为持久化队列的良性基础模块。TPS 能到13W+<br>使用场景 队列数据落地。</p>
<p><a href="https://github.com/dain/leveldb" target="_blank" rel="noopener">https://github.com/dain/leveldb</a></p>
<p>可行的，还有跟进的版本 <a href="http://rocksdb.org/" target="_blank" rel="noopener">http://rocksdb.org/</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">     &lt;groupId&gt;org.iq80.leveldb&lt;/groupId&gt;</span><br><span class="line">     &lt;artifactId&gt;leveldb-project&lt;/artifactId&gt;</span><br><span class="line">     &lt;version&gt;0.7&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public class LocalStoreFactory &#123;</span><br><span class="line"></span><br><span class="line">  static LogWriter writer = null;</span><br><span class="line"></span><br><span class="line">  static &#123;</span><br><span class="line">    if (writer == null) &#123;</span><br><span class="line">      try &#123;</span><br><span class="line">        writer = Logs.createLogWriter(createTempFile(&quot;table&quot;, &quot;.log&quot;), 10000);</span><br><span class="line">        System.out.println(&quot;绑定一个临时文件&quot;);</span><br><span class="line">        System.out.println(writer.getFile().getAbsolutePath());</span><br><span class="line">      &#125; catch (IOException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  public static void write(String data) &#123;</span><br><span class="line">    try &#123;</span><br><span class="line">      writer.addRecord(toSlice(data), false);</span><br><span class="line">    &#125; catch (IOException e) &#123;</span><br><span class="line">      System.out.println(&quot;异常&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  public static LogWriter getWriter() &#123;</span><br><span class="line">    return writer;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  public static LogReader getReader() &#123;</span><br><span class="line">    FileChannel fileChannel = null;</span><br><span class="line">    LogReader reader = null;</span><br><span class="line">    try &#123;</span><br><span class="line">      try &#123;</span><br><span class="line">        fileChannel = new FileInputStream(writer.getFile()).getChannel();</span><br><span class="line">        System.out.println(&quot;读取一个临时文件&quot;);</span><br><span class="line">        System.out.println(writer.getFile().getAbsolutePath());</span><br><span class="line">      &#125; catch (FileNotFoundException e) &#123;</span><br><span class="line">        System.out.println(&quot;文件读取失败&quot;);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      reader = new LogReader(fileChannel, new LogMonitor() &#123;</span><br><span class="line">        public void corruption(long l, String s) &#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public void corruption(long l, Throwable throwable) &#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;, true, 0);</span><br><span class="line">    &#125; catch (Exception e) &#123;</span><br><span class="line">      Closeables.closeQuietly(fileChannel);</span><br><span class="line">    &#125;</span><br><span class="line">    return reader;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  private static Slice toSlice(String value) throws UnsupportedEncodingException &#123;</span><br><span class="line">    byte[] bytes = value.getBytes(&quot;UTF-8&quot;);</span><br><span class="line">    Slice slice = Slices.allocate(bytes.length);</span><br><span class="line">    SliceOutput sliceOutput = slice.output();</span><br><span class="line">    for (int i = 0; i &lt; 1; i++) &#123;</span><br><span class="line">      sliceOutput.writeBytes(bytes);</span><br><span class="line">    &#125;</span><br><span class="line">    return slice;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>store</tag>
      </tags>
  </entry>
  <entry>
    <title>NoSQl Redis 4.0</title>
    <url>/2015/12/17/0081-NoSQl%20Redis%204.0/</url>
    <content><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>kv 数据库， 单线程高并发，支持集群，可以实现队列，事务场景，有原子cas 类实现计数。<br>有几个概念，数据库，表</p>
<p>场景</p>
<ul>
<li>缓存-分布式缓存  </li>
<li>会话-分布式会话</li>
<li>队列 -消息队列</li>
<li>广播-订阅通知模型</li>
<li>原子性操作-分布式锁、防超卖</li>
</ul>
<p>优点</p>
<ul>
<li>支持5种数据类型string、hash、list、set、zset</li>
<li>高性能 8万/s  TPS</li>
<li>集群 一致性hash的集群分布，支持从复制的高可用方案 </li>
<li>持久化机制  AOF、RDB </li>
</ul>
<h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><h3 id="GUI"><a href="#GUI" class="headerlink" title="GUI"></a>GUI</h3><p><a href="https://github.com/uglide/RedisDesktopManager" target="_blank" rel="noopener">https://github.com/uglide/RedisDesktopManager</a></p>
<h3 id="运维命令"><a href="#运维命令" class="headerlink" title="运维命令"></a>运维命令</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">redis-cli shutdown</span><br><span class="line">nohup redis-server ./redis.conf  -p 3388 &gt;/dev/null 2&gt;&amp;1 &amp;</span><br><span class="line"></span><br><span class="line">vim redis.conf</span><br><span class="line">daemonize yes</span><br><span class="line">requirepass myRedis  </span><br><span class="line">## 其他可选的配置</span><br><span class="line">pidfile</span><br><span class="line">port</span><br><span class="line">bind</span><br><span class="line">logfile</span><br><span class="line">loglevel</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">src/redis-cli -h  127.0.0.1 -p 6379 -a MiPOnylRdJzTsmhu</span><br></pre></td></tr></table></figure>
<h3 id="cli-监控"><a href="#cli-监控" class="headerlink" title="cli 监控"></a>cli 监控</h3><p><a href="https://github.com/facebookarchive/redis-faina" target="_blank" rel="noopener">https://github.com/facebookarchive/redis-faina</a><br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">redis-cli -p 6379 -h x.x.x.x MONITOR | head -n 10 | ./redis-faina.py</span><br></pre></td></tr></table></figure></p>
<h2 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h2><h3 id="jedis"><a href="#jedis" class="headerlink" title="jedis"></a>jedis</h3><p>pom.xml<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;redis.clients&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;jedis&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;2.7.3&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure></p>
<p>使用<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">public class TaskPushTask implements TaskExecute &#123;</span><br><span class="line"></span><br><span class="line">  final Logger logger = LoggerFactory.getLogger(TaskPushTask.class);</span><br><span class="line"></span><br><span class="line">  JedisPool pool = ApplicationEngine.getBean(JedisPool.class);</span><br><span class="line"></span><br><span class="line">  private String method;</span><br><span class="line">  private String userId;</span><br><span class="line"></span><br><span class="line">  public TaskPushTask(String method, String userId) &#123;</span><br><span class="line">    this.method = method;</span><br><span class="line">    this.userId = userId;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  @Override</span><br><span class="line">  public void execute() throws SysException &#123;</span><br><span class="line">    Jedis jedis = pool.getResource();</span><br><span class="line">    try &#123;</span><br><span class="line">      jedis.publish(method, userId);</span><br><span class="line">    &#125; catch (Exception e) &#123;</span><br><span class="line">      logger.error(&quot;推送消息失败&quot;, e);</span><br><span class="line">    &#125; finally &#123;</span><br><span class="line">      pool.returnBrokenResource(jedis);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h1 id="快速安装"><a href="#快速安装" class="headerlink" title="快速安装"></a>快速安装</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker run -p 6379:6379 -v $PWD/data:/data  -d redis redis-server --appendonly yes --requirepass xxxxx</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span><br><span class="line">       xsi:schemaLocation=&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd&quot;&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &lt;!-- redis连接池的配置 --&gt;</span><br><span class="line">    &lt;bean id=&quot;jedisPoolConfig&quot; class=&quot;redis.clients.jedis.JedisPoolConfig&quot;&gt;</span><br><span class="line">        &lt;property name=&quot;maxTotal&quot; value=&quot;$&#123;redis.pool.maxActive&#125;&quot;/&gt;</span><br><span class="line">        &lt;property name=&quot;maxIdle&quot; value=&quot;$&#123;redis.pool.maxIdle&#125;&quot;/&gt;</span><br><span class="line">        &lt;property name=&quot;minIdle&quot; value=&quot;$&#123;redis.pool.maxWait&#125;&quot;/&gt;</span><br><span class="line">        &lt;property name=&quot;testOnBorrow&quot; value=&quot;$&#123;redis.pool.testOnBorrow&#125;&quot;/&gt;</span><br><span class="line">        &lt;property name=&quot;testOnReturn&quot; value=&quot;$&#123;redis.pool.testOnReturn&#125;&quot;/&gt;</span><br><span class="line">    &lt;/bean&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- redis的连接池pool，不是必选项：timeout/password  --&gt;</span><br><span class="line">    &lt;bean id=&quot;jedisPool&quot; class=&quot;redis.clients.jedis.JedisPool&quot;&gt;</span><br><span class="line">        &lt;constructor-arg index=&quot;0&quot; ref=&quot;jedisPoolConfig&quot;/&gt;</span><br><span class="line">        &lt;constructor-arg index=&quot;1&quot; value=&quot;$&#123;redis.host&#125;&quot;/&gt;</span><br><span class="line">        &lt;constructor-arg index=&quot;2&quot; value=&quot;$&#123;redis.port&#125;&quot; type=&quot;int&quot;/&gt;</span><br><span class="line">        &lt;constructor-arg index=&quot;3&quot; value=&quot;$&#123;redis.timeout&#125;&quot; type=&quot;int&quot;/&gt;</span><br><span class="line">        &lt;constructor-arg index=&quot;4&quot; value=&quot;$&#123;redis.password&#125;&quot;/&gt;</span><br><span class="line">    &lt;/bean&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;/beans&gt;</span><br></pre></td></tr></table></figure>
<p>subpub 模型实现<br><a href="http://guosxu.iteye.com/blog/977382" target="_blank" rel="noopener">http://guosxu.iteye.com/blog/977382</a></p>
<h1 id="常见命令"><a href="#常见命令" class="headerlink" title="常见命令"></a>常见命令</h1><ul>
<li>CRUD  SET/GET/DEL/EXISTS/decr/incr/mget</li>
<li>清空数据库 flushdb、flushall</li>
<li>队列  lpush、lrange、blpop、llen</li>
<li>集合 sadd、zadd</li>
<li>订阅模型 SUBSCRIBE、PSUBSCRIBE</li>
<li>事务 MULTI/EXEC</li>
<li>登陆 AUTH “password”、CONFIG get/set requirepass 、PING</li>
<li>备份 BGSAVE、恢复 CONFIG get dir查找目录，然后直接覆盖 dump.rdb</li>
<li>最大连接数 config get/set maxclients  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">redis-server --maxclients 100000</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h1 id="telnet-命令"><a href="#telnet-命令" class="headerlink" title="telnet 命令"></a>telnet 命令</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">telnet 0.0.0.0  6379</span><br><span class="line"># 状态</span><br><span class="line">info</span><br><span class="line"># 关机</span><br><span class="line">SHUTDOWN</span><br><span class="line"># 退出</span><br><span class="line">QUIT</span><br><span class="line"># 返回数据库总数</span><br><span class="line">DBSIZE</span><br><span class="line"># 清空当前数据库的所有键</span><br><span class="line">FLUSHDB</span><br><span class="line"># 清空所有数据库中的所有键</span><br><span class="line">FLUSHALL</span><br><span class="line"># 异步保存</span><br><span class="line">BGSAVE、SAVE</span><br><span class="line"># 实时输出请求</span><br><span class="line">MONITOR</span><br></pre></td></tr></table></figure>
<h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 查询配置文件位置</span><br><span class="line">ps -aux |grep redis</span><br><span class="line"># 默认位置</span><br><span class="line">/etc/redis.conf</span><br><span class="line">/usr/local/redis</span><br><span class="line">./redis -c redis.conf</span><br></pre></td></tr></table></figure>
<h1 id="使用-redis-作为session-整合-spring"><a href="#使用-redis-作为session-整合-spring" class="headerlink" title="使用 redis 作为session 整合 spring"></a>使用 redis 作为session 整合 spring</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!--session redis--&gt;</span><br><span class="line">&lt;bean class=&quot;org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration&quot;/&gt;</span><br><span class="line">&lt;bean class=&quot;org.springframework.data.redis.connection.jedis.JedisConnectionFactory&quot;&gt;</span><br><span class="line">    &lt;property name=&quot;hostName&quot; value=&quot;$&#123;redis.host&#125;&quot;/&gt;</span><br><span class="line">    &lt;property name=&quot;port&quot; value=&quot;6380&quot;/&gt;</span><br><span class="line">    &lt;property name=&quot;password&quot; value=&quot;$&#123;redis.password&#125;&quot;/&gt;</span><br><span class="line">&lt;/bean&gt;</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!--共享会话--&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework.session&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-session&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;1.0.2.RELEASE&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework.data&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-data-redis&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;1.6.0.RELEASE&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure>
<p>参考文章</p>
<ul>
<li><a href="http://www.infoq.com/cn/articles/tq-redis-memory-usage-optimization-storage/" target="_blank" rel="noopener">http://www.infoq.com/cn/articles/tq-redis-memory-usage-optimization-storage/</a></li>
<li><a href="http://www.cnblogs.com/wenanry/archive/2012/02/26/2368398.html" target="_blank" rel="noopener">http://www.cnblogs.com/wenanry/archive/2012/02/26/2368398.html</a></li>
<li><a href="http://redis.io/" target="_blank" rel="noopener">http://redis.io/</a></li>
<li><a href="http://doc.redisfans.com/" target="_blank" rel="noopener">http://doc.redisfans.com/</a></li>
<li><a href="http://www.infoq.com/cn/articles/architecture-practice-01-redis?utm_source=infoq&amp;utm_medium=popular_widget&amp;utm_campaign=popular_content_list&amp;utm_content=homepage" target="_blank" rel="noopener">http://www.infoq.com/cn/articles/architecture-practice-01-redis?utm_source=infoq&amp;utm_medium=popular_widget&amp;utm_campaign=popular_content_list&amp;utm_content=homepage</a></li>
<li><a href="https://redis.io/documentation" target="_blank" rel="noopener">https://redis.io/documentation</a></li>
</ul>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>store</tag>
      </tags>
  </entry>
  <entry>
    <title>ORM Framework Mybatis</title>
    <url>/2015/12/18/0082-ORM%20Framework%20Mybatis/</url>
    <content><![CDATA[<h1 id="Mybatis"><a href="#Mybatis" class="headerlink" title="Mybatis"></a>Mybatis</h1><h2 id="最佳实践"><a href="#最佳实践" class="headerlink" title="最佳实践"></a>最佳实践</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE sqlMap PUBLIC &quot;-//iBATIS.com//DTD SQL Map 2.0//EN&quot; &quot;http://www.ibatis.com/dtd/sql-map-2.dtd&quot;&gt;</span><br><span class="line">&lt;sqlMap namespace=&quot;KbObjProp&quot;&gt;</span><br><span class="line">    &lt;!-- Alias Map Defined --&gt;</span><br><span class="line">    &lt;typeAlias alias=&quot;KbObjProp&quot; type=&quot;com.raycloud.express.commons.model.prop.KbObjProp&quot;/&gt;</span><br><span class="line">    &lt;resultMap id=&quot;kbObjProp&quot; class=&quot;KbObjProp&quot;&gt;</span><br><span class="line">        &lt;result property=&quot;id&quot; column=&quot;id&quot;/&gt;</span><br><span class="line">        &lt;result property=&quot;cid&quot; column=&quot;cid&quot;/&gt;</span><br><span class="line">        &lt;result property=&quot;pids&quot; column=&quot;pids&quot;/&gt;</span><br><span class="line">        &lt;result property=&quot;status&quot; column=&quot;status&quot;/&gt;</span><br><span class="line">        &lt;result property=&quot;nameAbbr&quot; column=&quot;name_abbr&quot;/&gt;</span><br><span class="line">        &lt;result property=&quot;name&quot; column=&quot;name&quot;/&gt;</span><br><span class="line">        &lt;result property=&quot;source&quot; column=&quot;source&quot;/&gt;</span><br><span class="line">        &lt;result property=&quot;lock&quot; column=&quot;lock&quot;/&gt;</span><br><span class="line">        &lt;result property=&quot;weight&quot; column=&quot;weight&quot;/&gt;</span><br><span class="line">        &lt;result property=&quot;editor&quot; column=&quot;editor&quot;/&gt;</span><br><span class="line">        &lt;result property=&quot;addTime&quot; column=&quot;add_time&quot;/&gt;</span><br><span class="line">        &lt;result property=&quot;updTime&quot; column=&quot;upd_time&quot;/&gt;</span><br><span class="line">        &lt;result property=&quot;propertyLevel&quot; column=&quot;property_level&quot;/&gt;</span><br><span class="line">        &lt;result property=&quot;propertyGroupId&quot; column=&quot;property_group_id&quot;/&gt;</span><br><span class="line">    &lt;/resultMap&gt;</span><br><span class="line">    &lt;sql id=&quot;Base_Column_List&quot;&gt;</span><br><span class="line">        id , cid , pids , status , name_abbr , name , source , `lock` , weight , editor , add_time , upd_time,property_level,property_group_id</span><br><span class="line">    &lt;/sql&gt;</span><br><span class="line">        &lt;sql id=&quot;kbObjPropList.where&quot;&gt;</span><br><span class="line">        &lt;dynamic prepend=&quot; WHERE &quot;&gt;</span><br><span class="line">            &lt;isNotNull property=&quot;id&quot; prepend=&quot; AND &quot;&gt;</span><br><span class="line">                id=# id# </span><br><span class="line">            &lt;/isNotNull&gt;</span><br><span class="line">            &lt;isNotNull property=&quot;cid&quot; prepend=&quot; AND &quot;&gt;</span><br><span class="line">                cid=# cid# </span><br><span class="line">            &lt;/isNotNull&gt;</span><br><span class="line">            &lt;isNotNull property=&quot;pids&quot; prepend=&quot; AND &quot;&gt;</span><br><span class="line">                pids=# pids# </span><br><span class="line">            &lt;/isNotNull&gt;</span><br><span class="line">            &lt;isNotNull property=&quot;status&quot; prepend=&quot; AND &quot;&gt;</span><br><span class="line">                status=# status# </span><br><span class="line">            &lt;/isNotNull&gt;</span><br><span class="line">            &lt;isNotNull property=&quot;nameAbbr&quot; prepend=&quot; AND &quot;&gt;</span><br><span class="line">                name_abbr=# nameAbbr# </span><br><span class="line">            &lt;/isNotNull&gt;</span><br><span class="line">            &lt;isNotNull property=&quot;name&quot; prepend=&quot; AND &quot;&gt;</span><br><span class="line">                name=# name# </span><br><span class="line">            &lt;/isNotNull&gt;</span><br><span class="line">            &lt;isNotNull property=&quot;source&quot; prepend=&quot; AND &quot;&gt;</span><br><span class="line">                source=# source# </span><br><span class="line">            &lt;/isNotNull&gt;</span><br><span class="line">            &lt;isNotNull property=&quot;lock&quot; prepend=&quot; AND &quot;&gt;</span><br><span class="line">                `lock`=# lock# </span><br><span class="line">            &lt;/isNotNull&gt;</span><br><span class="line">            &lt;isNotNull property=&quot;weight&quot; prepend=&quot; AND &quot;&gt;</span><br><span class="line">                weight=# weight# </span><br><span class="line">            &lt;/isNotNull&gt;</span><br><span class="line">            &lt;isNotNull property=&quot;editor&quot; prepend=&quot; AND &quot;&gt;</span><br><span class="line">                editor=# editor# </span><br><span class="line">            &lt;/isNotNull&gt;</span><br><span class="line">        &lt;/dynamic&gt;</span><br><span class="line">    &lt;/sql&gt;</span><br><span class="line"></span><br><span class="line">     &lt;select id=&quot;KbObjProp.getKbObjPropByName&quot; resultMap=&quot;kbObjProp&quot; parameterClass=&quot;hashMap&quot;&gt;</span><br><span class="line">        SELECT</span><br><span class="line">        &lt;include refid=&quot;Base_Column_List&quot;/&gt;</span><br><span class="line">        FROM kb_obj_prop</span><br><span class="line">        WHERE</span><br><span class="line">        &lt;iterate conjunction=&quot;OR&quot; open=&quot;(&quot; close=&quot;)&quot; property=&quot;name&quot; &gt;</span><br><span class="line">        (name= # name[].name#  and cid=  # name[].cid# )</span><br><span class="line">        &lt;/iterate&gt;</span><br><span class="line"></span><br><span class="line">    &lt;/select&gt;</span><br><span class="line"></span><br><span class="line">    &lt;update id=&quot;clear&quot;&gt;</span><br><span class="line">        TRUNCATE TABLE kb_obj_prop;</span><br><span class="line">    &lt;/update&gt;</span><br><span class="line"></span><br><span class="line">    &lt;sql id=&quot;limit&quot;&gt;</span><br><span class="line">        &lt;dynamic prepend=&quot; LIMIT  &quot;&gt;</span><br><span class="line">            &lt;isNotNull property=&quot;page&quot;&gt;</span><br><span class="line">                # page.startRow# ,# page.offsetRow# </span><br><span class="line">            &lt;/isNotNull&gt;</span><br><span class="line">        &lt;/dynamic&gt;</span><br><span class="line">    &lt;/sql&gt;</span><br><span class="line">&lt;/result&gt;</span><br></pre></td></tr></table></figure>
<p>page.java<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">/**</span><br><span class="line"> * 页码信息，startRow必须从1开始,page必须大于或者等于0</span><br><span class="line"> *</span><br><span class="line"> * @author ZuoYun</span><br><span class="line"> */</span><br><span class="line">public class Page implements Serializable &#123;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     *</span><br><span class="line">     */</span><br><span class="line">    private static final long serialVersionUID = 1L;</span><br><span class="line">    public final static int DEFAULT_PAGE_SIZE = 20;</span><br><span class="line">    public final static int DEFAULT_PAGE_NUM = 1;</span><br><span class="line">    protected Integer pageSize = DEFAULT_PAGE_SIZE;</span><br><span class="line">    protected Integer startRow;//起始行</span><br><span class="line">    protected Integer offsetRow;//结束行(闭合)</span><br><span class="line">    protected Integer pageNo = DEFAULT_PAGE_NUM;</span><br><span class="line"></span><br><span class="line">    public Integer getStartRow() &#123;</span><br><span class="line">        if (startRow == null) &#123;</span><br><span class="line">            setPageNo(pageNo);</span><br><span class="line">        &#125;</span><br><span class="line">        return startRow;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public Page setStartRow(Integer startRow) &#123;</span><br><span class="line">        this.startRow = startRow;</span><br><span class="line">        return this;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public Integer getOffsetRow() &#123;</span><br><span class="line">        if (null == offsetRow) &#123;</span><br><span class="line">            setPageNo(pageNo);</span><br><span class="line">        &#125;</span><br><span class="line">        return offsetRow;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public Page setOffsetRow(Integer offsetRow) &#123;</span><br><span class="line">        this.offsetRow = offsetRow;</span><br><span class="line">        return this;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public Page setPageNo(Integer page) &#123;</span><br><span class="line">        if (page == null || page &lt; 0) page = DEFAULT_PAGE_NUM;</span><br><span class="line">        this.pageNo = page;</span><br><span class="line">        this.startRow = (page - 1) * this.pageSize;</span><br><span class="line">        this.offsetRow = this.pageSize;</span><br><span class="line">        return this;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public Integer getPageSize() &#123;</span><br><span class="line">        return pageSize;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public Page setPageSize(Integer pageSize) &#123;</span><br><span class="line">        if (pageSize == null || pageSize &lt; 1) pageSize = 1;</span><br><span class="line">        this.pageSize = pageSize;</span><br><span class="line">        this.startRow = (pageNo - 1) * this.pageSize;</span><br><span class="line">        this.offsetRow = this.pageSize;</span><br><span class="line">        return this;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public Integer getPageNo() &#123;</span><br><span class="line">        return pageNo;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>LogAnalyize kibana/grafana</title>
    <url>/2015/12/18/0083-LogAnalyize%20kibana-grafana/</url>
    <content><![CDATA[<h1 id="kibana"><a href="#kibana" class="headerlink" title="kibana"></a>kibana</h1><blockquote>
<p><a href="https://www.elastic.co/products/kibana" target="_blank" rel="noopener">https://www.elastic.co/products/kibana</a><br>新版本的改进了很多地方</p>
</blockquote>
<p>查询语法<br><a href="http://segmentfault.com/a/1190000002972420" target="_blank" rel="noopener">http://segmentfault.com/a/1190000002972420</a></p>
<h1 id="grafana"><a href="#grafana" class="headerlink" title="grafana"></a>grafana</h1><blockquote>
<p><a href="http://grafana.org" target="_blank" rel="noopener">http://grafana.org</a></p>
</blockquote>
<ul>
<li>默认账号密码 admin admin</li>
<li>这个有权限分层，字段自动发现，挺好</li>
</ul>
<p>简单玩了一下，发现 grafana 很强大，基本需求完全可以满足。做一个简单介绍</p>
<ul>
<li>有账号体系，权限层级分明</li>
<li>面板有4种： 图、表、值、文本</li>
<li>自动索引检测</li>
<li>有警戒值标记</li>
<li>有模板、注解面板功能</li>
<li>有面板分享，账号邀请功能</li>
<li>混合datasource排版</li>
</ul>
<h1 id="其他选项？"><a href="#其他选项？" class="headerlink" title="其他选项？"></a>其他选项？</h1><ul>
<li>splunk  <a href="http://10data.com/splunk/" target="_blank" rel="noopener">http://10data.com/splunk/</a></li>
<li>logentries <a href="https://logentries.com/" target="_blank" rel="noopener">https://logentries.com/</a></li>
</ul>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>store</tag>
      </tags>
  </entry>
  <entry>
    <title>Python Notebook</title>
    <url>/2015/12/24/0084-Python%20Notebook/</url>
    <content><![CDATA[<h1 id="Anaconda"><a href="#Anaconda" class="headerlink" title="Anaconda"></a>Anaconda</h1><p><a href="https://www.continuum.io/downloads" target="_blank" rel="noopener">https://www.continuum.io/downloads</a><br><a href="https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/" target="_blank" rel="noopener">https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/</a><br>Anaconda是关于Python数据分析和科学计算的分发包。</p>
<ul>
<li>自带 完整的 python 语言环境</li>
<li>自带 pip 和 conda</li>
<li>自带 notebook</li>
<li>绕 root</li>
</ul>
<h1 id="Jupyter"><a href="#Jupyter" class="headerlink" title="Jupyter"></a>Jupyter</h1><p><a href="https://github.com/jupyter/notebook" target="_blank" rel="noopener">https://github.com/jupyter/notebook</a><br><a href="http://ipython.org/notebook" target="_blank" rel="noopener">http://ipython.org/notebook</a></p>
<h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 安装</span><br><span class="line">pip install notebook</span><br><span class="line"># 启动</span><br><span class="line">jupyter notebook --ip=&apos;*&apos;</span><br></pre></td></tr></table></figure>
<h1 id="魔术命令使用"><a href="#魔术命令使用" class="headerlink" title="魔术命令使用"></a>魔术命令使用</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 所有魔术命令文档</span><br><span class="line">%magic</span><br><span class="line"># 检测时间</span><br><span class="line">%timeit</span><br><span class="line"># 自动载入 numpy pylab 库</span><br><span class="line">%pylab </span><br><span class="line"># 下载代码</span><br><span class="line">%load</span><br><span class="line"># 性能分析</span><br><span class="line">%%prun</span><br></pre></td></tr></table></figure>
<h1 id="自带工具"><a href="#自带工具" class="headerlink" title="自带工具"></a>自带工具</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 图</span><br><span class="line">%pylab inline</span><br><span class="line">plot(random.randn(100));</span><br><span class="line"></span><br><span class="line"># 表</span><br><span class="line">import pandas as pd</span><br><span class="line"> </span><br><span class="line">df = pd.DataFrame(&#123; &apos;A&apos; : 1.,</span><br><span class="line">                    &apos;B&apos; : pd.Timestamp(&apos;20130102&apos;),</span><br><span class="line">                    &apos;C&apos; : pd.Series(1, index=list(range(4)), dtype=&apos;float32&apos;),</span><br><span class="line">                    &apos;D&apos; : pd.Series([1, 2, 1, 2], dtype=&apos;int32&apos;),</span><br><span class="line">                    &apos;E&apos; : pd.Categorical([&quot;test&quot;, &quot;train&quot;, &quot;test&quot;, &quot;train&quot;]),</span><br><span class="line">                    &apos;F&apos; : &apos;foo&apos; &#125;)</span><br><span class="line"></span><br><span class="line">df</span><br><span class="line"></span><br><span class="line"># 显示数学公式</span><br><span class="line">from IPython.external.mathjax import install_mathjax</span><br><span class="line">install_mathjax()</span><br><span class="line"></span><br><span class="line">from IPython.display import Latex</span><br><span class="line">Latex(r&quot;$\sqrt&#123;x^2+y^2&#125;$&quot;)</span><br><span class="line"></span><br><span class="line"># 显示图片</span><br><span class="line">from IPython.display import Image</span><br><span class="line">Image(&quot;http://localhost:8888/files/Pictures/17375069.jpg&quot;)</span><br><span class="line"></span><br><span class="line"># javascript 脚本</span><br><span class="line">from IPython.display import HTML</span><br><span class="line">from IPython.display import Javascript</span><br><span class="line">from IPython.display import IFrame</span><br><span class="line">Javascript(&quot;alert(&apos;ok&apos;)&quot;)</span><br><span class="line">HTML(&quot;osm.html&quot;)</span><br><span class="line">IFrame(&quot;osm.html&quot;,width=700,height=350)</span><br><span class="line"></span><br><span class="line"># 下载代码</span><br><span class="line">%load http://matplotlib.org/mpl_examples/pylab_examples/histogram_demo.py</span><br><span class="line"></span><br><span class="line"># 性能分析</span><br><span class="line">%%prun</span><br><span class="line">for i in xrange(100):</span><br><span class="line">    linalg.det(random.rand(10,10))</span><br></pre></td></tr></table></figure>
<h1 id="Pandas-Numpy"><a href="#Pandas-Numpy" class="headerlink" title="Pandas/Numpy"></a>Pandas/Numpy</h1><p><a href="http://pandas.pydata.org/pandas-docs/stable/10min.html" target="_blank" rel="noopener">http://pandas.pydata.org/pandas-docs/stable/10min.html</a><br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 读取 csv 文件</span><br><span class="line">df = pd.read_csv(loggerfile, header=None, sep=&apos;,&apos;)</span><br><span class="line"># 读取 mysql 数据</span><br><span class="line">import pandas as pd</span><br><span class="line">import pymysql</span><br><span class="line">mysql= pymysql.connect(</span><br><span class="line">    host=&apos;xxxx, </span><br><span class="line">    port=3306,user=&apos;xxx&apos;, </span><br><span class="line">    passwd=&apos;xxx&apos;, </span><br><span class="line">    db=&apos;xxx&apos;,</span><br><span class="line">    charset=&quot;utf8&quot;)</span><br><span class="line"></span><br><span class="line">df = pd.read_sql(&apos;select * from xxx limit 0,10000&apos;, con=mysql)    </span><br><span class="line">mysql.close()</span><br></pre></td></tr></table></figure></p>
<h1 id="Seaborn-Matplotlib"><a href="#Seaborn-Matplotlib" class="headerlink" title="Seaborn/Matplotlib"></a>Seaborn/Matplotlib</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">%matplotlib inline </span><br><span class="line"></span><br><span class="line">import seaborn as sns</span><br><span class="line">#  Load one of the data sets that come with seaborn</span><br><span class="line">tips = sns.load_dataset(&quot;tips&quot;)</span><br><span class="line">sns.jointplot(&quot;total_bill&quot;, &quot;tip&quot;, tips, kind=&apos;reg&apos;);</span><br></pre></td></tr></table></figure>
<p><a href="http://www.justinablog.com/archives/1357" target="_blank" rel="noopener">http://www.justinablog.com/archives/1357</a></p>
<p><a href="http://web.stanford.edu/~mwaskom/software/seaborn/tutorial/regression.html" target="_blank" rel="noopener">http://web.stanford.edu/~mwaskom/software/seaborn/tutorial/regression.html</a></p>
<p><a href="http://nbviewer.ipython.org/gist/jackparmer/5485807511a58be48bf2" target="_blank" rel="noopener">http://nbviewer.ipython.org/gist/jackparmer/5485807511a58be48bf2</a></p>
<p><a href="http://www.labri.fr/perso/nrougier/teaching/matplotlib/#" target="_blank" rel="noopener">http://www.labri.fr/perso/nrougier/teaching/matplotlib/#</a> line-properties</p>
<h1 id="TODO"><a href="#TODO" class="headerlink" title="TODO"></a>TODO</h1><p>graphlab<br><a href="https://dato.com/products/create/open_source.html" target="_blank" rel="noopener">https://dato.com/products/create/open_source.html</a><br><a href="https://dato.com/learn/userguide/install.html" target="_blank" rel="noopener">https://dato.com/learn/userguide/install.html</a><br><a href="https://dato.com/download/" target="_blank" rel="noopener">https://dato.com/download/</a></p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>未归档</tag>
      </tags>
  </entry>
  <entry>
    <title>系统监控-colletcd、glances、zabbix</title>
    <url>/2015/12/25/0085-%E7%B3%BB%E7%BB%9F%E7%9B%91%E6%8E%A7-colletcd%E3%80%81glances%E3%80%81zabbix/</url>
    <content><![CDATA[<h1 id="glances"><a href="#glances" class="headerlink" title="glances"></a>glances</h1><p><a href="https://github.com/nicolargo/glances" target="_blank" rel="noopener">https://github.com/nicolargo/glances</a></p>
<p>pip install psutil<br>glances -w -p 30005</p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>devops</tag>
      </tags>
  </entry>
  <entry>
    <title>Python Ansible</title>
    <url>/2015/12/31/0086-Python%20Ansible/</url>
    <content><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>类似工具如 fabic，ppssh，客户端需要 python&gt;2.4<br>配置Inventory路径在 etc/ansible/hosts</p>
<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><ul>
<li><a href="http://docs.ans" target="_blank" rel="noopener">http://docs.ans</a> ible.com/ansible/latest/intro_installation.html# installation</li>
<li><a href="http://www.ansible.com.cn/docs/tower.html" target="_blank" rel="noopener">http://www.ansible.com.cn/docs/tower.html</a><h1 id="指南"><a href="#指南" class="headerlink" title="指南"></a>指南</h1><a href="http://www.ansible.com.cn/" target="_blank" rel="noopener">http://www.ansible.com.cn/</a><h1 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h1></li>
<li>inventory 机器清单</li>
<li>playbook 部署脚本<h1 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pip install ansible</span><br><span class="line"># 命令集</span><br><span class="line">ansible --version</span><br><span class="line">ansible-playbook </span><br><span class="line">ansible-doc</span><br><span class="line"># 配置</span><br><span class="line"># 默认是没有/etc/ansible/ansible.cfg文件需要自建</span><br><span class="line">/etc/ansible/ansible.cfg</span><br><span class="line">/etc/ansible/hosts</span><br><span class="line">/usr/share/ansible_plugins/</span><br><span class="line"># 常用命令</span><br><span class="line">ansible -vvv -i /etc/ansible/hosts all -m ping </span><br><span class="line">ansible all -m raw  -a &quot;echo 1&quot;</span><br><span class="line">ansible all -m copy -a &quot;src=xx dest=/&quot;</span><br><span class="line">ansible all -a &quot;uptime&quot;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h1 id="Playbook使用"><a href="#Playbook使用" class="headerlink" title="Playbook使用"></a>Playbook使用</h1><p>对于稳定的配置，就要使用playbook了。</p>
<p>一个playbook由多个play组成，一个play由多个task组成，参考Intro to Playbooks。</p>
<p>一个playbook的文件内容通常是如下形式：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">- hosts: groupname</span><br><span class="line">  remote_user: yourname</span><br><span class="line">  sudo: yes</span><br><span class="line">  tasks:</span><br><span class="line">  - name: delete /tmp/server-test</span><br><span class="line">    shell: rm -rf /tmp/server-test</span><br></pre></td></tr></table></figure></p>
<p>使用<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ansible-playbook  -i hosts all xx.yml</span><br><span class="line">ansible-playbook  xx.yml --check</span><br></pre></td></tr></table></figure></p>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="http://docs.ansible.com/ansible/" target="_blank" rel="noopener">http://docs.ansible.com/ansible/</a><br><a href="http://www.tuicool.com/articles/AZVJ3qQ" target="_blank" rel="noopener">http://www.tuicool.com/articles/AZVJ3qQ</a><br><a href="https://linuxtoy.org/archives/hands-on-with-ansible.html" target="_blank" rel="noopener">https://linuxtoy.org/archives/hands-on-with-ansible.html</a></p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>devops</tag>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>TeamManager</title>
    <url>/2016/01/07/0087-TeamManager/</url>
    <content><![CDATA[<h2 id="管理方面书籍"><a href="#管理方面书籍" class="headerlink" title="管理方面书籍"></a>管理方面书籍</h2><ul>
<li>[技术管理之巅——如何从零打造高质效互联网技术团队？]</li>
<li>[一网打尽]</li>
<li>[互联网时代的软件革命-SaaS架构设计]</li>
<li>[30天软件开发：告别瀑布拥抱敏捷]</li>
</ul>
<h2 id="管理方法"><a href="#管理方法" class="headerlink" title="管理方法"></a>管理方法</h2><ul>
<li><p>狼群管理/末位淘汰制/KPI绩效制度<br><br>基本上都是说的同一个东西, 讲白了就是wow里面下副本的时候用的那种… 大部分对团队激励还是蛮大的, 但是也会有创伤,不够人性.</p>
</li>
<li><p>看板管理<br><br>日本人发明的..尊重守时的完成可持续交付</p>
</li>
<li><p>敏捷开发</p>
</li>
</ul>
<p><img src="http://img.sandseasoft.com/image/e/72/5e1bb2f1b6062695527fa0c38029f.jpg" alt><br>idea</p>
<ol>
<li>人的自律 scrum</li>
<li>团队透明化</li>
<li>每天站立会议， sprint启动会议，结束会议，下个sprint的预估，上个sprint的总结</li>
<li>3-9人的小组</li>
<li>最少14天最多30天为一个增量周期的sprint</li>
<li>一功能为单位的，迭代增量开发，降低模块开发之间的关联性，每次发布都有可用功能演示</li>
<li>不要技术债务</li>
<li>周报日报,个人计划透明,团队正向</li>
<li>学会分享,团队分享氛围越好,成长越快,抱团越紧</li>
</ol>
<p>看到别的评论摘抄<br>以下是书中一些观点信息的摘抄：</p>
<p>1：Nokia总结出的迭代开发的基本要求：<br>1.1：迭代要有固定时长，不能超过六个星期；<br>1.2：在每一次迭代的结尾，代码都必须经过QA的测试，能够正常工作；</p>
<p>2：Nokia的Scurm标准：<br>2.1：Scurm团队必须要有产品负责人，而且团队都清楚这个人是谁；<br>2.2：产品负责人必须要有产品backlog，其中包括团队对它进行的估算；<br>2.3：团队必须要有燃尽图，而且要了解他们自己的生产率；<br>2.4：在一个sprint中，外人不能干涉团队的工作；</p>
<p>3：产品负责人之外的人也可以向产品backlog中添加故事，但是他们不能说这个故事有多重要，这是产品负责人独有的权利。他们也不能添加时间估算，这是开发团队独有的权利；</p>
<p>4：我尽力把内部质量和外部质量分开。<br>4.1：外部质量是系统用户可以感知的。运行缓慢、让人迷糊的用户界面就属于外部质量低劣；<br>4.2：内部质量一般指用户看不到的要素，它们对系统的可维护性有深远影响。可维护性包括系统设计的一致性、测试覆盖率、代码可读性和重构等等；</p>
<p>5：经验告诉我，牺牲内部质量是一个糟糕透顶的想法。现在节省下来一点时间，接下来的日子里你就要一直为它付出代价。一旦我们放松要求，允许代码库中暗藏问题，后面就很难恢复质量了；</p>
<p>6：为了调整不同的人对故事的工作量的估算的差异，我们采用了计划扑克方法：每个人独立估算工作量，然后公开，差异比较大的成员互相沟通直至时间估算趋于一致；</p>
<p>7：故事是可以交付的东西，是产品负责人所关心的。任务是不可交付的东西，产品负责人对它也不关心；</p>
<p>8：产品负责人往往不能对技术故事的优先级作出正确的权衡；</p>
<p>9：只要让团队坐到一起，就会有立竿见影的成效。过上一个sprint，团队就会认为挪到一起是绝妙的主意。“一起”具有以下含义：互相听到，互相看到，相对独立（团队突然开始激烈讨论，不会影响团队外的任何人）；</p>
<p>10：我们的目标是在每个sprint之间安排一个实验日（这一天员工可以干任何想干的事情），目前实际执行的是每个月有一个实验日，放在每个月的第一个星期五；</p>
<p>11：TDD（测试驱动开发）很难，但是在一开始没有用TDD进行构建的代码库上实施TDD……则是难上加难！</p>
<p>12：如果你深陷手工回归测试的泥潭，打算让它自动化执行，最好还是放弃吧。首先还是应该想办法简化手工回归测试，然后再考虑将真正的测试变成自动化执行；</p>
<p>13：我的经验是：宁可团队数量少，人数多，也比弄上一大堆总在互相干扰的小团队强。要想拆分小团队，必须确保他们彼此之间不会产生互相干扰；</p>
<p>14：我们在实施Scrum的时候，所做的第一件事情就是打乱基于组件的团队，创建跨组件的团队。它减少了诸如“我们没法完成这个任务，因为我们在等服务器那帮家伙完成他们的工作”之类的情况发生；</p>
<p>15：“团队凝聚力”是Scrum的核心要素之一，如果一个团队合作工作达多个sprint之久，他们就会变得非常紧密。他们会学会如何达成团队涌流（group flow），生产力会提升至难以置信的地步。</p>
<h2 id="马斯洛需求层次理论"><a href="#马斯洛需求层次理论" class="headerlink" title="马斯洛需求层次理论"></a>马斯洛需求层次理论</h2><p><img src="http://img.sandseasoft.com/image/0/01/778897be182ea714c2d0cb2d748cb.jpg" alt></p>
<h2 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h2><p>  哈佛大学公开课：领袖心理学<br>  <a href="http://open.163.com/special/opencourse/psychologyofleadership.html" target="_blank" rel="noopener">http://open.163.com/special/opencourse/psychologyofleadership.html</a></p>
<h2 id="技术等级"><a href="#技术等级" class="headerlink" title="技术等级"></a>技术等级</h2><h3 id="中级"><a href="#中级" class="headerlink" title="中级"></a>中级</h3><ul>
<li>了解maven/git/基础算法</li>
<li>对 SOA服务有了解（如 dubbo）</li>
<li>对 linux 基础操作有了解</li>
<li>对 java 并发编程相关上层 api 了解</li>
<li>工作2-5年，本科生</li>
<li>假想目标薪资8k-14k</li>
</ul>
<h3 id="高级"><a href="#高级" class="headerlink" title="高级"></a>高级</h3><ul>
<li>了解阿里云各种组件</li>
<li>了解云架构运维安全</li>
<li>了解分布式日志运维框架</li>
<li>了解分布式服务框架</li>
<li>熟悉 nginx </li>
<li>假想目标薪资13k+</li>
</ul>
<h2 id="面试问题"><a href="#面试问题" class="headerlink" title="面试问题"></a>面试问题</h2><h3 id="构建工具"><a href="#构建工具" class="headerlink" title="构建工具"></a>构建工具</h3><ol>
<li>Git 使用</li>
<li>IDEA 使用</li>
<li>MAVEN 使用</li>
</ol>
<h3 id="Spring-Mybatis-Druid-使用"><a href="#Spring-Mybatis-Druid-使用" class="headerlink" title="Spring/Mybatis/Druid 使用"></a>Spring/Mybatis/Druid 使用</h3><ol>
<li>ApplicationContext</li>
<li>Mybatis、Hibernate 区别</li>
<li>Druid 和 C3P0 区别</li>
</ol>
<h3 id="Java-current包"><a href="#Java-current包" class="headerlink" title="Java current包"></a>Java current包</h3><ol>
<li>队列工具有哪些？具体场景？</li>
<li>Threadlocal使用场景</li>
</ol>
<h3 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h3><ol>
<li>slowsql 怎么出现的，如何调试修复</li>
<li>为什么要使用PreparedStatement接口，SQl 注入如何产生的</li>
<li>事务、ACID、DML、DDL、索引优化</li>
</ol>
<h3 id="算法"><a href="#算法" class="headerlink" title="算法"></a>算法</h3><ol>
<li>冒泡排序、斐波拉契数列</li>
</ol>
<h3 id="中间件"><a href="#中间件" class="headerlink" title="中间件"></a>中间件</h3><ol>
<li>了解 dubbo</li>
<li>听说过哪些 队列中间件</li>
<li>听说过哪些 NoSQl</li>
<li>听说过哪些 搜索引擎</li>
</ol>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>manage</tag>
      </tags>
  </entry>
  <entry>
    <title>Distributed Queue Kafka</title>
    <url>/2016/01/07/0088-Distributed%20Queue%20Kafka/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><ul>
<li>特征吞吐量大，消息可能会重复<br><a href="http://kafka.apache.org/" target="_blank" rel="noopener">http://kafka.apache.org/</a></li>
<li>监控 JMX</li>
</ul>
<h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><ul>
<li>producer   消息的生成者，即发布消息</li>
<li>consumer   消息的消费者，即订阅消息</li>
<li>broker     节点 id</li>
<li>zookeeper  协调转发 </li>
</ul>
<p>producers通过网络将消息发送到Kafka集群，集群向消费者提供消息<br>kafka对消息进行归纳，即topic，也就是说producer发布topic,consumer订阅topic</p>
<h2 id="三种队列中间件"><a href="#三种队列中间件" class="headerlink" title="三种队列中间件"></a>三种队列中间件</h2><ul>
<li>kafka    scala</li>
<li>rabbitMQ erlang 使用 AMQP</li>
<li>activeMQ java   使用 STOMP</li>
</ul>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>首先启动一个 zk，然后再启动 kafka<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">bin/kafka-server-start.sh -daemon config/server.propties</span><br><span class="line">```   </span><br><span class="line"></span><br><span class="line">这里和 logstash 整合启动集群</span><br><span class="line"></span><br><span class="line">```language-bash</span><br><span class="line"># 创建 topic</span><br><span class="line">./bin/kafka-topics.sh --zookeeper 10.2.85.26:2181 --topic &quot;test_pretreat_res&quot; --describe</span><br><span class="line"># 写入数据</span><br><span class="line">./bin/kafka-console-producer.sh --broker-list 10.2.85.26:9092 --topic test_task_oneinall_1 &lt; /tmp/xhtest/data1.txt</span><br><span class="line"># 读取数据</span><br><span class="line">./bin/kafka-console-consumer.sh --topic test_task_oneinall_1 --bootstrap-server 10.2.85.26:9092 &gt; /home/gf_stream/c.txt</span><br></pre></td></tr></table></figure></p>
<p>Kafka producer的ack的3种机制：</p>
<p>通过初始化producer时的producerconfig可以通过配置request.required.acks不同的值来实现。<br>0：这意味着生产者producer不等待来自broker同步完成的确认就继续发送下一条（批）消息。<br>      此选项提供最低的延迟但最弱的耐久性保证，因为其没有任何确认机制。<br>1：这意味着producer在leader已成功收到的数据并得到确认后发送下一条消息。<br>     等待leader的确认后就返回，而不管partion的follower是否已经完成。<br>-1：这意味着producer在follower副本确认接收到数据后才算一次发送完成。<br>      此选项提供最好的耐久性，我们保证没有信息将丢失，只要至少一个同步副本保持存活。</p>
<p>producer的同步异步机制：<br>通过配置producer.type的值来确定是异步还是同步，默认为同步。async/sync 默认是sync。<br>如果设置为异步，那么提供了批量发送的功能：<br>当满足以下其中一个条件的时候就触发发送<br>batch.num.messages 异步发送 每次批量发送的条目 ；<br>queue.buffering.max.ms 异步发送的时候 发送时间间隔 单位是毫秒。<br>其次，异步发送消息的实现很简单，客户端消息发送过来以后，先放入到一个队列中然后就返回了。Producer再开启一个线程（ProducerSendThread）不断从队列中取出消息，然后调用同步发送消息的接口将消息发送给Broker。</p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>store</tag>
      </tags>
  </entry>
  <entry>
    <title>NameServer-Zookeepr相关</title>
    <url>/2016/01/07/0089-NameServer-Zookeepr%E7%9B%B8%E5%85%B3/</url>
    <content><![CDATA[<p>zookeeper<br><a href="http://zookeeper.apache.org" target="_blank" rel="noopener">http://zookeeper.apache.org</a><br>分布式文件系统，数据一致性,名空间管理</p>
<p>curator<br><a href="http://curator.apache.org/" target="_blank" rel="noopener">http://curator.apache.org/</a><br>客户端，断线重连，队列，文件存储， 选举算法常见的算法 case 都有一套常见的 api 使用</p>
<p>exhibitor<br><a href="https://github.com/Netflix/exhibitor" target="_blank" rel="noopener">https://github.com/Netflix/exhibitor</a><br>监控系统， 一般使用 superivor 守护进程就好了</p>
<p>etcd、Consul</p>
<p>disconf 的配置中心方案<br><a href="https://github.com/knightliao/disconf" target="_blank" rel="noopener">https://github.com/knightliao/disconf</a></p>
<p>Zoo 使用<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">telnet 0.0.0.0 2181</span><br><span class="line"></span><br><span class="line">conf</span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>store</tag>
      </tags>
  </entry>
  <entry>
    <title>Actor 模型-reactor、akka</title>
    <url>/2016/01/07/0090-Actor%20%E6%A8%A1%E5%9E%8B-reactor%E3%80%81akka/</url>
    <content><![CDATA[<p>区别看着里</p>
<p><a href="http://stackoverflow.com/questions/16595393/akka-or-reactor" target="_blank" rel="noopener">http://stackoverflow.com/questions/16595393/akka-or-reactor</a></p>
<p>Reacotor(Spring)<br><a href="https://github.com/reactor/reactor" target="_blank" rel="noopener">https://github.com/reactor/reactor</a><br><a href="http://projectreactor.mydoc.io/" target="_blank" rel="noopener">http://projectreactor.mydoc.io/</a></p>
<p>Akka(TypeSafe)<br><a href="http://akka.io/docs/" target="_blank" rel="noopener">http://akka.io/docs/</a><br><a href="http://ifeve.com/akka-doc-java-getting-started/" target="_blank" rel="noopener">http://ifeve.com/akka-doc-java-getting-started/</a></p>
<ul>
<li>akka-actor 核心包，有这个包就可以写简单的代码了</li>
<li>akka-remote 远程包，有这个包，才能够跨进程和网络调用</li>
<li>akka-testkit 测试集，有这个包，写test case方便</li>
<li>protobuf-java pb的版本太低会造成消息传递* 过程中序列化反序列化有问题</li>
</ul>
<p><a href="https://github.com/jik1992/training-akka.git" target="_blank" rel="noopener">https://github.com/jik1992/training-akka.git</a></p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>分布式调度-Mesos/Marathon</title>
    <url>/2016/01/07/0091-%E5%88%86%E5%B8%83%E5%BC%8F%E8%B0%83%E5%BA%A6-Mesos-Marathon/</url>
    <content><![CDATA[<p>Mesos<br><a href="http://mesos.mydoc.io/" target="_blank" rel="noopener">http://mesos.mydoc.io/</a></p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>未归档</tag>
      </tags>
  </entry>
  <entry>
    <title>Java-SPI接口</title>
    <url>/2016/01/08/0093-Java-SPI%E6%8E%A5%E5%8F%A3/</url>
    <content><![CDATA[<h1 id="SPI接口"><a href="#SPI接口" class="headerlink" title="SPI接口"></a>SPI接口</h1><p>一种官方的插件机制， 在Dubbo 里面看到的, 在 common 文件夹下基于@SPI 注解</p>
<p>配置文件<br>META-INF/services/zuoyun.me.SPI.Command<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">zuoyun.me.SPI.ShutdownCommand</span><br><span class="line">zuoyun.me.SPI.StartupCommand</span><br></pre></td></tr></table></figure></p>
<p>自动装载类调用<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ServiceLoader&lt;Command&gt; loader = ServiceLoader.load(Command.class);</span><br><span class="line"> for (Command command : loader) &#123;</span><br><span class="line">   command.execute();</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure></p>
<h1 id="关闭原则"><a href="#关闭原则" class="headerlink" title="关闭原则"></a>关闭原则</h1><p>设计一个 Wapper 装饰器，通过调用链 .doNext()方法。</p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>TaskManager celery</title>
    <url>/2016/01/09/0094-TaskManager%20celery/</url>
    <content><![CDATA[<p>分布式任务调度</p>
<p><a href="https://github.com/mher/flower" target="_blank" rel="noopener">https://github.com/mher/flower</a><br><a href="https://github.com/celery/celery" target="_blank" rel="noopener">https://github.com/celery/celery</a><br><a href="http://docs.jinkan.org/docs/celery/" target="_blank" rel="noopener">http://docs.jinkan.org/docs/celery/</a><br><a href="http://my.oschina.net/siddontang/blog/284107" target="_blank" rel="noopener">http://my.oschina.net/siddontang/blog/284107</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo pip install Celery</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#  tasks.py</span><br><span class="line">import time</span><br><span class="line">from celery import Celery</span><br><span class="line"></span><br><span class="line">celery = Celery(&apos;tasks&apos;, broker=&apos;redis://localhost:6379/0&apos;)</span><br><span class="line"></span><br><span class="line">@celery.task</span><br><span class="line">def sendmail(mail):</span><br><span class="line">    print(&apos;sending mail to %s...&apos; % mail[&apos;to&apos;])</span><br><span class="line">    time.sleep(2.0)</span><br><span class="line">    print(&apos;mail sent.&apos;)</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">celery -A tasks worker --loglevel=info</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">from tasks import sendmail</span><br><span class="line">sendmail.delay(dict(to=&apos;celery@python.org&apos;))</span><br></pre></td></tr></table></figure>
<p>定时任务调度</p>
<p><a href="https://github.com/dbader/schedule" target="_blank" rel="noopener">https://github.com/dbader/schedule</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import schedule</span><br><span class="line">import time</span><br><span class="line">import logging</span><br><span class="line"># 输出日志到文件</span><br><span class="line">logging.basicConfig(level=logging.INFO,</span><br><span class="line">                format=&apos;%(asctime)s %(filename)s[line:%(lineno)d] %(levelname)s %(message)s&apos;,</span><br><span class="line">                datefmt=&apos;%a, %d %b %Y %H:%M:%S&apos;,</span><br><span class="line">                filename=&apos;/data/logs/myapp.log&apos;,</span><br><span class="line">                filemode=&apos;w&apos;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def job():</span><br><span class="line">    logging.info(&apos;This is info message&apos;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">schedule.every(1).seconds.do(job)</span><br><span class="line"></span><br><span class="line">while True:</span><br><span class="line">    schedule.run_pending()</span><br><span class="line">    time.sleep(1)</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>Framework Vuejs</title>
    <url>/2016/01/26/0095-Framework%20Vuejs/</url>
    <content><![CDATA[<p>官网，挺好用的， 官网已经讲清楚了使用方法。</p>
<p><a href="http://cn.vuejs.org/api/" target="_blank" rel="noopener">http://cn.vuejs.org/api/</a></p>
<h2 id="双向绑定原理"><a href="#双向绑定原理" class="headerlink" title="双向绑定原理"></a>双向绑定原理</h2><p>基于Objects.defineProperty(object,value,descriptor)</p>
<blockquote>
<ul>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty" target="_blank" rel="noopener">https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty</a></li>
<li><a href="https://github.com/DMQ/mvvm" target="_blank" rel="noopener">https://github.com/DMQ/mvvm</a></li>
</ul>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  //设置 属性的值</span><br><span class="line">  value:123,</span><br><span class="line">  //是否可重写</span><br><span class="line">  writable:false,</span><br><span class="line">  //是否可被枚举 Object.keys(x),</span><br><span class="line">  enumerable:false,</span><br><span class="line">  //是否可再重新被defineProperty,</span><br><span class="line">  configurable:false,</span><br><span class="line">  //当前值被重新设置时调用</span><br><span class="line">  set:function(newValue)&#123;&#125;,</span><br><span class="line">  //当前值被获取时调用</span><br><span class="line">  get:function()&#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Observer／Compiler／Watcher</p>
<h2 id="过滤器"><a href="#过滤器" class="headerlink" title="过滤器"></a>过滤器</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Vue.filter(&apos;time&apos;, function (value) &#123;</span><br><span class="line">    return moment(value).endOf(&apos;day&apos;).fromNow();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<h2 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;div id=&quot;app&quot;&gt;</span><br><span class="line">  &#123;&#123; message &#125;&#125;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">new Vue(&#123;</span><br><span class="line">  el: &apos;# app&apos;,</span><br><span class="line">  data: &#123;</span><br><span class="line">    message: &apos;Hello Vue.js!&apos;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<h2 id="常用标签"><a href="#常用标签" class="headerlink" title="常用标签"></a>常用标签</h2><ul>
<li>v-on:click  v-on:change  v-on:ofucos</li>
<li>v-bind:value=””  v-bind:disabled=””</li>
<li>v-for=”(key,value) in options”</li>
<li>v-show v-if v-else </li>
<li>v-model</li>
<li>@keyup.13=”search”</li>
</ul>
<h2 id="常用api"><a href="#常用api" class="headerlink" title="常用api"></a>常用api</h2><ul>
<li><a href="https://vuejs-tips.github.io/cheatsheet/" target="_blank" rel="noopener">https://vuejs-tips.github.io/cheatsheet/</a></li>
<li><a href="https://vuejs-tips.github.io/vuex-cheatsheet/" target="_blank" rel="noopener">https://vuejs-tips.github.io/vuex-cheatsheet/</a><h2 id="常用框架"><a href="#常用框架" class="headerlink" title="常用框架"></a>常用框架</h2></li>
<li>iviewui.com</li>
<li>element.eleme.io/# /</li>
</ul>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>nodejs</tag>
      </tags>
  </entry>
  <entry>
    <title>Guide JavaScript</title>
    <url>/2016/01/26/0096-Guide%20JavaScript/</url>
    <content><![CDATA[<blockquote>
<p>动态的，弱类型的，原型链语言</p>
</blockquote>
<h1 id="API"><a href="#API" class="headerlink" title="API"></a>API</h1><ul>
<li>ECMAScript<ul>
<li>函数、对象、名空间</li>
<li>null/undefined/==/===</li>
<li>setTimeout/setInterval</li>
<li>hasOwnProperty/typeof</li>
</ul>
</li>
<li>DOM<ul>
<li>innerHtml/DOM</li>
<li>EventListener(onclick/onload/onfoucs)</li>
<li>getElementById/getElementsByTagName/getElementsByClassName      </li>
<li>createElement/appendChild/removeChild</li>
<li>style</li>
</ul>
</li>
<li>BOM<ul>
<li>Window.screen</li>
<li>Window.location(pushState)</li>
<li>Window.history</li>
<li>Window.navigotar</li>
<li>Window.cookies</li>
</ul>
</li>
<li>NetWork<ul>
<li>ajax、pjax</li>
<li>json、jsonp<br><img src="http://p0.qhimg.com/t01f0f792cd49f8c934.png" alt><br><a href="https://devhints.io/es6" target="_blank" rel="noopener">https://devhints.io/es6</a><h2 id="结构相关"><a href="#结构相关" class="headerlink" title="结构相关"></a>结构相关</h2>1.学会包装作用域<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">var module1=&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
<p>2.学会约定数据接口<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;data&quot;:&#123;</span><br><span class="line">     ....todo</span><br><span class="line">     &#125;,</span><br><span class="line">  &quot;success&quot;:&#123;</span><br><span class="line">     ....todo</span><br><span class="line">     &#125;,</span><br><span class="line">  &quot;except&quot;:&#123;</span><br><span class="line">     ....todo</span><br><span class="line">     &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>3.学会查找资料<br>MDN: <a href="https://developer.mozilla.org/zh-CN/docs/Web/" target="_blank" rel="noopener">https://developer.mozilla.org/zh-CN/docs/Web/</a><br>DevTools: <a href="http://devdocs.io/" target="_blank" rel="noopener">http://devdocs.io/</a></p>
<h2 id="Cheatsheet"><a href="#Cheatsheet" class="headerlink" title="Cheatsheet"></a>Cheatsheet</h2><p>小心使用数字的动态转换，超界请使用字符串存储<br><img src="http://img.sandseasoft.com/image/7/07/2ce3348a619cdd7d96ede99a82acc.jpg" alt></p>
<p>sleep 代码<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">for(var start = Date.now(); Date.now() - start &lt;= 3000; ) &#123; &#125;</span><br></pre></td></tr></table></figure></p>
<p>页面关闭钩子<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">window.onbeforeunload = function (event) &#123;</span><br><span class="line">    if (vue.saveWeightCache.length == 0) &#123;</span><br><span class="line">        return;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        return &quot;你有未保存的编辑? 是否保存再退出&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p>
<p>元素动作<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$(&quot;# search&gt;input[name=&apos;cid&apos;]&quot;).focus();</span><br><span class="line">$(&quot;# search&gt;input[name=&apos;cid&apos;]&quot;).blur();</span><br><span class="line"># (&quot;# id&quot;).show();</span><br><span class="line"># (&quot;# id&quot;).hide();</span><br><span class="line"># (&quot;# id&quot;).toggle();</span><br></pre></td></tr></table></figure></p>
<p>定时器<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 3秒后开始执行一次</span><br><span class="line">setTimeout(function()&#123;&#125;,3000);</span><br><span class="line"># 每3秒执行一次</span><br><span class="line">setInterVal(function()&#123;&#125;,3000);</span><br></pre></td></tr></table></figure></p>
<h2 id="Jquery-相关"><a href="#Jquery-相关" class="headerlink" title="Jquery 相关"></a>Jquery 相关</h2><p>元素查找语法<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$(&quot;# id&quot;).css()</span><br><span class="line">$(&quot;.class&quot;).css()</span><br><span class="line">$(&quot;input[name=&apos;name&apos;]&quot;).css()</span><br></pre></td></tr></table></figure></p>
<p>ajax 的使用<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$.ajax(&#123;</span><br><span class="line">    url: &apos;/path/to/file&apos;,</span><br><span class="line">    type: &apos;default GET (Other values: POST)&apos;,</span><br><span class="line">    dataType: &apos;default: Intelligent Guess (Other values: xml, json, script, or html)&apos;,</span><br><span class="line">    async: true,</span><br><span class="line">    beforeSend: function() &#123;</span><br><span class="line">        //todo</span><br><span class="line">    &#125;,</span><br><span class="line">    data: $(&quot;# search&quot;).serialize(),</span><br><span class="line">&#125;).done(function() &#123;</span><br><span class="line">    console.log(&quot;success&quot;);</span><br><span class="line">&#125;).fail(function() &#123;</span><br><span class="line">    console.log(&quot;error&quot;);</span><br><span class="line">&#125;).always(function() &#123;</span><br><span class="line">    console.log(&quot;complete&quot;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">$(&quot;&quot;).stringify();</span><br><span class="line">$.paramsJSON();</span><br></pre></td></tr></table></figure></p>
<h2 id="lodash-相关"><a href="#lodash-相关" class="headerlink" title="lodash 相关"></a>lodash 相关</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">    _.mapKeys([1,2,3,4],function(value,key)&#123;</span><br><span class="line">    //todo</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<h2 id="独立组件"><a href="#独立组件" class="headerlink" title="独立组件"></a>独立组件</h2><ul>
<li>loading  <a href="http://tobiasahlin.com/spinkit/" target="_blank" rel="noopener">http://tobiasahlin.com/spinkit/</a></li>
<li>keymaster <a href="https://github.com/madrobby/keymaster" target="_blank" rel="noopener">https://github.com/madrobby/keymaster</a></li>
<li>select2 <a href="https://github.com/select2/select2" target="_blank" rel="noopener">https://github.com/select2/select2</a></li>
<li>echart <a href="https://github.com/ecomfe/echarts" target="_blank" rel="noopener">https://github.com/ecomfe/echarts</a></li>
<li>toastr <a href="https://github.com/CodeSeven/toastr" target="_blank" rel="noopener">https://github.com/CodeSeven/toastr</a></li>
<li>LABjs <a href="https://github.com/getify/LABjs" target="_blank" rel="noopener">https://github.com/getify/LABjs</a></li>
<li>moment <a href="https://github.com/moment/moment" target="_blank" rel="noopener">https://github.com/moment/moment</a></li>
</ul>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>nodejs</tag>
      </tags>
  </entry>
  <entry>
    <title>Guide HTML/CSS</title>
    <url>/2016/01/26/0097-Guide%20HTML-CSS/</url>
    <content><![CDATA[<blockquote>
<p>两种语言都不属于冯诺依曼体系， 所以没有逻辑相对简单，暂时不扯 Scss这种带逻辑的增强 css 脚本</p>
</blockquote>
<h1 id="MDN"><a href="#MDN" class="headerlink" title="MDN"></a>MDN</h1><p><a href="https://developer.mozilla.org/zh-CN/docs/Web" target="_blank" rel="noopener">https://developer.mozilla.org/zh-CN/docs/Web</a><br><a href="https://caniuse.com/" target="_blank" rel="noopener">https://caniuse.com/</a></p>
<h1 id="HTML基础"><a href="#HTML基础" class="headerlink" title="HTML基础"></a>HTML基础</h1><h2 id="Elements"><a href="#Elements" class="headerlink" title="Elements"></a>Elements</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">文档描述： html head meta body </span><br><span class="line">排版：&lt;a&gt; &lt;p&gt; &lt;h1-6&gt; &lt;div&gt; &lt;ul&gt;&lt;li&gt; &lt;ol&gt;</span><br><span class="line">表单：form input button submit text select&gt;option  radio checkbox </span><br><span class="line">表格：&lt;table&gt; &lt;tbody&gt; &lt;thead&gt; &lt;tr&gt;&lt;td&gt;</span><br></pre></td></tr></table></figure>
<h2 id="template"><a href="#template" class="headerlink" title="template"></a>template</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;utf-8&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;&gt;</span><br><span class="line">    &lt;script src=&quot;bootstrap-multiselect.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">    &lt;link href=&quot;/assets/base/css/bootstrap-select.min.css&quot; rel=&quot;stylesheet&quot;&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    &lt;script src=&quot;bootstrap-multiselect.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">    &lt;link href=&quot;/assets/base/css/bootstrap-select.min.css&quot; rel=&quot;stylesheet&quot;&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure>
<h1 id="Html5相关"><a href="#Html5相关" class="headerlink" title="Html5相关"></a>Html5相关</h1><ul>
<li>Canvas/SVG</li>
<li>WebSockets</li>
<li>Location</li>
<li>Video/Audio</li>
<li>WebStrong</li>
<li>WEBGL</li>
</ul>
<h1 id="CSS-基础"><a href="#CSS-基础" class="headerlink" title="CSS 基础"></a>CSS 基础</h1><h2 id="布局"><a href="#布局" class="headerlink" title="布局"></a>布局</h2><p><img src="http://img.sandseasoft.com/image/d/27/f5aa50324e397583670d494304520.png" alt></p>
<h2 id="元素分类"><a href="#元素分类" class="headerlink" title="元素分类"></a>元素分类</h2><ul>
<li>块级元素</li>
<li>行内元素</li>
<li>行内级元素<h2 id="位置"><a href="#位置" class="headerlink" title="位置"></a>位置</h2></li>
<li>postion<ul>
<li>relative</li>
<li>absolute</li>
<li>fix</li>
</ul>
</li>
<li>float<ul>
<li>left/right</li>
</ul>
</li>
<li>z-index</li>
</ul>
<h2 id="定位语法"><a href="#定位语法" class="headerlink" title="定位语法"></a>定位语法</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># class 查找</span><br><span class="line">.&#123;</span><br><span class="line">&#125;</span><br><span class="line"># id 查找</span><br><span class="line"># &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"># elements 查找</span><br><span class="line">div&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"># 级联查找</span><br><span class="line">div &gt; .id&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="Cheatsheet"><a href="#Cheatsheet" class="headerlink" title="Cheatsheet"></a>Cheatsheet</h1><p>联系我代码<br><img src="http://img.sandseasoft.com/image/0/99/2bd4ac14d316300e5b2517ba0eb26.png" alt></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;h6 style=&quot;text-align:center;&quot;&gt;有问题请联系:</span><br><span class="line">    &lt;a target=&quot;_blank&quot; href=&quot;http://wpa.qq.com/msgrd?v=3&amp;uin=470516189&amp;site=qq&amp;menu=yes&quot;&gt;</span><br><span class="line">     &lt;img border=&quot;0&quot; src=&quot;http://wpa.qq.com/pa?p=2:470516189:51&quot; alt=&quot;点击这里联系我&quot; title=&quot;点击这里联系我&quot;/&gt;</span><br><span class="line">                        &lt;/a&gt;</span><br><span class="line">                        &lt;a target=&quot;_blank&quot;</span><br><span class="line">                           href=&quot;http://amos.im.alisoft.com/msg.aw?v=2&amp;uid=chinajik&amp;site=cntaobao&amp;s=1&amp;charset=utf-8&quot;&gt;</span><br><span class="line">                            &lt;img src=&quot;http://amos.im.alisoft.com/online.aw?v=2&amp;amp;uid=chinajik&amp;amp;site=cntaobao&amp;amp;s=0&quot;</span><br><span class="line">                                 title=&quot;联系&#123;&#123;info.nick&#125;&#125;&quot;/&gt;</span><br><span class="line">                        &lt;/a&gt;</span><br><span class="line">                    &lt;/h6&gt;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>nodejs</tag>
      </tags>
  </entry>
  <entry>
    <title>虚拟化技术</title>
    <url>/2016/01/27/0098-%E8%99%9A%E6%8B%9F%E5%8C%96%E6%8A%80%E6%9C%AF/</url>
    <content><![CDATA[<p>kvm<br>xen<br>docker</p>
<p>esxi<br>  <a href="http://www.vmware.com/cn/products/vsphere-hypervisor/" target="_blank" rel="noopener">http://www.vmware.com/cn/products/vsphere-hypervisor/</a><br>unRaid<br>  LimeTech</p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>未归档</tag>
      </tags>
  </entry>
  <entry>
    <title>网络监听-wireshark</title>
    <url>/2016/01/27/0099-%E7%BD%91%E7%BB%9C%E7%9B%91%E5%90%AC-wireshark/</url>
    <content><![CDATA[<p><a href="https://www.wireshark.org/" target="_blank" rel="noopener">https://www.wireshark.org/</a><br>mac 版本终于换 UI 了..可以愉快地玩耍了</p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>未归档</tag>
      </tags>
  </entry>
  <entry>
    <title>渗透-Kali</title>
    <url>/2016/01/27/0100-%E6%B8%97%E9%80%8F-Kali/</url>
    <content><![CDATA[<p>Kali<br>Parrot Security OS</p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>未归档</tag>
      </tags>
  </entry>
  <entry>
    <title>P2P Downland Aria2</title>
    <url>/2016/01/27/0101-P2P%20Downland%20Aria2/</url>
    <content><![CDATA[<h2 id="aria2"><a href="#aria2" class="headerlink" title="aria2"></a>aria2</h2><p>linux 支持多协议的下载器，由于可以暴露 json-rpc 接口，支持 http 协议操作。</p>
<h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p><a href="http://aria2c.com/usage.html" target="_blank" rel="noopener">http://aria2c.com/usage.html</a><br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">brew install aria2</span><br><span class="line">aria2c --enable-rpc --rpc-listen-all=true --rpc-allow-origin-all  http://0.0.0.0:6800/jsonrpc</span><br></pre></td></tr></table></figure></p>
<h2 id="WebUI"><a href="#WebUI" class="headerlink" title="WebUI"></a>WebUI</h2><p><a href="https://github.com/binux/yaaw" target="_blank" rel="noopener">https://github.com/binux/yaaw</a><br><a href="https://github.com/ziahamza/webui-aria2" target="_blank" rel="noopener">https://github.com/ziahamza/webui-aria2</a></p>
<h2 id="下载插件"><a href="#下载插件" class="headerlink" title="下载插件"></a>下载插件</h2><ul>
<li>百度离线下载<br><a href="https://github.com/binux/ThunderLixianExporter" target="_blank" rel="noopener">https://github.com/binux/ThunderLixianExporter</a></li>
<li>迅雷离线下载<br><a href="https://chrome.google.com/webstore/detail/thunderlixianassistant/eehlmkfpnagoieibahhcghphdbjcdmen" target="_blank" rel="noopener">https://chrome.google.com/webstore/detail/thunderlixianassistant/eehlmkfpnagoieibahhcghphdbjcdmen</a></li>
</ul>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>tools</tag>
      </tags>
  </entry>
  <entry>
    <title>Framwork Bootstrap</title>
    <url>/2016/01/29/0102-Framwork%20Bootstrap/</url>
    <content><![CDATA[<h2 id="Bootstarp"><a href="#Bootstarp" class="headerlink" title="Bootstarp"></a>Bootstarp</h2><p><a href="http://v3.bootcss.com/" target="_blank" rel="noopener">http://v3.bootcss.com/</a></p>
<h3 id="排版-class"><a href="#排版-class" class="headerlink" title="排版 class"></a>排版 class</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.container-fluid</span><br><span class="line">.rows</span><br><span class="line">.pull-right</span><br><span class="line"></span><br><span class="line">.form-inline .form-group .form-control</span><br><span class="line"></span><br><span class="line">table table-striped table-condensed</span><br><span class="line"></span><br><span class="line">btn btn-default btn-info btn-warning btn-default btn-block</span><br></pre></td></tr></table></figure>
<h3 id="popover"><a href="#popover" class="headerlink" title="popover"></a>popover</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">//tooltips 初始化</span><br><span class="line">$(&apos;[data-toggle=&quot;tooltip&quot;]&apos;).tooltip();</span><br><span class="line">$(&apos;[data-toggle=&quot;popover&quot;]&apos;).popover();</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">                    &lt;a type=&quot;button&quot; class=&quot;fa fa-sm  fa-question-circle&quot; data-toggle=&quot;popover&quot; data-html=true</span><br><span class="line">                       data-content=&quot;</span><br><span class="line">&lt;ol&gt;</span><br><span class="line">	&lt;li&gt;双击单元格可以输入框修改内容&lt;/li&gt;</span><br><span class="line">	&lt;li&gt;关联组可以为空，也可以多个，组和组之间以“，”号分隔&lt;/li&gt;</span><br><span class="line">	&lt;li&gt;关联组不可以是属性词当前所在属性下的组&lt;/li&gt;</span><br><span class="line">&lt;/ol&gt;</span><br><span class="line">                &quot;&gt;&lt;/a&gt;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>nodejs</tag>
      </tags>
  </entry>
  <entry>
    <title>虚拟化</title>
    <url>/2016/02/20/0104-%E8%99%9A%E6%8B%9F%E5%8C%96/</url>
    <content><![CDATA[<p>esxi<br>proxmox<br>unraid</p>
<p>kodi 发行版</p>
<ul>
<li>osmc</li>
<li>OpenELEC</li>
</ul>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>未归档</tag>
      </tags>
  </entry>
  <entry>
    <title>硬件</title>
    <url>/2016/02/20/0105-%E7%A1%AC%E4%BB%B6/</url>
    <content><![CDATA[<p>pi2<br><a href="https://www.raspberrypi.org/" target="_blank" rel="noopener">https://www.raspberrypi.org/</a><br>nanopi2<br><a href="http://wiki.friendlyarm.com/wiki/index.php/NanoPi_2/zh" target="_blank" rel="noopener">http://wiki.friendlyarm.com/wiki/index.php/NanoPi_2/zh</a><br>MinnowBoard_MAX<br><a href="http://wiki.minnowboard.org/MinnowBoard_MAX" target="_blank" rel="noopener">http://wiki.minnowboard.org/MinnowBoard_MAX</a></p>
<p>常见发行版<br>ubuntu mate<br>RASPBIAN<br>kali<br>openwrt<br>AdvancedTomato<br>ddwrt<br>android</p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>未归档</tag>
      </tags>
  </entry>
  <entry>
    <title>Virtualization  Guide EXSI6</title>
    <url>/2016/02/22/0106-Virtualization%20%20Guide%20EXSI6/</url>
    <content><![CDATA[<h2 id="官网"><a href="#官网" class="headerlink" title="官网"></a>官网</h2><p> <a href="https://www.vmware.com/cn/products/vsphere-hypervisor/" target="_blank" rel="noopener">https://www.vmware.com/cn/products/vsphere-hypervisor/</a></p>
<h2 id="文档"><a href="#文档" class="headerlink" title="文档"></a>文档</h2><p> <a href="http://pubs.vmware.com/vsphere-60/index.jsp#" target="_blank" rel="noopener">http://pubs.vmware.com/vsphere-60/index.jsp#</a> com.vmware.ICbase/Welcome/welcome.html</p>
<h2 id="硬件要求"><a href="#硬件要求" class="headerlink" title="硬件要求"></a>硬件要求</h2><ol>
<li>Intel 的网卡</li>
<li>支持 VT-D虚拟化的CPU</li>
<li>只支持 BS 模式，所以要有网络</li>
<li>对硬件要求蛮苛刻的，不要用非主流硬件</li>
<li>要玩一机多开至少2张显卡以上</li>
</ol>
<h2 id="推荐硬件"><a href="#推荐硬件" class="headerlink" title="推荐硬件"></a>推荐硬件</h2><ul>
<li>HP MC GEN8</li>
<li>DELL R720</li>
</ul>
<h2 id="序列号分配"><a href="#序列号分配" class="headerlink" title="序列号分配"></a>序列号分配</h2><blockquote>
<p>0U0QJ-FR1EP-KZQN9-J1C74-23P5R</p>
</blockquote>
<h2 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h2><p><img src="http://img.sandseasoft.com/image/4/da/89fc6d95c743398233a70b89e46d1.png" alt></p>
<ul>
<li>基本上和小时候玩的 VMware 使用方法是一样的， 注意这个软体可以和硬件直通，意味着不是虚拟而是独占一个硬件或者一颗核心。</li>
</ul>
<h2 id="心得"><a href="#心得" class="headerlink" title="心得"></a>心得</h2><ul>
<li>key 输入位置在 虚拟机-&gt;配置-&gt;已获许可功能-&gt;编辑</li>
<li>iso 上传位置在 虚拟机-&gt;配置-&gt;存储器-&gt;浏览数据存储</li>
<li>设备直通的位置在 虚拟机-&gt;配置-&gt;高级设置 </li>
<li>直通显卡不要选择当前使用的，系统启动会失败。</li>
<li>克隆机器  .vmx / .vmdk</li>
</ul>
<h2 id="其他尝试"><a href="#其他尝试" class="headerlink" title="其他尝试"></a>其他尝试</h2><p> 虽然没有装得起来， 不过还是留在这里mark 一记，以后有机会看看。</p>
<ul>
<li><a href="http://pve.proxmox.com/wiki/Main_Page" target="_blank" rel="noopener">ProxmoxVE</a> 基于 kvm 的平台化虚拟系统。</li>
<li><a href="http://lime-technology.com/" target="_blank" rel="noopener">unraid</a> 基于 coreos 的超小型 u 盘虚拟化系统。</li>
</ul>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>devops</tag>
      </tags>
  </entry>
  <entry>
    <title>VPS</title>
    <url>/2016/02/24/0107-VPS/</url>
    <content><![CDATA[<p>VPS（Virtual Private Server)</p>
<p>以下是我用过的收集在一起， 自行查阅。</p>
<p>域名提供商</p>
<ul>
<li>godaddy godaddy.com</li>
<li>namecheap <a href="https://www.namecheap.com/" target="_blank" rel="noopener">https://www.namecheap.com/</a></li>
<li>万网 <a href="http://wanwang.aliyun.com/" target="_blank" rel="noopener">http://wanwang.aliyun.com/</a></li>
<li>dnspod <a href="https://www.dnspod.cn/" target="_blank" rel="noopener">https://www.dnspod.cn/</a></li>
</ul>
<p>IDC 服务商</p>
<p>国外常见</p>
<ul>
<li>BandwagonHost <a href="http://bandwagonhost.com" target="_blank" rel="noopener">http://bandwagonhost.com</a></li>
<li>digitalocean  <a href="https://www.digitalocean.com/" target="_blank" rel="noopener">https://www.digitalocean.com/</a></li>
<li>vultr <a href="https://www.vultr.com" target="_blank" rel="noopener">https://www.vultr.com</a></li>
<li>aws <a href="http://aws.amazon.com" target="_blank" rel="noopener">http://aws.amazon.com</a></li>
</ul>
<p>国内常见</p>
<ul>
<li>阿里云 <a href="http://www.aliyun.com" target="_blank" rel="noopener">www.aliyun.com</a></li>
<li>青云 qingcloud.com</li>
<li>又拍云 <a href="http://www.upyun.com" target="_blank" rel="noopener">www.upyun.com</a></li>
</ul>
<p>国外面板</p>
<ul>
<li>KLOXO-MR <a href="https://github.com/mustafaramadhan/kloxo/" target="_blank" rel="noopener">https://github.com/mustafaramadhan/kloxo/</a></li>
<li>Vestacp <a href="http://vestacp.com/" target="_blank" rel="noopener">http://vestacp.com/</a></li>
<li>Webmin/Virtualmin/whmcs <ul>
<li><a href="http://www.webmin.cn/" target="_blank" rel="noopener">http://www.webmin.cn/</a></li>
<li><a href="http://virtualmin.cn/install.html" target="_blank" rel="noopener">http://virtualmin.cn/install.html</a></li>
<li>whmcs </li>
</ul>
</li>
</ul>
<p>国内面板</p>
<ul>
<li>AMH <a href="http://amh.sh" target="_blank" rel="noopener">http://amh.sh</a></li>
<li>WDCP <a href="http://www.wdlinux.cn/wdcp/" target="_blank" rel="noopener">http://www.wdlinux.cn/wdcp/</a></li>
<li>Easypanel <a href="http://www.kanglesoft.com/forum.php" target="_blank" rel="noopener">http://www.kanglesoft.com/forum.php</a></li>
<li>appnode <a href="https://www.appnode.com/" target="_blank" rel="noopener">https://www.appnode.com/</a></li>
</ul>
<p>常用的 blog 资料</p>
<ul>
<li>老左博客 <a href="http://www.laozuo.org/" target="_blank" rel="noopener">http://www.laozuo.org/</a></li>
<li>赵蓉部落 <a href="http://www.zrblog.net/" target="_blank" rel="noopener">http://www.zrblog.net/</a></li>
</ul>
<p>一键安装脚本</p>
<ul>
<li>lamp <a href="http://lnmp.org/install.html" target="_blank" rel="noopener">http://lnmp.org/install.html</a></li>
<li>wordpress <a href="https://cn.wordpress.org/" target="_blank" rel="noopener">https://cn.wordpress.org/</a></li>
<li>tryghost <a href="https://ghost.org/" target="_blank" rel="noopener">https://ghost.org/</a></li>
</ul>
<p>常用系统</p>
<ul>
<li>centos  <a href="https://www.centos.org/" target="_blank" rel="noopener">https://www.centos.org/</a></li>
<li>ubuntu  <a href="http://www.ubuntu.org.cn/" target="_blank" rel="noopener">http://www.ubuntu.org.cn/</a></li>
</ul>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>devops</tag>
      </tags>
  </entry>
  <entry>
    <title>RaspberryPi2</title>
    <url>/2016/02/24/0108-RaspberryPi2/</url>
    <content><![CDATA[<h2 id="常见core"><a href="#常见core" class="headerlink" title="常见core"></a>常见core</h2><ul>
<li>STM32</li>
<li>ARM7、9 </li>
<li>MTK</li>
</ul>
<h2 id="无线通信"><a href="#无线通信" class="headerlink" title="无线通信"></a>无线通信</h2><ul>
<li>CC2530 套件 zigbee</li>
<li>WIFI</li>
</ul>
<h2 id="硬件设备"><a href="#硬件设备" class="headerlink" title="硬件设备"></a>硬件设备</h2><ul>
<li>Pi2、EDUP EP-N8508GS</li>
<li>NanoPI2</li>
</ul>
<h2 id="常用参考网址"><a href="#常用参考网址" class="headerlink" title="常用参考网址"></a>常用参考网址</h2><ul>
<li><a href="https://www.raspberrypi.org/" target="_blank" rel="noopener">https://www.raspberrypi.org/</a></li>
<li><a href="http://wiki.friendlyarm.com/wiki/index.php/NanoPi_2/zh" target="_blank" rel="noopener">http://wiki.friendlyarm.com/wiki/index.php/NanoPi_2/zh</a></li>
</ul>
<h2 id="系统"><a href="#系统" class="headerlink" title="系统"></a>系统</h2><ul>
<li>noobs/raspberry</li>
<li>openelec</li>
<li>kali arm</li>
<li>android</li>
<li>openwrt arm</li>
</ul>
<h2 id="烧写软件"><a href="#烧写软件" class="headerlink" title="烧写软件"></a>烧写软件</h2><ul>
<li>Win32DiskImager</li>
</ul>
<h2 id="关于-openwrt"><a href="#关于-openwrt" class="headerlink" title="关于 openwrt"></a>关于 openwrt</h2><p> <a href="https://wiki.openwrt.org/toh/raspberry_pi_foundation/raspberry_pi" target="_blank" rel="noopener">https://wiki.openwrt.org/toh/raspberry_pi_foundation/raspberry_pi</a></p>
<p> 修改 /etc/config/network 下面的网管和 proto 为 DHCP</p>
<p> 安装 hostapd和wireless-tools</p>
<p> 安装对应无线网卡驱动 kmod-usb-net和kmod-usb-net-asix kmod-rtlxxxxs</p>
<p> 重启 reboot</p>
<p> 启动ssh  /etc/init.d/dropbear start</p>
<p> opkg update<br> opkg install<br> opkg install fdisk e2fsprogs<br> fdisk -l # 查看分区<br> mkfs.ext3 /dev/sda1</p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>tools</tag>
      </tags>
  </entry>
  <entry>
    <title>技能书</title>
    <url>/2016/02/29/0110-%E6%8A%80%E8%83%BD%E4%B9%A6/</url>
    <content><![CDATA[<p>基本的 JS 与 CSS至少需要有一个大概的认识<br>基础<br>常见的状态码  与 后端相应的错误排查<br>301与 302的区别<br>304如何产生与如何避免<br>…<br>JSONP 与 JSON<br>构造一个jsonp的请求的方式<br>原生的如何构造<br>jquery如何构造<br>…<br>构造一个jsonp响应<br>AJAX<br>如何构造一个AJAX请求<br>原生的如何构造<br>jquery如何构造<br>….<br>跨域的几种处理方式<br>场景<br>同主域不同子域<br>不同主域<br>处理方式<br>iframe<br>代理请求<br>script元素的src属性 ( jsonp )<br>cookie.setDomain<br>后端设置P3P头响应<br>….<br>COOKIE<br>cookie的作用<br>cookie 与 后端的 session 的区别<br>httponly的cookie有什么作用<br>描述一段URL包含了哪些信息 <a href="http://www.baidu.com/s?wd=Hi#" target="_blank" rel="noopener">http://www.baidu.com/s?wd=Hi#</a> heiheihei<br>进阶<br>各种header的含义<br>HTTP/HTTPS的抓包<br>浏览器调试工具<br>anyproxy<br>httpscoop<br>fiddler<br>wireshark<br>charles<br>HTTP的长轮询<br>XSS<br>websocket<br>快速模拟一次HTTP请求<br>熟悉一些MVC的前端框架<br>浏览器插件<br>node-webkit</p>
<p>好了终于从前端请求经过网络到达了我们的服务器,开启了漫长的后端之旅<br>请求会先到达我们的web服务器（nginx），再由nginx判断是静态请求还是需要转发到我们的应用服务器（tomcat）上进行逻辑处理<br>WEB服务器<br>Apache<br>Nginx<br>nginx的分支<br>teginx            [SLB服务器在用]<br>openresty      [爬虫模块]<br>为什么nginx会称作反向代理服务器<br>当nginx代理后端tomcat请求的时候 这个时候就是正向啦. 正反只是相对的不是绝对<br>server_name 的含义<br>nginx中的server_name其实就是匹配http请求头中的host<br> curl -H ‘host:<a href="http://www.baidu.com’" target="_blank" rel="noopener">www.baidu.com’</a>  ‘<a href="http://115.239.211.112/s?wd=Hi&#39;" target="_blank" rel="noopener">http://115.239.211.112/s?wd=Hi&#39;</a>   与 <a href="http://www.baidu.com/s?wd=Hi" target="_blank" rel="noopener">http://www.baidu.com/s?wd=Hi</a> 等价<br>location总结及rewrite规则写法<br>默认变量的参数作用及含义<br>nginx的upstream配置<br>常与默认的负载均衡策略<br>进阶<br>会一些简单的ngx方言处理<br>手动编译并且增加模块<br>利用nginx搭建一个翻墙工具<br>nginx + lua 进阶学习<br>nginx处理请求的11个阶段<br>应用服务器<br>tomcat<br>tomcat构成的三部分<br>JSP容器     把JSP翻译成serverlet<br>WEB容器    主要用来处理静态资源<br>Serverlet容器 (名字叫catalina  玩过LOL都知道)  处理server   这就是  之所以叫 tomcat/logs/catalina.out   二不是log.out<br>基本的网络配置<br>JVM参数的设置<br>项目路径配置的方式<br>配置server.xml<br>拷贝到webapp<br>找到JSP生成的java与class文件<br>jetty<br>缓存<br>对象访问的延迟<br>栈内局部变量(方法内)   &gt;  线程缓存(threadlocal)  &gt; 堆内缓存(全局变量/ehcache)   &gt; 堆外缓存  &gt; 进程外缓存(memcache/redis)<br>堆内缓存  (常见的缓存框架都是在堆内)<br>优点   配置简单<br>缺点  可能会带来GC频繁,降低可用性<br>堆外缓存<br>缺点   但是泄露之后比较难排查<br>优点   没有GC带来的延迟<br>进程外缓存<br>优点   程序重启无需重新加载, 支持分布式<br>缺点   运维能力<br>…..<br>缓存的选择没有万金油,一般是根据业务场景选择不同的方式,<br>优缺点需要自己挖掘,知道原理跟优化方向才是最终目的<br>线程<br>线程与进程的区别<br>守护线程与普通线程<br>线程调度<br>分时调度模型和抢占式调度模型<br>java采用抢占调度优先级高的优先,优先级相等的随机<br>java中调整线程的优先级需要注意什么<br>实现线程的几种方式<br>无返回值的线程<br>有返回值的线程<br>JDK提供的几种线程池的使用场景与实现的队<br>序列化/反序列化<br>序列化是将对象状态转换为可持久化或传输的格式的过程，相对的就是反序列化<br>我理解的序列化的最终目的是为了存储与传输<br>一般讨论这个问题都会围绕几个方面展开<br>性能问题     时间/空间损耗（比如压缩文件压缩比率越大时间越长）<br>通用（跨平台）        比如json / xml 比较常见并且可读性比较好<br>调试复杂度<br>序列化框架与类库选择<br>java原生的        （我个人来说没有特殊的需求一般用原生的，稳定可靠，因为系统的可优化程度还没有达到这个级别）<br>thrift<br>protobuf<br>hessian<br>…<br>WEB<br>基础<br>web.xml中的标签配置<br>Filter、Servlet、Listener<br>初始化顺序<br>功能与应用的场景<br>Servlet的生命周期<br>request、session、application的作用域(jsp还包含了一个page)<br>forward 与 redirect 的区别<br>MVC框架<br>struts1<br>流程比较简单，可以学习核心逻辑然后自己模拟写一个<br>struts2<br>出了一个灰常大的漏洞之后就被抛弃了<br>springmvc<br>目前公司正在用，我也只是处于会用的阶段，有问题可以一起交流<br>Dispatcherservlet处理请求的一些流程，涉及到的组件<br>jfinal<br>…<br>框架的产生是为了提升开发效率，提升效率的同时要思考一个问题，你是否了解他的底层原理，或者它是如何架构的<br>带着疑问去找答案，去调试，收获才是最大<br>框架始终只是一个工具<br>模板引擎<br>jsp<br>velocity<br>freeMarker<br>…<br>IO流 与 常见的文件操作<br>文件字符集问题首先要确定好<br>JDK中 InputStream 与 OutputStream 的几个实现<br>一般涉及到IO操作的地方<br>文件读取与传输<br>RPC框架中的序列化<br>收集资料描述  文件的顺序读写 与 随机读写的性能差异<br>buffer类的具体作用<br>在一个512M内存的JVM中 如何把一个1G的csv文件解析并存储到数据库中<br>在Serverlet中如何上传/下载文件<br>nginx 与 spring mvc都有最大上传限制的开关<br>下载的时候需要设置哪些头,浏览器又是如何知道服务端返回的是下载动作<br>生成验证码<br>常用工具类<br>FileUtils 与 IOUtils<br>excel<br>poi<br>xls<br>图片<br>java方面的类库好像不怎么火,主要是jvm在这方面效率比较低吧<br>graphicsmagick(这个跟java无关,但是我们的一些业务用到了他,所以特别提一下)</p>
<p>虽然是开发但是有些简单的命令还是要需要知道,尤其是在排查问题的时候能快速定位问题<br>命令<br>常用<br>ping<br>telnet<br>netstat<br>路由相关<br>dig<br>route<br>traceroute<br>流量相关<br>ifstat<br>iftop<br>如何理解TCP/IP协议中的   IP地址与port<br>DNS服务 与 本地hosts文件<br>问题<br>尝试描述当你在浏览器输入URL并敲下回车之后产生了哪些协议的请求? 比如 <a href="http://www.baidu.com/s?wd=Hi" target="_blank" rel="noopener">http://www.baidu.com/s?wd=Hi</a><br>如何在Linux环境下迅速查看某tomcat / dubbo 监听了哪些端口 ? 当前有哪些机器访问<br>多网卡环境下tomcat 或 dubbo 如何绑定内网<br>进阶<br>TCP的粘包与拆包出现的场景与常见的解决办法<br>尝试用抓包工具抓取一次ARP协议的请求与响应  [记得清理本地ARP缓存]</p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>未归档</tag>
      </tags>
  </entry>
  <entry>
    <title>Server Gitlab</title>
    <url>/2020/12/20/0115-Server%20Gitlab/</url>
    <content><![CDATA[<h2 id="Comcept"><a href="#Comcept" class="headerlink" title="Comcept"></a>Comcept</h2><ul>
<li>root</li>
<li>control version system<ul>
<li>Files</li>
<li>Comments</li>
<li>MergeRequests</li>
</ul>
</li>
<li>CI/CD<ul>
<li>Builds</li>
<li>Graph</li>
</ul>
</li>
<li>project manage<ul>
<li>Milestones</li>
<li>Issues</li>
</ul>
</li>
<li>document<ul>
<li>Wiki</li>
<li>Snippts</li>
<li>Labels</li>
</ul>
</li>
</ul>
<h1 id="Instalation"><a href="#Instalation" class="headerlink" title="Instalation"></a>Instalation</h1><h2 id="All-in-One-Step"><a href="#All-in-One-Step" class="headerlink" title="All in One Step"></a>All in One Step</h2><p><a href="https://about.gitlab.com/downloads/#" target="_blank" rel="noopener">https://about.gitlab.com/downloads/#</a> ubuntu1404<br><a href="https://mirror.tuna.tsinghua.edu.cn/help/gitlab-ce/" target="_blank" rel="noopener">https://mirror.tuna.tsinghua.edu.cn/help/gitlab-ce/</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 安装</span><br><span class="line">rpm -i gitlab-7.7.2omnibus.5.4.2.ci-1.el6.x8664.rpm </span><br><span class="line"># 重置配置</span><br><span class="line">gitlab-ctl reconfigure</span><br><span class="line"># 备份文件目录/var/opt/gitlab/backups</span><br><span class="line">gitlab-rake gitlab:backup:create </span><br><span class="line"># 修改备份文件目录</span><br><span class="line">vim /etc/gitlab/gitlab.rb</span><br><span class="line">   gitlabrails[&apos;backuppath&apos;] = &apos;/mnt/backups&apos; </span><br><span class="line"># 恢复备份</span><br><span class="line">gitlab-ctl stop</span><br><span class="line">gitlab-rake gitlab:backup:restore BACKUP=1393513186</span><br><span class="line">gitlab-ctl start</span><br><span class="line"># 升级</span><br><span class="line">gitlab-ctl upgrade</span><br><span class="line"># 升级2</span><br><span class="line">查看：https://about.gitlab.com/upgrade-to-package-repository/</span><br></pre></td></tr></table></figure>
<h2 id="Updated-Configuaration"><a href="#Updated-Configuaration" class="headerlink" title="Updated Configuaration"></a>Updated Configuaration</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">gitlab_rails[&apos;gitlab_email_enabled&apos;] = true</span><br><span class="line">gitlab_rails[&apos;gitlab_email_from&apos;] = &apos;xxxxx@58gxb.com&apos;</span><br><span class="line">gitlab_rails[&apos;gitlab_email_display_name&apos;] = &apos;Gitlab Server &apos;</span><br><span class="line"></span><br><span class="line">gitlab_rails[&apos;smtp_enable&apos;] = true</span><br><span class="line">gitlab_rails[&apos;smtp_address&apos;] = &quot;smtp.mxhichina.com&quot;</span><br><span class="line">gitlab_rails[&apos;smtp_port&apos;] = 25</span><br><span class="line">gitlab_rails[&apos;smtp_user_name&apos;] = &quot;xxxxx@58gxb.com&quot;</span><br><span class="line">gitlab_rails[&apos;smtp_password&apos;] = &quot;passwd&quot;</span><br><span class="line">gitlab_rails[&apos;smtp_domain&apos;] = &quot;smtp.mxhichina.com&quot;</span><br><span class="line">gitlab_rails[&apos;smtp_authentication&apos;] = &quot;plain&quot;</span><br><span class="line">gitlab_rails[&apos;smtp_enable_starttls_auto&apos;] = false</span><br></pre></td></tr></table></figure>
<h2 id="Gitlab-runner"><a href="#Gitlab-runner" class="headerlink" title="Gitlab-runner"></a>Gitlab-runner</h2><ul>
<li><p>Installation <a href="https://docs.gitlab.com/runner/" target="_blank" rel="noopener">https://docs.gitlab.com/runner/</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># https://gitlab-runner-downloads.s3.amazonaws.com/latest/index.html</span><br><span class="line">rpm -i xxx.rpm</span><br><span class="line">dpkg -i xxx.deb</span><br><span class="line"># </span><br><span class="line">gitlab-runner register</span><br><span class="line"># select shell mode</span><br></pre></td></tr></table></figure>
</li>
<li><p>.gitlab-ci.yml</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">stages</span><br><span class="line">	- complie</span><br><span class="line">	- build</span><br><span class="line">	- deploy</span><br><span class="line"></span><br><span class="line">job_name:</span><br><span class="line">  stage: test</span><br><span class="line">  script:</span><br><span class="line">    - echo hello</span><br><span class="line">  only:</span><br><span class="line">    - master</span><br><span class="line">  except:</span><br><span class="line">    - develop</span><br><span class="line">  tags:</span><br><span class="line">    - demo</span><br><span class="line">  allow_failure: true</span><br><span class="line">  when: manual</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h1 id="Quete"><a href="#Quete" class="headerlink" title="Quete"></a>Quete</h1><ul>
<li><a href="https://about.gitlab.com/gitlab-com/" target="_blank" rel="noopener">https://about.gitlab.com/gitlab-com/</a></li>
</ul>
]]></content>
      <categories>
        <category>ops</category>
      </categories>
      <tags>
        <tag>gitlab</tag>
        <tag>gitlab-runner</tag>
      </tags>
  </entry>
  <entry>
    <title>Minecraft Server</title>
    <url>/2016/03/03/0116-Minecraft%20Server/</url>
    <content><![CDATA[<h2 id="官网"><a href="#官网" class="headerlink" title="官网"></a>官网</h2><p><a href="https://minecraft.net" target="_blank" rel="noopener">https://minecraft.net</a></p>
<h2 id="服务端版本"><a href="#服务端版本" class="headerlink" title="服务端版本"></a>服务端版本</h2><ul>
<li>CraftBukkit</li>
<li>Spigot</li>
</ul>
<h2 id="客户端下载"><a href="#客户端下载" class="headerlink" title="客户端下载"></a>客户端下载</h2><p><a href="http://www.minecraftxz.com/" target="_blank" rel="noopener">http://www.minecraftxz.com/</a></p>
<h2 id="服务端下载"><a href="#服务端下载" class="headerlink" title="服务端下载"></a>服务端下载</h2><p><a href="http://www.mcbbs.net/" target="_blank" rel="noopener">http://www.mcbbs.net/</a><br><a href="http://getspigot.org/" target="_blank" rel="noopener">http://getspigot.org/</a></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><ol>
<li>安装 java8</li>
<li>启动<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># !bin/bash</span><br><span class="line">nohup java -jar -Xmx500M -Xms500M -XX:MaxPermSize=128M -Dfile.encoding=utf-8 -Duser.timezone=Asia/Hong_Kong spigot_server.jar &gt;/dev/null 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="服务器外网转发"><a href="#服务器外网转发" class="headerlink" title="服务器外网转发"></a>服务器外网转发</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ssh -N  -R 25555:0.0.0.0:25565 112.124.116.244 &apos;vmstat 20&apos;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>tools</tag>
      </tags>
  </entry>
  <entry>
    <title>Eisx6 安装黑群晖</title>
    <url>/2016/03/05/0117-Eisx6%20%E5%AE%89%E8%A3%85%E9%BB%91%E7%BE%A4%E6%99%96/</url>
    <content><![CDATA[<h2 id="官网"><a href="#官网" class="headerlink" title="官网"></a>官网</h2><p> <a href="https://www.synology.com/zh-cn/" target="_blank" rel="noopener">https://www.synology.com/zh-cn/</a></p>
<h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><ol>
<li>设定一个引导层</li>
<li>更新最新安装包</li>
</ol>
<h2 id="原料"><a href="#原料" class="headerlink" title="原料"></a>原料</h2><p> <a href="http://pan.baidu.com/s/1bol8rqZ" target="_blank" rel="noopener">http://pan.baidu.com/s/1bol8rqZ</a></p>
<h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><ol>
<li>NB_x64_5032_DSM_50-4528_Xpenology_nl.rar 解压到虚拟机</li>
<li>新建一个 ubuntux64引导的虚拟机，添加虚拟磁盘使用vmdk</li>
<li>安装群晖助手 client， 扫描网段，安装pat 系统</li>
<li>更新下版本</li>
</ol>
<p><img src="http://img.sandseasoft.com/image/7/fb/2c1641678330d156d231d9a515787.png" alt><br> ￼</p>
<h2 id="之后"><a href="#之后" class="headerlink" title="之后"></a>之后</h2><p> 看了下系统，第三方软件的支持远远超出了我的预料， 完爆小米 R2..有完整的权限体系，入门版本也不贵也就1000块钱，这个做小型企业 NAS 组 RAID0 并没有太大的问题。</p>
<h2 id="之后的之后"><a href="#之后的之后" class="headerlink" title="之后的之后"></a>之后的之后</h2><p> FreeNAS</p>
<p> <a href="http://www.freenas.com.cn/" target="_blank" rel="noopener">http://www.freenas.com.cn/</a></p>
<p> 这个是 FreeBSD 做的，其实也挺好用， samba，ftp ，store都有， 手机装个 moliplayer 就是家庭娱乐中心了, good job..</p>
<h2 id="之后的之后的之后"><a href="#之后的之后的之后" class="headerlink" title="之后的之后的之后"></a>之后的之后的之后</h2><p>终于我还是买了白群晖了, DS218+ / 镁光 DDR3L 1600 8G / 酷鱼3T *2 成本大概3k2.<br>研究了几天功能真的强的可怕, 群晖的系统有点久远了,所以功能比较乱的我给各位梳理一下.</p>
<p>目前我能用到的, 他的软体分几个方向:</p>
<ol>
<li>生产力工具: Moment/MailPlus/Chat/Drive/Note/Calendar (这是账户数据已经打通了的几套组件</li>
<li>影音娱乐:  Audio/Video/Download/File Station/流媒体服务器</li>
<li>生产备份: Active Backup For Server/Hyper Server/Cloud Sync</li>
<li>虚拟化: VMM/docker (非常好用, 已经做了 web 化反代一下无缝操控</li>
<li>反代网络: DDNS/quickconnect/第三方透明代理(frp) 基于这三个工具恶劣网络都可以打通</li>
<li>运维层面: Universal Search/LDAP/Web/DNSServer </li>
</ol>
<p>总之相对于阿里云这类公有云来说, 群晖这种私有云的 NAS 更乐意干”脏活”. 对于企业来说更加方便和专业的内部数据管理(基本上感觉一个人就可以单挑整个内部办公运维了)  对于我个人来说,最直接的受益就是把最新版本的 confluence 挂载在 NAS 当中暴露到公网使用了:) 是的,这个软件也很好用.</p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>about</tag>
      </tags>
  </entry>
  <entry>
    <title>OpenWrt For ARM</title>
    <url>/2016/03/06/0118-OpenWrt%20For%20ARM/</url>
    <content><![CDATA[<h2 id="安装在我的-Pi2上面了"><a href="#安装在我的-Pi2上面了" class="headerlink" title="安装在我的 Pi2上面了"></a>安装在我的 Pi2上面了</h2><p>关于 openwrt</p>
<p><a href="https://wiki.openwrt.org/toh/raspberrypifoundation/raspberry_pi" target="_blank" rel="noopener">https://wiki.openwrt.org/toh/raspberrypifoundation/raspberry_pi</a></p>
<h2 id="网络配置"><a href="#网络配置" class="headerlink" title="网络配置"></a>网络配置</h2><p>修改 /etc/config/network 下面的网关和 proto 为 DHCP</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">config interface &apos;wan&apos;</span><br><span class="line"></span><br><span class="line">        option ifname &apos;eth0&apos;</span><br><span class="line"></span><br><span class="line">#####    option proto &apos;dhcp&apos;</span><br><span class="line"></span><br><span class="line">#####    option proto &apos;static&apos;</span><br><span class="line"></span><br><span class="line">        option proto &apos;pppoe&apos;</span><br><span class="line"></span><br><span class="line">        option &apos;username&apos;  &apos;user&apos;</span><br><span class="line"></span><br><span class="line">        option &apos;password&apos; &apos;password&apos;</span><br></pre></td></tr></table></figure>
<h2 id="安装-USB-支持"><a href="#安装-USB-支持" class="headerlink" title="安装 USB 支持"></a>安装 USB 支持</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">opkg install kmod-usb-&amp;</span><br></pre></td></tr></table></figure>
<h2 id="安装无线网络支持"><a href="#安装无线网络支持" class="headerlink" title="安装无线网络支持"></a>安装无线网络支持</h2><ol>
<li><p>安装 hostapd和wireless-tools</p>
</li>
<li><p>安装对应无线网卡驱动 kmod-usb-net和kmod-usb-net-asix kmod-rtlxxxxs</p>
</li>
</ol>
<h2 id="扩展容量"><a href="#扩展容量" class="headerlink" title="扩展容量"></a>扩展容量</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 分区</span><br><span class="line">fdisk /dev/mmcblk0</span><br><span class="line"># 格式化</span><br><span class="line">mkfs.ext3 /dev/对应的分区</span><br><span class="line"># 挂载</span><br><span class="line">mount /dev/分区  /download</span><br></pre></td></tr></table></figure>
<h2 id="启动下载"><a href="#启动下载" class="headerlink" title="启动下载"></a>启动下载</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">aria2c --enable-rpc --rpc-listen-all=true --rpc-allow-origin-all  http://0.0.0.0:6800/jsonrpc</span><br></pre></td></tr></table></figure>
<h2 id="常用指令"><a href="#常用指令" class="headerlink" title="常用指令"></a>常用指令</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">## 重启 </span><br><span class="line">reboot</span><br><span class="line">## 关机</span><br><span class="line">poweroff</span><br><span class="line">## ssh-server</span><br><span class="line">/etc/init.d/dropbear start</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>tools</tag>
      </tags>
  </entry>
  <entry>
    <title>Mirror Clone</title>
    <url>/2016/03/07/0119-Mirror%20Clone/</url>
    <content><![CDATA[<p>很多时候，镜像源基本上都在 GFW 外，在网络差的情况下如何制作代理源</p>
<h2 id="方案"><a href="#方案" class="headerlink" title="方案"></a>方案</h2><ul>
<li>nginx 做反代</li>
<li>rsync</li>
<li>wget、整站下载</li>
</ul>
<p>如果是 wget 直接拖参考这篇文章 <a href="http://my.oschina.net/luckykiddie/blog/99190?fromerr=6aJJxGqL" target="_blank" rel="noopener">http://my.oschina.net/luckykiddie/blog/99190?fromerr=6aJJxGqL</a><br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wget -c -m -k -np -p -w 10 --random-wait --waitretry=5 http://www.oschina.net/</span><br></pre></td></tr></table></figure></p>
<p>rsync基本上要服务端给你开权限端对端同步，方法另一篇文章有写</p>
<p>nginx 做反代配置如下<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">log_format  jjhr.net  &apos;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &apos;</span><br><span class="line">             &apos;$status $body_bytes_sent &quot;$http_referer&quot; &apos;</span><br><span class="line">             &apos;&quot;$http_user_agent&quot; $http_x_forwarded_for&apos;;</span><br><span class="line">#  反向代理参数，具体自行搜索按需配置吧</span><br><span class="line">proxy_connect_timeout    5;</span><br><span class="line">proxy_read_timeout       60;</span><br><span class="line">proxy_send_timeout       5;</span><br><span class="line">proxy_buffer_size        16k;</span><br><span class="line">proxy_buffers            4 64k;</span><br><span class="line">proxy_busy_buffers_size 128k;</span><br><span class="line">proxy_temp_file_write_size 128k;</span><br><span class="line"></span><br><span class="line">#  配置临时目录、缓存路径（注意要先建立这2个目录，要在同一个硬盘分区，注意权限）</span><br><span class="line">proxy_temp_path   /var/cache/nginx_proxy_temp 1 2;</span><br><span class="line">proxy_cache_path  /var/cache/nginx_proxy_cache levels=1:2 keys_zone=jjhr:48m inactive=12d max_size=2g;</span><br><span class="line">#  keys_zone=jjhr:48m 表示这个 zone 名称为 jjhr，分配的内存大小为 48MB</span><br><span class="line">#  levels=1:2 表示缓存目录的第一级目录是 1 个字符，第二级目录是 2 个字符</span><br><span class="line">#  inactive=12d 表示这个zone中的缓存文件如果在 12 天内都没有被访问，那么文件会被cache manager 进程删除</span><br><span class="line">#  max_size=2G 表示这个zone的硬盘容量为 2G</span><br><span class="line">server&#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name jjhr.net *.jjhr.net;    </span><br><span class="line">    index index.html index.php;            </span><br><span class="line">    location / &#123;</span><br><span class="line"></span><br><span class="line">        # -------------------------------------</span><br><span class="line">        proxy_cache jjhr;</span><br><span class="line">        proxy_cache_key &quot;$scheme://$host$request_uri&quot;;</span><br><span class="line">        proxy_cache_valid 200 304 7d;</span><br><span class="line">        proxy_cache_valid 301 3d;</span><br><span class="line">        proxy_cache_valid any 10s;</span><br><span class="line">        expires 1d;</span><br><span class="line">        # --------------------------------------</span><br><span class="line"></span><br><span class="line">        proxy_pass         http://205.185.115.53;</span><br><span class="line">        proxy_set_header   Host $host;</span><br><span class="line">        proxy_set_header   X-Real-IP  $remote_addr;</span><br><span class="line">        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    #  wordpress 后台目录不缓存</span><br><span class="line">    location /wp-admin &#123;</span><br><span class="line">        if ( !-e $request_filename) &#123;</span><br><span class="line">            proxy_pass         http://205.185.115.53;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    access_log  /var/log/nginx/jjhr.net.log main;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>devops</tag>
        <tag>tools</tag>
      </tags>
  </entry>
  <entry>
    <title>nginx 核心配置</title>
    <url>/2016/03/16/0122-nginx%20%E6%A0%B8%E5%BF%83%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<p>在nginx.conf中加入 如下代码<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">include       /usr/local/nginx/conf/sub_conf/*.conf;</span><br></pre></td></tr></table></figure></p>
<p>意思是nginx会加载/usr/local/nginx/conf/sub_conf/中所有的配置文件<br>为每一个项目添加一个配置文件，比如现在我们要添加一个项目叫chengyun。<br>在sub_conf目录下创建chengyun.conf<br>将如下内容添加到chengyun.conf;<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 19002;</span><br><span class="line">    server_name cheng.raycloud.com;</span><br><span class="line"> </span><br><span class="line">    # nginx会自上而下进行扫描，如果一旦拦截到请求，就不会往下执行，比如一个jpg请求进来，会被下面的第一个请求拦截，拦截后就直接返回了，不再进行下面的拦截</span><br><span class="line"> </span><br><span class="line">    # 如果要进行复杂的拦截，比如当发现index.html时，要代理本地index2.html。还需要进一步了解 proxy_pass 和 rewrite相关内容，具体请先google。</span><br><span class="line">     </span><br><span class="line">    location ~* ^.+\.(woff|woff2|ttf|json|log|jpg|jpeg|gif|png|ico|html|cfm|cfc|afp|asp|lasso|pl|py|txt|fla|swf|zip)$ &#123;</span><br><span class="line"></span><br><span class="line">set $flag 0;</span><br><span class="line">            if ($http_user_agent ~* (MicroMessenger))&#123;</span><br><span class="line">              set $flag 1;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            if ($http_user_agent ~* (DingTalk))&#123;</span><br><span class="line">              set $flag 1;</span><br><span class="line">            &#125;</span><br><span class="line">            if ($flag = 0) &#123;</span><br><span class="line">         return 401;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        # 本地静态资源根路径</span><br><span class="line">        root /Users/flylampard/wangyi/project/java3/chengyun-parent/chengyun-web/src/main/webapp/static/;</span><br><span class="line">        expires 1d;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    location ~* ^.+\.(js|css|less)$ &#123;</span><br><span class="line">        # 本地静态资源根路径</span><br><span class="line">        root /Users/flylampard/wangyi/project/java3/chengyun-parent/chengyun-web/src/main/webapp/static/;</span><br><span class="line">        expires 2h;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    location ~ / &#123;</span><br><span class="line">        proxy_pass http://127.0.0.1:8888; # 后台所在地址与端口，如果是服务器上的，可以修改为远程ip端口</span><br><span class="line">        proxy_redirect              off;</span><br><span class="line">        proxy_set_header            Host $host;</span><br><span class="line">        proxy_set_header            X-Real-IP $remote_addr;</span><br><span class="line">        proxy_set_header            X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">        client_max_body_size 10m;</span><br><span class="line">        client_body_buffer_size 128k;</span><br><span class="line">        proxy_connect_timeout 90;</span><br><span class="line">        proxy_send_timeout 120;</span><br><span class="line">        proxy_read_timeout 120;</span><br><span class="line">        proxy_buffer_size 4k;</span><br><span class="line">        proxy_buffers 4 32k;</span><br><span class="line">        proxy_busy_buffers_size 64k;</span><br><span class="line">        proxy_temp_file_write_size 64k;</span><br><span class="line">        add_header Pragma &quot;no-cache&quot;;</span><br><span class="line">        add_header Cache-Control &quot;no-store, no-cache, must-revalidate, post-check=0, pre-check=0&quot;;</span><br><span class="line">    &#125;                    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>添加配置后，重新nginx即可</p>
<p>nginx.conf样例<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># user  nobody;</span><br><span class="line">worker_processes  1;</span><br><span class="line"> </span><br><span class="line"># error_log  logs/error.log;</span><br><span class="line"># error_log  logs/error.log  notice;</span><br><span class="line"># error_log  logs/error.log  info;</span><br><span class="line"># pid        logs/nginx.pid;</span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections  1024;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">http &#123;</span><br><span class="line">    include       mime.types;</span><br><span class="line">    default_type  application/octet-stream;</span><br><span class="line">    log_format  main  &apos;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &apos;</span><br><span class="line">                      &apos;$status $body_bytes_sent &quot;$http_referer&quot; &apos;</span><br><span class="line">                      &apos;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&apos;;</span><br><span class="line"> </span><br><span class="line">    log_format proxy &apos;$scheme://$host$request_uri&apos;;</span><br><span class="line"> </span><br><span class="line">    # access_log  logs/access.log  main;</span><br><span class="line">    sendfile        on;</span><br><span class="line">    # tcp_nopush     on;</span><br><span class="line">    # keepalive_timeout  0;</span><br><span class="line">    keepalive_timeout  65;</span><br><span class="line">    # gzip  on;</span><br><span class="line">    log_format  main2  &apos;$remote_addr^A-^A$remote_user^A[$time_local^A$host^A$request^A$request_body^A&apos;</span><br><span class="line">                      &apos;$status^A$body_bytes_sent^A$http_referer^A&apos;</span><br><span class="line">                      &apos;$http_user_agent^A$http_x_forwarded_for^A$http_cookie^A$upstream_response_time^A$request_time&apos;;</span><br><span class="line">    # access_log  logs/cookie_access.log  main;</span><br><span class="line">    include       /usr/local/nginx/conf/sub_conf/*.conf;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>在http请求上加上no-cache，组织客户端缓存动态请求</title>
    <url>/2016/03/16/0124-%E5%9C%A8http%E8%AF%B7%E6%B1%82%E4%B8%8A%E5%8A%A0%E4%B8%8Ano-cache%EF%BC%8C%E7%BB%84%E7%BB%87%E5%AE%A2%E6%88%B7%E7%AB%AF%E7%BC%93%E5%AD%98%E5%8A%A8%E6%80%81%E8%AF%B7%E6%B1%82/</url>
    <content><![CDATA[<p>两种做法，1、tomcat上加filter，2、在nginx上加上代理参数</p>
<p>1、tomcat上加filter<br>依赖jar</p>
<pre><code>&lt;groupId&gt;com.raycloud&lt;/groupId&gt;
</code></pre><p><artifactid>commons-utils</artifactid></p>
<p><version>1.0.0-SNAPSHOT</version><br>public void doFilter(ServletRequest arg0, ServletResponse arg1,<br>            FilterChain arg2) throws IOException, ServletException {<br>        HttpServletResponse response = (HttpServletResponse) arg1;<br>        response.setHeader(“Cache-Control”, “no-cache”);<br>        response.setHeader(“Pragma”, “no-cache”);<br>        arg2.doFilter(arg0, arg1);<br>    }<br>然后在web.xml中加上过滤器</p>
<pre><code>&lt;filter&gt;
&lt;filter-name&gt;nocacheFilter&lt;/filter-name&gt;
&lt;filter-class&gt;com.raycloud.utils.filter.NoCacheFilter&lt;/filter-class&gt;
</code></pre><p></p>
<p><filter-mapping><br>    <filter-name>nocacheFilter</filter-name><br>    <url-pattern>*.jsp</url-pattern><br></filter-mapping></p>
<p><filter-mapping><br>    <filter-name>nocacheFilter</filter-name><br>    <url-pattern>*.do</url-pattern><br></filter-mapping><br>url-pattern 可以根据自己的需要进行修改，注意一些静态请求不需要加上这个条件</p>
<p>2、在nginx上加上代理参数</p>
<p>在代理参数上加上<br>add_header Pragma “no-cache”;<br>add_header Cache-Control “no-cache”;</p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>未归档</tag>
      </tags>
  </entry>
  <entry>
    <title>Server Conflunce</title>
    <url>/2016/04/01/0127-Server%20Conflunce/</url>
    <content><![CDATA[<h2 id="官网"><a href="#官网" class="headerlink" title="官网"></a>官网</h2><p><a href="https://www.atlassian.com/software/confluence/download" target="_blank" rel="noopener">https://www.atlassian.com/software/confluence/download</a></p>
<h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p><a href="https://confluence.atlassian.com/doc/confluence-home-and-other-important-directories-590259707.html" target="_blank" rel="noopener">https://confluence.atlassian.com/doc/confluence-home-and-other-important-directories-590259707.html</a></p>
<p>atlassian-confluence-5.9.7/confluence/WEB-INF/classes/confluence-init.properties </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">confluence.home=/var/atlassian/application-data/confluence</span><br></pre></td></tr></table></figure>
<h2 id="汉化"><a href="#汉化" class="headerlink" title="汉化"></a>汉化</h2><p>安装引导页直接设置</p>
<h2 id="破解"><a href="#破解" class="headerlink" title="破解"></a>破解</h2><p><a href="https://pan.baidu.com/s/1bAvzt0" target="_blank" rel="noopener">https://pan.baidu.com/s/1bAvzt0</a></p>
<ol>
<li>下载 atlassian-extras-decoder-v2-3.3.0.jar 文件到本地用 confluence_keygen.jar 去 patch 然后重新上传</li>
<li>confluence_keygen.jar 填写 ServerID 直接 gen 去 paste 完成</li>
</ol>
<h2 id="初始化配置"><a href="#初始化配置" class="headerlink" title="初始化配置"></a>初始化配置</h2><ul>
<li>启动 start-conflunce.sh</li>
<li>mail 邮箱</li>
<li>内存配置 setenv.sh</li>
<li>上传字体显示PDF中文</li>
</ul>
<h2 id="字体安装"><a href="#字体安装" class="headerlink" title="字体安装"></a>字体安装</h2><ol>
<li>先安装想要的字体, 如微软雅黑, 宋体等, 从windows/font下拷到linux的/usr/share/fonts下, 新建个目录比如msttcore放进去, 请自行搜索linux下新字体的安装方法</li>
<li>在confluence的安装目录, 如/opt/atlassian/confluence/bin下找到setenv.sh, 找到CATALINA_OPTS, 加入一行<br>CATALINA_OPTS=”-Dconfluence.document.conversion.fontpath=/usr/share/fonts/msttcore/ ${CATALINA_OPTS}”</li>
<li>清空confluence的home下viewfile目录和shared-home/dcl-document目录里的所有缓存文档文件, 不清空的话, confluence预览旧文件时还是会显示方框,只有新文件才会正常.</li>
<li>重启confluence就OK了</li>
</ol>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>manage</tag>
      </tags>
  </entry>
  <entry>
    <title>Zabbix 使用</title>
    <url>/2016/04/02/0128-Zabbix%20%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h2 id="官网"><a href="#官网" class="headerlink" title="官网"></a>官网</h2><p><a href="http://www.zabbix.com/" target="_blank" rel="noopener">http://www.zabbix.com/</a></p>
<h2 id="文档"><a href="#文档" class="headerlink" title="文档"></a>文档</h2><p><a href="https://www.zabbix.com/documentation/3.0/" target="_blank" rel="noopener">https://www.zabbix.com/documentation/3.0/</a></p>
<h2 id="论坛"><a href="#论坛" class="headerlink" title="论坛"></a>论坛</h2><p><a href="http://www.zabbix.net.cn/" target="_blank" rel="noopener">http://www.zabbix.net.cn/</a></p>
<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p><a href="http://www.zabbix.com/download.php" target="_blank" rel="noopener">http://www.zabbix.com/download.php</a></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><ul>
<li>前置安装 yum -y install unixODBC</li>
<li>走 docker<br><a href="https://hub.docker.com/r/zabbix/zabbix-3.0/" target="_blank" rel="noopener">https://hub.docker.com/r/zabbix/zabbix-3.0/</a></li>
<li>默认账号密码  Admin zabbix</li>
<li>开启中文语言支持 </li>
<li>安装 agent =&gt; Configuration——Hosts——Create</li>
</ul>
<h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><ul>
<li>host</li>
<li>item</li>
<li>trigger</li>
<li>action</li>
<li>Medias</li>
<li>users</li>
</ul>
<h2 id="install-agent"><a href="#install-agent" class="headerlink" title="install agent"></a>install agent</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">apt-get install zabbix-agent</span><br></pre></td></tr></table></figure>
<h2 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h2><ul>
<li>zabbix_agent</li>
<li>zabbix_agentd</li>
<li>zabbix_get</li>
<li>zabbix_sender</li>
<li>zabbix_server</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># debug log </span><br><span class="line">/var/log/zabbix-agent/zabbix_agentd.log</span><br><span class="line"># 启动</span><br><span class="line">zabbix_agentd -c /etc/zabbix/zabbix_agentd.conf</span><br><span class="line"># 关闭</span><br><span class="line">ps -ef | grep zabbix | awk &apos;&#123; print $2 &#125;&apos; | sudo xargs kill -9</span><br><span class="line"># 测试</span><br><span class="line">zabbix_sender   -s &quot;xxxxx&quot;   -z 192.168.31.202 -k MongoDB.Status[version] -o 2.4.6</span><br></pre></td></tr></table></figure>
<h2 id="onealert-集成"><a href="#onealert-集成" class="headerlink" title="onealert 集成"></a>onealert 集成</h2><h2 id="其他代替"><a href="#其他代替" class="headerlink" title="其他代替"></a>其他代替</h2><ul>
<li>apm <a href="https://oneapm.com/" target="_blank" rel="noopener">https://oneapm.com/</a></li>
<li>aliyun 运维监控</li>
</ul>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>devops</tag>
      </tags>
  </entry>
  <entry>
    <title>SaltStack 使用</title>
    <url>/2016/04/03/0129-SaltStack%20%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<p>Salt</p>
<h2 id="官网"><a href="#官网" class="headerlink" title="官网"></a>官网</h2><p><a href="http://www.saltstack.com/" target="_blank" rel="noopener">http://www.saltstack.com/</a><br><a href="http://www.saltstack.cn/" target="_blank" rel="noopener">http://www.saltstack.cn/</a><br><a href="https://docs.saltstack.com/en/latest/" target="_blank" rel="noopener">https://docs.saltstack.com/en/latest/</a></p>
<h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><ul>
<li>salt-master</li>
<li>salt-minion</li>
<li>通信机制，通过4050端口双方通过 key 许可来连接，具体命令 salt-key<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># install</span><br><span class="line">apt-get install salt-master</span><br><span class="line">apt-get install salt-minion</span><br><span class="line"># launch</span><br><span class="line">service salt-master start</span><br><span class="line">service salt-minion start</span><br><span class="line"># debug</span><br><span class="line">salt-master -l debug</span><br><span class="line">salt-minion -l debug</span><br><span class="line"># config</span><br><span class="line">vim /etc/salt/master</span><br><span class="line">vim /etc/salt/minion</span><br><span class="line"># log</span><br><span class="line">/var/log/salt/master</span><br><span class="line">/var/log/salt/minion</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="服务端相关配置"><a href="#服务端相关配置" class="headerlink" title="服务端相关配置"></a>服务端相关配置</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 默认网关</span><br><span class="line">interface: 192.168.1.229</span><br><span class="line"># 自动接受</span><br><span class="line">auto_accept: True</span><br></pre></td></tr></table></figure>
<h2 id="客户端相关配置"><a href="#客户端相关配置" class="headerlink" title="客户端相关配置"></a>客户端相关配置</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">id :68</span><br><span class="line">master: 192.168.1.229</span><br></pre></td></tr></table></figure>
<h2 id="相关命令"><a href="#相关命令" class="headerlink" title="相关命令"></a>相关命令</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">salt &apos;*&apos; test.ping</span><br><span class="line">salt &apos;*&apos; cmd.run &quot;uptime&quot;</span><br><span class="line">salt &apos;*&apos; disk.usage</span><br></pre></td></tr></table></figure>
<h2 id="模板操作"><a href="#模板操作" class="headerlink" title="模板操作"></a>模板操作</h2><ul>
<li>默认模板路径 /srv/salt/vim.sls</li>
</ul>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>devops</tag>
      </tags>
  </entry>
  <entry>
    <title>sendmail by ubuntu</title>
    <url>/2016/04/03/0130-sendmail%20by%20ubuntu/</url>
    <content><![CDATA[<p>apt-get install mailutils<br>apt-get install postfix  </p>
<p>dpkg-reconfigure postfix  </p>
<p>// no subject<br>echo “test” | mail <a href="mailto:me@mail.com" target="_blank" rel="noopener">me@mail.com</a>  </p>
<p>// method one<br>echo “here is text content “ | mail -s “here is subject” <a href="mailto:me@gmail.com" target="_blank" rel="noopener">me@gmail.com</a>  </p>
<p>// method two<br>mail -s “here is subject” <a href="mailto:me@gmail.com" target="_blank" rel="noopener">me@gmail.com</a> &lt; here_is_text_content.text  </p>
<p>debug 日志</p>
<p>tail -f /var/log/mail*<br>telnet localhost 25  </p>
<p>No configuration 表示不要做任何配置；<br>Internet Site 表示直接使用本地SMTP服务器发送和接收邮件；<br>Internet with smarthost 表示使用本地SMTP服务器接收邮件，但发送邮件时不直接使用本地SMTP服务器，而是使用第三方smart host来转发邮件；<br>Satellite system 表示邮件的发送和接收都是由第三方smarthost来完成。<br>Local only 表示邮件只能在本机用户之间发送和接收。</p>
<p><a href="http://www.liaoxuefeng.com/article/00137387674890099a71c0400504765b89a5fac65728976000" target="_blank" rel="noopener">http://www.liaoxuefeng.com/article/00137387674890099a71c0400504765b89a5fac65728976000</a></p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>未归档</tag>
      </tags>
  </entry>
  <entry>
    <title>Guide Aliyun Cloud</title>
    <url>/2016/04/18/0131-Guide%20Aliyun%20Cloud/</url>
    <content><![CDATA[<p><img src="http://img.sandseasoft.com/image/0/10/68abdf71fa73a46a5241a95c8c959.png" alt></p>
<h1 id="配置价格"><a href="#配置价格" class="headerlink" title="配置价格"></a>配置价格</h1><ul>
<li>1x SLB 5M 158/m</li>
<li>2x ECS 2核4G 1M 300G 300x2/m</li>
<li>1x RDS 2核4G 1200 IOPS2000 400/m</li>
<li>1x Redis 2G 300/m</li>
<li>1x OSS/CDN 40G 30/m</li>
<li>1x CA证书 高级版、金融证书 300-800/m</li>
<li>1x PTS费用 2000VUM 0/m</li>
<li>ECS日备、RDS 日备/SlowSQL 50/m</li>
<li>总价 2w/y</li>
</ul>
<h1 id="安全组设置"><a href="#安全组设置" class="headerlink" title="安全组设置"></a>安全组设置</h1><ul>
<li>登陆<ul>
<li>two step certification</li>
<li>call phone</li>
<li>email</li>
</ul>
</li>
<li>ECS<ul>
<li>自动快照设置</li>
<li>安全组设置</li>
<li>性能监控设置</li>
</ul>
</li>
<li>RDS<ul>
<li>白名单设置</li>
<li>性能监控设置</li>
<li>SlowSQl</li>
<li>自动备份</li>
</ul>
</li>
<li>OSS/CDN<ul>
<li>refer</li>
</ul>
</li>
<li>Redis<ul>
<li>白名单</li>
<li>设定密码</li>
</ul>
</li>
<li>VPC/SLB<ul>
<li>白名单，端口</li>
<li>vlan</li>
</ul>
</li>
<li>云盾<ul>
<li>邮箱、电话</li>
</ul>
</li>
<li>RAM 设置<ul>
<li>子账号新建</li>
</ul>
</li>
<li>DNS<ul>
<li>whois 保护</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>linux-systemd 命令族</title>
    <url>/2016/04/26/0132-linux-systemd%20%E5%91%BD%E4%BB%A4%E6%97%8F/</url>
    <content><![CDATA[<p>新兴的 linux 的强大的进程管理工具，类似 win 系里面的任务管理器</p>
<h1 id="功能方面"><a href="#功能方面" class="headerlink" title="功能方面"></a>功能方面</h1><ul>
<li>cgroups</li>
<li>logs</li>
<li>uptime </li>
<li>resources</li>
<li>security</li>
</ul>
<h1 id="基础命令"><a href="#基础命令" class="headerlink" title="基础命令"></a>基础命令</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 任务</span><br><span class="line">pstree</span><br><span class="line"></span><br><span class="line"># 启动分析</span><br><span class="line">systemd-analyze time</span><br><span class="line">systemd-analyze blame</span><br><span class="line"></span><br><span class="line"># 模块管理</span><br><span class="line">systemctl list-units</span><br><span class="line">systemctl --failed</span><br><span class="line"></span><br><span class="line"># 运行时任务</span><br><span class="line">systemd-cgls</span><br><span class="line">systemd-cgtop </span><br><span class="line"></span><br><span class="line"># 引导任务</span><br><span class="line">systemctl is-enabled dnsmasq.service</span><br><span class="line">systemctl enable dnsmasq.service</span><br><span class="line">systemctl disable dnsmasq.service</span><br><span class="line">systemctl daemon-reload</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 电源管理</span><br><span class="line">systemctl poweroff</span><br><span class="line">systemctl reboot</span><br><span class="line">systemctl suspend</span><br><span class="line">systemctl hibernate</span><br><span class="line"></span><br><span class="line"># 系统信息</span><br><span class="line">hostnamectl</span><br></pre></td></tr></table></figure>
<h1 id="构建一个服务"><a href="#构建一个服务" class="headerlink" title="构建一个服务"></a>构建一个服务</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd /etc/systemd/system</span><br><span class="line">cat aliyun.service </span><br><span class="line"></span><br><span class="line">[Unit]</span><br><span class="line">Description=auto run aliyunservice or agent</span><br><span class="line">[Service]</span><br><span class="line">Type=simple</span><br><span class="line">ExecStart=/usr/sbin/aliyun-service</span><br><span class="line">Restart=always </span><br><span class="line">RestartSec=1</span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=Nginx</span><br><span class="line">After=syslog.target network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=forking</span><br><span class="line">ExecStart=/usr/local/nginx/sbin/nginx</span><br><span class="line">ExecReload=/usr/local/nginx/sbin/nginx -s reload</span><br><span class="line">ExecStop=/usr/local/nginx/sbin/nginx -s quit</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure>
<p><a href="http://www.jinbuguo.com/systemd/systemd.service.html" target="_blank" rel="noopener">http://www.jinbuguo.com/systemd/systemd.service.html</a><br><a href="http://www.ruanyifeng.com/blog/2016/03/systemd-tutorial-commands.html" target="_blank" rel="noopener">http://www.ruanyifeng.com/blog/2016/03/systemd-tutorial-commands.html</a></p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>devops</tag>
      </tags>
  </entry>
  <entry>
    <title>Plugin http-proxy-middleware 服务端跨域</title>
    <url>/2016/04/29/0133-Plugin%20http-proxy-middleware%20%E6%9C%8D%E5%8A%A1%E7%AB%AF%E8%B7%A8%E5%9F%9F/</url>
    <content><![CDATA[<h2 id="项目再此"><a href="#项目再此" class="headerlink" title="项目再此"></a>项目再此</h2><p><a href="https://github.com/chimurai/http-proxy-middleware" target="_blank" rel="noopener">https://github.com/chimurai/http-proxy-middleware</a><br>由于只有 GET 对跨域有很好的支持，在做项目拆分的时候有时候接口难免会有跨域问题。<br>这个nodejs 的服务端插件通过接口映射很少的代码可以做端口转发，挺实用的，目前已经上生产线。</p>
<p>app.js<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">/**</span><br><span class="line"> * Created by nailuoGG on 16/4/28.</span><br><span class="line"> */</span><br><span class="line">var express = require(&apos;express&apos;);</span><br><span class="line">var proxy = require(&apos;http-proxy-middleware&apos;);</span><br><span class="line"></span><br><span class="line">// configure proxy middleware context</span><br><span class="line">var context = &apos;/gxb-api&apos;;                     // requests with this path will be proxied</span><br><span class="line"></span><br><span class="line">// configure proxy middleware options</span><br><span class="line">var options = &#123;</span><br><span class="line">    target: &apos;http://demo.58gxb.com&apos;, // target host</span><br><span class="line">    changeOrigin: true,               // needed for virtual hosted sites</span><br><span class="line">    ws: true                         // proxy websockets</span><br><span class="line">&#125;;</span><br><span class="line">var apiProxy = proxy(context, options);</span><br><span class="line"></span><br><span class="line">// use the configured `apiProxy` in web server</span><br><span class="line">var app = express();</span><br><span class="line">app.use(&apos;/&apos;, express.static(&apos;./html&apos;));</span><br><span class="line">app.use(apiProxy);</span><br><span class="line">app.listen(3333, function () &#123;</span><br><span class="line">    console.log(&quot;listen on 3333&quot;)</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">// production error handler</span><br><span class="line">// no stacktraces leaked to user</span><br><span class="line">app.use(function (err, req, res, next) &#123;</span><br><span class="line">    res.status(err.status || 500);</span><br><span class="line">    res.render(&apos;error&apos;, &#123;</span><br><span class="line">        message: err.message,</span><br><span class="line">        error: &#123;&#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">module.exports = app;</span><br></pre></td></tr></table></figure></p>
<p>启动以后所有 gxb-api/接口都会走服务端隐射</p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>nodejs</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring-Mybatis3</title>
    <url>/2016/05/17/0134-Spring-Mybatis3/</url>
    <content><![CDATA[<h2 id="Mybatis-构建器"><a href="#Mybatis-构建器" class="headerlink" title="Mybatis 构建器"></a>Mybatis 构建器</h2><p><a href="http://generator.sturgeon.mopaas.com/index.html" target="_blank" rel="noopener">http://generator.sturgeon.mopaas.com/index.html</a></p>
<h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p>配置 generatorConfig.xml<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE generatorConfiguration PUBLIC &quot;-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN&quot;</span><br><span class="line">        &quot;http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd&quot;&gt;</span><br><span class="line">&lt;generatorConfiguration&gt;</span><br><span class="line"></span><br><span class="line">    &lt;classPathEntry</span><br><span class="line">            location=&quot;/Users/zuoyun1/.m2/repository/mysql/mysql-connector-java/5.1.37/mysql-connector-java-5.1.37.jar&quot;/&gt;</span><br><span class="line"></span><br><span class="line">    &lt;context id=&quot;MysqlTables&quot; targetRuntime=&quot;MyBatis3&quot;&gt;</span><br><span class="line"></span><br><span class="line">        &lt;commentGenerator&gt;</span><br><span class="line">            &lt;property name=&quot;suppressAllComments&quot; value=&quot;true&quot;/&gt;</span><br><span class="line">        &lt;/commentGenerator&gt;</span><br><span class="line">        &lt;jdbcConnection driverClass=&quot;com.mysql.jdbc.Driver&quot;</span><br><span class="line">                        connectionURL=&quot;jdbc:mysql://111.mysql.rds.aliyuncs.com:3306/gxb_dev&quot;</span><br><span class="line">                        userId=&quot;111&quot; password=&quot;111&quot;&gt;</span><br><span class="line">        &lt;/jdbcConnection&gt;</span><br><span class="line">        &lt;javaTypeResolver&gt;</span><br><span class="line">            &lt;property name=&quot;forceBigDecimals&quot; value=&quot;false&quot;/&gt;</span><br><span class="line">        &lt;/javaTypeResolver&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &lt;!--领域模型构建--&gt;</span><br><span class="line">        &lt;javaModelGenerator targetPackage=&quot;com.gxb.domain&quot; targetProject=&quot;./src/main/java&quot;&gt;</span><br><span class="line">            &lt;property name=&quot;enableSubPackages&quot; value=&quot;true&quot;/&gt;</span><br><span class="line">            &lt;property name=&quot;trimStrings&quot; value=&quot;true&quot;/&gt;</span><br><span class="line">        &lt;/javaModelGenerator&gt;</span><br><span class="line">        &lt;!-- mapping package and location --&gt;</span><br><span class="line">        &lt;sqlMapGenerator targetPackage=&quot;mapper&quot; targetProject=&quot;./src/main/resources/&quot;&gt;</span><br><span class="line">            &lt;property name=&quot;enableSubPackages&quot; value=&quot;true&quot;/&gt;</span><br><span class="line">        &lt;/sqlMapGenerator&gt;</span><br><span class="line">        &lt;!-- dao package and location --&gt;</span><br><span class="line">        &lt;javaClientGenerator type=&quot;MIXEDMAPPER&quot; targetPackage=&quot;com.gxb.dao&quot; targetProject=&quot;./src/main/java&quot;&gt;</span><br><span class="line">            &lt;property name=&quot;enableSubPackages&quot; value=&quot;true&quot;/&gt;</span><br><span class="line">        &lt;/javaClientGenerator&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &lt;table tableName=&quot;app_user&quot; domainObjectName=&quot;AppUser&quot; enableCountByExample=&quot;false&quot;</span><br><span class="line">               enableUpdateByExample=&quot;false&quot;</span><br><span class="line">               enableDeleteByExample=&quot;false&quot; enableSelectByExample=&quot;false&quot; selectByExampleQueryId=&quot;false&quot;/&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &lt;/context&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;/generatorConfiguration&gt;</span><br></pre></td></tr></table></figure></p>
<p>pom.xml<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!--mybatis 插件--&gt;</span><br><span class="line">&lt;plugin&gt;</span><br><span class="line">    &lt;groupId&gt;org.mybatis.generator&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;mybatis-generator-maven-plugin&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;1.3.2&lt;/version&gt;</span><br><span class="line">    &lt;configuration&gt;</span><br><span class="line">        &lt;verbose&gt;true&lt;/verbose&gt;</span><br><span class="line">        &lt;overwrite&gt;true&lt;/overwrite&gt;</span><br><span class="line">    &lt;/configuration&gt;</span><br><span class="line">&lt;/plugin&gt;</span><br></pre></td></tr></table></figure></p>
<p>Mybatis3<br><a href="https://github.com/mybatis/mybatis-3" target="_blank" rel="noopener">https://github.com/mybatis/mybatis-3</a><br><a href="http://www.mybatis.org/mybatis-3/zh/index.html" target="_blank" rel="noopener">http://www.mybatis.org/mybatis-3/zh/index.html</a></p>
<p>插件相关<br><a href="http://www.mybatis.tk/" target="_blank" rel="noopener">http://www.mybatis.tk/</a><br><a href="http://git.oschina.net/juapk/mybatis-plus" target="_blank" rel="noopener">http://git.oschina.net/juapk/mybatis-plus</a></p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>Tableau 使用</title>
    <url>/2016/05/19/0135-Tableau%20%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<p>BI工具<br><a href="http://www.tableau.com/zh-cn" target="_blank" rel="noopener">http://www.tableau.com/zh-cn</a></p>
<p>概要<br>工作表<br>仪表盘<br>故事</p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>未归档</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring-RMI</title>
    <url>/2016/05/24/0136-Spring-RMI/</url>
    <content><![CDATA[<h1 id="RMI"><a href="#RMI" class="headerlink" title="RMI"></a>RMI</h1><p>remote method invocation</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">/** </span><br><span class="line"> * 自定一个SCOKECT连接，可配置超时时间 </span><br><span class="line"> * @author Henry </span><br><span class="line"> */  </span><br><span class="line">public class RMICustomClientSocketFactory implements RMIClientSocketFactory &#123;  </span><br><span class="line">      </span><br><span class="line">      </span><br><span class="line">    private int timeout;  </span><br><span class="line">      </span><br><span class="line">    /** </span><br><span class="line">     * 设置超时时间 </span><br><span class="line">     * @param timeout </span><br><span class="line">     */  </span><br><span class="line">    public void setTimeout(int timeout) &#123;  </span><br><span class="line">        this.timeout = timeout;  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    public Socket createSocket(String host, int port) throws IOException &#123;  </span><br><span class="line">        Socket socket = new Socket(host, port);  </span><br><span class="line">        socket.setSoTimeout(timeout);  </span><br><span class="line">        return socket;  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;bean id=&quot;rmiClientSocketFactory&quot; class=&quot;com.rmi.RMICustomClientSocketFactory&quot;&gt;  </span><br><span class="line">        &lt;property name=&quot;timeout&quot; value=&quot;5000&quot;&gt;&lt;/property&gt;  </span><br><span class="line">    &lt;/bean&gt;  </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &lt;!--调用--&gt;</span><br><span class="line">    &lt;bean id=&quot;gxbActionServiceRmi&quot; class=&quot;org.springframework.remoting.rmi.RmiProxyFactoryBean&quot;&gt;</span><br><span class="line">        &lt;property name=&quot;serviceUrl&quot; value=&quot;rmi://127.0.0.1:9999/addPoint&quot;/&gt;</span><br><span class="line">        &lt;property name=&quot;serviceInterface&quot; value=&quot;com.gxb.http.task.service.GxbActionService&quot;/&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- setting refresh connect --&gt;  </span><br><span class="line">        &lt;property name=&quot;refreshStubOnConnectFailure&quot; value=&quot;true&quot;&gt;&lt;/property&gt;  </span><br><span class="line">        &lt;property name=&quot;lookupStubOnStartup&quot; value=&quot;false&quot;&gt;&lt;/property&gt;  </span><br><span class="line">        &lt;property name=&quot;registryClientSocketFactory&quot; ref=&quot;rmiClientSocketFactory&quot;&gt;&lt;/property&gt;  </span><br><span class="line"></span><br><span class="line">    &lt;/bean&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  &lt;!--声明--&gt;</span><br><span class="line">    &lt;bean id=&quot;rmiClientSocketFactory&quot; class=&quot;com.gxb.tool.RMICustomClientSocketFactory&quot;&gt;</span><br><span class="line">        &lt;property name=&quot;timeout&quot; value=&quot;5000&quot;&gt;&lt;/property&gt;</span><br><span class="line">    &lt;/bean&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &lt;bean id=&quot;registryTask&quot; class=&quot;org.springframework.remoting.rmi.RmiRegistryFactoryBean&quot;&gt;</span><br><span class="line">        &lt;property name=&quot;port&quot; value=&quot;10001&quot;/&gt;</span><br><span class="line">    &lt;/bean&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!--声明--&gt;</span><br><span class="line">    &lt;bean id=&quot;task&quot; class=&quot;org.springframework.remoting.rmi.RmiServiceExporter&quot;&gt;</span><br><span class="line">        &lt;property name=&quot;serviceName&quot; value=&quot;task&quot;/&gt;</span><br><span class="line">        &lt;property name=&quot;service&quot; ref=&quot;taskListServiceImpl&quot;/&gt;</span><br><span class="line">        &lt;property name=&quot;serviceInterface&quot; value=&quot;com.gxb.service.TaskUserServiceIF&quot;/&gt;</span><br><span class="line">        &lt;property name=&quot;registryPort&quot; value=&quot;10001&quot;/&gt;</span><br><span class="line">        &lt;property name=&quot;registry&quot; ref=&quot;registryTask&quot;/&gt;</span><br><span class="line">        &lt;!--&lt;property name=&quot;registryHost&quot;  value=&quot;192.168.39.11&quot; /&gt;--&gt;</span><br><span class="line">        &lt;property name=&quot;registryClientSocketFactory&quot; ref=&quot;rmiClientSocketFactory&quot;/&gt;</span><br><span class="line">    &lt;/bean&gt;</span><br></pre></td></tr></table></figure>
<ul>
<li>lookupStubOnStartup : 这个属性是表示，不在容器启动的时候创建与Server端的连接;</li>
<li>refreshStubOnConnectFailure : 这个属性是表示是否连接出错时自动重连；</li>
<li>registryClientSocketFactory : 这个是客户端与服务端创建SOCKECT的一个工厂。</li>
</ul>
<p>PS: 注意序列化的问题, serializable接口和serialVersionUID字段</p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringBoot-Swagger2-Markdown</title>
    <url>/2016/05/31/0137-Spring-Swagger2/</url>
    <content><![CDATA[<p>基于 Java 注解的 RestFul API文档生成工具，基于 springboot 的 doc 文档生成</p>
<h1 id="官网"><a href="#官网" class="headerlink" title="官网"></a>官网</h1><ul>
<li><a href="http://swagger.io/" target="_blank" rel="noopener">http://swagger.io/</a></li>
<li><a href="https://github.com/springfox/springfox" target="_blank" rel="noopener">https://github.com/springfox/springfox</a></li>
<li><a href="https://asciidoctor.org/docs/asciidoctor-maven-plugin/" target="_blank" rel="noopener">https://asciidoctor.org/docs/asciidoctor-maven-plugin/</a></li>
</ul>
<h1 id="依赖"><a href="#依赖" class="headerlink" title="依赖"></a>依赖</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">     &lt;!--doc文档--&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;io.springfox&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;springfox-swagger2&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;2.9.2&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;io.springfox&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;springfox-swagger-ui&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;2.7.0&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure>
<h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><p>2.MyJsonMapper.java<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public class MyJsonMapper extends ObjectMapper &#123;</span><br><span class="line"></span><br><span class="line">  public MyJsonMapper() &#123;</span><br><span class="line">    this.configure(SerializationFeature.FAIL_ON_EMPTY_BEANS, false);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>3.MySwaggerConfig.java<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@Configuration</span><br><span class="line">@EnableSwagger2</span><br><span class="line">public class SwaggerConfig extends WebMvcConfigurerAdapter &#123;</span><br><span class="line"></span><br><span class="line">  @Bean</span><br><span class="line">  public Docket createRestApi() &#123;</span><br><span class="line">    ApiInfo apiInfo = new ApiInfoBuilder()</span><br><span class="line">        .title(&quot;API文档&quot;)</span><br><span class="line">        .description(&quot;接口文档&quot;)</span><br><span class="line">        .version(&quot;0.0.1&quot;)</span><br><span class="line">        .build();</span><br><span class="line">    List&lt;ResponseMessage&gt; msg = Lists.newArrayList();</span><br><span class="line"></span><br><span class="line">    for (StatusConstant statusConstant : StatusConstant.values()) &#123;</span><br><span class="line">      msg.add(new ResponseMessageBuilder()</span><br><span class="line">                  .code(statusConstant.val())</span><br><span class="line">                  .message(statusConstant.msg())</span><br><span class="line">                  .responseModel(new ModelRef(&quot;Error&quot;)).build());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    return new Docket(DocumentationType.SWAGGER_2)</span><br><span class="line">        .apiInfo(apiInfo)</span><br><span class="line">        .select()</span><br><span class="line">        .apis(RequestHandlerSelectors.basePackage(&quot;com.zhuyun.slff.api&quot;))</span><br><span class="line">        .paths(PathSelectors.any())</span><br><span class="line">        .build()</span><br><span class="line">        .globalResponseMessage(RequestMethod.GET, msg)</span><br><span class="line">        .globalResponseMessage(RequestMethod.POST, msg)</span><br><span class="line">        .useDefaultResponseMessages(false);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  @Override</span><br><span class="line">  public void addResourceHandlers(ResourceHandlerRegistry registry) &#123;</span><br><span class="line">    registry.addResourceHandler(&quot;swagger-ui.html&quot;)</span><br><span class="line">        .addResourceLocations(&quot;classpath:/META-INF/resources/&quot;);</span><br><span class="line"></span><br><span class="line">    registry.addResourceHandler(&quot;/webjars/**&quot;)</span><br><span class="line">        .addResourceLocations(&quot;classpath:/META-INF/resources/webjars/&quot;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h1 id="访问地址"><a href="#访问地址" class="headerlink" title="访问地址"></a>访问地址</h1><p>0.0.0.0:8080/swagger-ui.html</p>
<h1 id="常用注解"><a href="#常用注解" class="headerlink" title="常用注解"></a>常用注解</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@ApiClass</span><br><span class="line"></span><br><span class="line">@ApiError</span><br><span class="line"></span><br><span class="line">@ApiErrors</span><br><span class="line"></span><br><span class="line">@ApiOperation</span><br><span class="line"></span><br><span class="line">@ApiParam</span><br><span class="line"></span><br><span class="line">@ApiParamImplicit</span><br><span class="line"></span><br><span class="line">@ApiParamsImplicit</span><br><span class="line"></span><br><span class="line">@ApiProperty</span><br><span class="line"></span><br><span class="line">@ApiResponse</span><br><span class="line"></span><br><span class="line">@ApiResponses</span><br><span class="line"></span><br><span class="line">@ApiModel</span><br></pre></td></tr></table></figure>
<h1 id="静态文档生成"><a href="#静态文档生成" class="headerlink" title="静态文档生成"></a>静态文档生成</h1><ol>
<li><p>依赖</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.github.swagger2markup<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>swagger2markup<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<ol start="2">
<li>Test</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">/**</span><br><span class="line"> * Created by ZuoYun on 2018/8/14. Time: 10:12 AM Information:</span><br><span class="line"> */</span><br><span class="line">public class AppTest &#123;</span><br><span class="line"></span><br><span class="line">  @Test</span><br><span class="line">  public void main() throws MalformedURLException &#123;</span><br><span class="line">    URL remoteSwaggerFile = new URL(&quot;http://0.0.0.0:8080/v2/api-docs&quot;);</span><br><span class="line">    Path outputDirectory = Paths.get(&quot;slff-resource/asciidoc&quot;);</span><br><span class="line"></span><br><span class="line">    Swagger2MarkupConfig config = new Swagger2MarkupConfigBuilder()</span><br><span class="line">        .withMarkupLanguage(MarkupLanguage.MARKDOWN)</span><br><span class="line">//        .withOutputLanguage(Language.ZH)</span><br><span class="line">//        .withPathsGroupedBy(GroupBy.TAGS)</span><br><span class="line">        .build();</span><br><span class="line"></span><br><span class="line">    Swagger2MarkupConverter.from(remoteSwaggerFile)</span><br><span class="line">        .withConfig(config)</span><br><span class="line">        .build()</span><br><span class="line">        .toFolder(outputDirectory);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><ul>
<li>注意这里 doc 在解析泛型的时候支持有限，局限于 Spring Spec没有办法工作，所以取巧的方法是用 List 包装一下</li>
<li><a href="https://github.com/swagger-api/swagger-core/issues/498" target="_blank" rel="noopener">https://github.com/swagger-api/swagger-core/issues/498</a> </li>
</ul>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>java-doc</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring-Cache</title>
    <url>/2016/06/01/0138-Spring-Cache/</url>
    <content><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p><a href="http://docs.spring.io/spring/docs/current/spring-framework-reference/html/cache.html" target="_blank" rel="noopener">http://docs.spring.io/spring/docs/current/spring-framework-reference/html/cache.html</a></p>
<h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><ul>
<li>@Cacheable triggers cache population</li>
<li>@CacheEvict triggers cache eviction</li>
<li>@CachePut updates the cache without interfering with the   method execution</li>
<li>@Caching regroups multiple cache operations to be applied on a method</li>
<li>@CacheConfig shares some common cache-related settings at class-level</li>
<li>可以使用 Spel 表达式来解析数据</li>
</ul>
<h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><p>1.spring-cache.xml<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!--cache 注解--&gt;</span><br><span class="line">&lt;cache:annotation-driven cache-manager=&quot;cacheManager&quot; proxy-target-class=&quot;true&quot;/&gt;</span><br><span class="line"></span><br><span class="line">&lt;bean id=&quot;cacheManager&quot; class=&quot;org.springframework.cache.support.SimpleCacheManager&quot;/&gt;</span><br></pre></td></tr></table></figure></p>
<p>2.pom.xml<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-context&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;$&#123;spring.version&#125;&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>PushCloud</title>
    <url>/2016/06/12/0139-PushCloud/</url>
    <content><![CDATA[<h1 id="推送"><a href="#推送" class="headerlink" title="推送"></a>推送</h1><h2 id="官方"><a href="#官方" class="headerlink" title="官方"></a>官方</h2><ul>
<li>Google Cloud Message</li>
<li>Apple Push Notification Service</li>
</ul>
<h2 id="第三方推送"><a href="#第三方推送" class="headerlink" title="第三方推送"></a>第三方推送</h2><ul>
<li>小米推送</li>
<li>微信第三方平台推送</li>
<li>个推、JPush</li>
<li>openfire+spark+smack(XMPP/MQTT/长轮训)<h1 id="IM"><a href="#IM" class="headerlink" title="IM"></a>IM</h1></li>
<li>容联云</li>
<li>Daocloud</li>
<li>美洽客服</li>
<li>逸创客服</li>
</ul>
<h1 id="社区"><a href="#社区" class="headerlink" title="社区"></a>社区</h1><ul>
<li>友盟微社区</li>
</ul>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>manage</tag>
      </tags>
  </entry>
  <entry>
    <title>Showcase-LBS</title>
    <url>/2016/06/14/0140-Showcase-LBS/</url>
    <content><![CDATA[<p>Mongodb Geo<br>Redis Geo<br>MySQL GeoHash</p>
<ul>
<li>相对距离</li>
<li>附近</li>
<li>摇一摇</li>
</ul>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>未归档</tag>
      </tags>
  </entry>
  <entry>
    <title>MacOS /Win重装</title>
    <url>/2016/06/14/0141-MacOS%20-Win%E9%87%8D%E8%A3%85/</url>
    <content><![CDATA[<h1 id="MacOS"><a href="#MacOS" class="headerlink" title="MacOS"></a>MacOS</h1><h2 id="U盘制作"><a href="#U盘制作" class="headerlink" title="U盘制作"></a>U盘制作</h2><ol>
<li><p>下载 DMG 镜像</p>
<blockquote>
<p><a href="http://pan.baidu.com/s/1jHR7x0U" target="_blank" rel="noopener">http://pan.baidu.com/s/1jHR7x0U</a></p>
</blockquote>
</li>
<li><p>格式化 U盘，用 Disk Utility 格式化成默认 OS 磁盘卷（默认 GUID）</p>
</li>
<li>安装 DMG 镜像，然后进入 Application 点开一次 Install OS（挂载 kernelcache 引导）</li>
<li>刻入 U盘<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo /Applications/Install OS X El Capitan.app/Contents/Resources/createinstallmedia --volume /Volumes/XXXX --applicationpath &quot;/Applications/Install OS X El Capitan.app&quot;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="安装系统"><a href="#安装系统" class="headerlink" title="安装系统"></a>安装系统</h2><ol>
<li>开机按住 alt 键 </li>
<li>更新当前机器时间<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">date 122014102015.30</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="BootCamp-引导重装系统"><a href="#BootCamp-引导重装系统" class="headerlink" title="BootCamp 引导重装系统"></a>BootCamp 引导重装系统</h2><ol>
<li>制作启动盘</li>
<li>alt 键引导 EFI 驱动</li>
<li>新建一个主分区，安装系统</li>
</ol>
<h2 id="安装-Enjoy-it"><a href="#安装-Enjoy-it" class="headerlink" title="安装 Enjoy it!"></a>安装 Enjoy it!</h2><h1 id="Win-系统安装"><a href="#Win-系统安装" class="headerlink" title="Win 系统安装"></a>Win 系统安装</h1><h2 id="优盘制作"><a href="#优盘制作" class="headerlink" title="优盘制作"></a>优盘制作</h2><p><a href="http://www.wepe.com.cn/" target="_blank" rel="noopener">http://www.wepe.com.cn/</a></p>
<h2 id="镜像下载"><a href="#镜像下载" class="headerlink" title="镜像下载"></a>镜像下载</h2><p><a href="http://www.imsdn.cn/" target="_blank" rel="noopener">http://www.imsdn.cn/</a></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><ol>
<li>请使用 MBR 格式分区</li>
<li>主磁盘分区100G+ 其他自便</li>
<li>开启 UEFI，关闭 Win8快速引导</li>
<li>驱动精灵离线版，更新驱动</li>
</ol>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>tools</tag>
      </tags>
  </entry>
  <entry>
    <title>Tools-Synergy、OBS、TeamViewer</title>
    <url>/2016/06/15/0142-Tools-Synergy%E3%80%81OBS%E3%80%81TeamViewer/</url>
    <content><![CDATA[<p>三个印象很深的系统办公软件</p>
<ul>
<li>OBS, RTMP 视频录制软件。 <blockquote>
<p><a href="https://obsproject.com/" target="_blank" rel="noopener">https://obsproject.com/</a></p>
</blockquote>
</li>
<li>Aegisub 字幕制作<blockquote>
<p><a href="http://www.aegisub.org/" target="_blank" rel="noopener">http://www.aegisub.org/</a></p>
</blockquote>
</li>
<li>Synergy, 鼠标共享，支持多平台。 <blockquote>
<p><a href="http://symless.com/synergy/" target="_blank" rel="noopener">http://symless.com/synergy/</a></p>
</blockquote>
</li>
</ul>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>tools</tag>
      </tags>
  </entry>
  <entry>
    <title>Find7 线刷工具</title>
    <url>/2016/06/20/0143-Find7%20%E7%BA%BF%E5%88%B7%E5%B7%A5%E5%85%B7/</url>
    <content><![CDATA[<h1 id="救砖"><a href="#救砖" class="headerlink" title="救砖"></a>救砖</h1><blockquote>
<p><a href="http://pan.baidu.com/s/1eRXfzEy" target="_blank" rel="noopener">http://pan.baidu.com/s/1eRXfzEy</a></p>
</blockquote>
<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><ul>
<li>OPPO-X9007_12_C.06.rar 线刷底层基带驱动，硬件无法识别使用</li>
<li>X9007_Android4.4_16G_20150601.rar 线刷 4.4 包</li>
<li>X9007_Android5.0_16G_20150508.rar 线刷 5.0 包</li>
<li>Find7_5.0全量包151124.zip 升级到最新5.0<h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1></li>
<li>线刷包，win7 系机器通用驱动在X9007XXX.rar 里面，通用。</li>
<li>线刷方法，重扣电池、按音量+、插 usb、看到驱动加载、松音量+</li>
<li>Find7_5.0全量包升级通过系统内部升级系统加载更新到最新</li>
</ul>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>tools</tag>
      </tags>
  </entry>
  <entry>
    <title>Framwork ParsePlatform</title>
    <url>/2016/06/21/0144-Framwork%20ParsePlatform/</url>
    <content><![CDATA[<p>NoServer-Stcak Tech</p>
<p><a href="https://www.parse.com/docs" target="_blank" rel="noopener">https://www.parse.com/docs</a><br><a href="https://github.com/ParsePlatform/parse-server-example" target="_blank" rel="noopener">https://github.com/ParsePlatform/parse-server-example</a></p>
<ul>
<li>底层存储 mongodb+rockracks</li>
<li>中间层 express+parse-server </li>
<li>前端 parse sdk</li>
</ul>
<h1 id="SDK"><a href="#SDK" class="headerlink" title="SDK"></a>SDK</h1><ul>
<li>Cloud* 这个是 parse-server 定义方法，client 调用。也可以做一些方法拦截。</li>
<li>User 用户模块相关</li>
<li>Query/LiveQuery 查询语法</li>
<li>Sessions/Roles 控制安全</li>
<li>Other</li>
</ul>
<h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><ul>
<li><p>Server 声明一个 parse 服务</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">var api = new ParseServer(&#123;</span><br><span class="line">  databaseURI: &apos;mongodb://localhost:27017/mongorocks&apos;, // Connection string for your MongoDB database</span><br><span class="line">  cloud: &apos;/home/myApp/cloud/main.js&apos;, // Absolute path to your Cloud Code</span><br><span class="line">  appId: &apos;xxx&apos;,</span><br><span class="line">  masterKey: &apos;xxx&apos;, // Keep this key secret!</span><br><span class="line">  fileKey: &apos;xxx&apos;,</span><br><span class="line">  serverURL: &apos;http://localhost:1337/parse&apos; // Don&apos;t forget to change to https if needed</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.use(&apos;/parse&apos;, api);</span><br></pre></td></tr></table></figure>
</li>
<li><p>Clinet 声明一个 parse 服务</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Parse.initialize(&quot;myAppId&quot;);</span><br><span class="line">Parse.serverURL = &apos;http://45.32.52.216:1337/parse&apos;</span><br></pre></td></tr></table></figure>
</li>
</ul>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>nodejs</tag>
      </tags>
  </entry>
  <entry>
    <title>QueryDSL-falcor</title>
    <url>/2016/06/21/0145-QueryDSL-falcor/</url>
    <content><![CDATA[<p>两种无服务端，数据查询 DSL 语法，一般作为数据查询接口，适合大数据分析/数据仓库使用。</p>
<p><a href="https://github.com/facebook/graphql" target="_blank" rel="noopener">https://github.com/facebook/graphql</a><br><a href="https://github.com/Netflix/falcor" target="_blank" rel="noopener">https://github.com/Netflix/falcor</a></p>
<blockquote>
<p>One Model, Available Everywhere.<br><img src="http://img.sandseasoft.com/image/4/26/af8a65e4305096d5af100290ceecd.png" alt></p>
</blockquote>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>nodejs</tag>
      </tags>
  </entry>
  <entry>
    <title>Convert ffmpeg/imagemagick</title>
    <url>/2016/06/21/0146-Convert%20ffmpeg-imagemagick/</url>
    <content><![CDATA[<h1 id="FFmpeg-使用"><a href="#FFmpeg-使用" class="headerlink" title="FFmpeg 使用"></a>FFmpeg 使用</h1><p><a href="https://ffmpeg.org/" target="_blank" rel="noopener">https://ffmpeg.org/</a><br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ffmpeg -version</span><br></pre></td></tr></table></figure></p>
<h1 id="ImageMagick"><a href="#ImageMagick" class="headerlink" title="ImageMagick"></a>ImageMagick</h1><p><a href="http://www.imagemagick.org/script/index.php" target="_blank" rel="noopener">http://www.imagemagick.org/script/index.php</a><br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">convert -version</span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>store</tag>
      </tags>
  </entry>
  <entry>
    <title>BED Nodejs/Express/NPM</title>
    <url>/2016/06/22/0147-BED%20Nodejs-Express-NPM/</url>
    <content><![CDATA[<h1 id="NPM"><a href="#NPM" class="headerlink" title="NPM"></a>NPM</h1><blockquote>
<p>Nodejs 构建工具</p>
</blockquote>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><a href="https://npm.taobao.org/" target="_blank" rel="noopener">https://npm.taobao.org/</a><br><a href="https://www.npmjs.com/" target="_blank" rel="noopener">https://www.npmjs.com/</a></p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 初始化模块</span><br><span class="line">npm init</span><br><span class="line"># 发布模块到中央仓库</span><br><span class="line">npm publish</span><br><span class="line"># 引入模块, 并添加至 package.json</span><br><span class="line">npm install --save express</span><br><span class="line"># 引入至全局</span><br><span class="line">npm install --g express</span><br><span class="line"># 引入到当前项目</span><br><span class="line">npm install express</span><br></pre></td></tr></table></figure>
<h1 id="Nodejs"><a href="#Nodejs" class="headerlink" title="Nodejs"></a>Nodejs</h1><h2 id="Nodejs-1"><a href="#Nodejs-1" class="headerlink" title="Nodejs"></a>Nodejs</h2><ul>
<li>版本控制 nvm <a href="https://github.com/creationix/nvm" target="_blank" rel="noopener">https://github.com/creationix/nvm</a></li>
<li><p>文件系统 fs 、Buffer、Steam</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">var fs = require(&quot;fs&quot;);</span><br><span class="line"></span><br><span class="line">fs.readFile(&apos;input.txt&apos;, function (err, data) &#123;</span><br><span class="line">   if (err)&#123;</span><br><span class="line">      console.log(err.stack);</span><br><span class="line">      return;</span><br><span class="line">   &#125;</span><br><span class="line">   console.log(data.toString());</span><br><span class="line">&#125;);</span><br><span class="line">console.log(&quot;程序执行完毕&quot;);</span><br></pre></td></tr></table></figure>
</li>
<li><p>事件循环、异步 events</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">// 引入 events 模块</span><br><span class="line">var events = require(&apos;events&apos;);</span><br><span class="line">// 创建 eventEmitter 对象</span><br><span class="line">var eventEmitter = new events.EventEmitter();</span><br><span class="line"></span><br><span class="line">// 创建事件处理程序</span><br><span class="line">var connectHandler = function connected() &#123;</span><br><span class="line">   console.log(&apos;连接成功。&apos;);</span><br><span class="line">  </span><br><span class="line">   // 触发 data_received 事件 </span><br><span class="line">   eventEmitter.emit(&apos;data_received&apos;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 绑定 connection 事件处理程序</span><br><span class="line">eventEmitter.on(&apos;connection&apos;, connectHandler);</span><br><span class="line"> </span><br><span class="line">// 使用匿名函数绑定 data_received 事件</span><br><span class="line">eventEmitter.on(&apos;data_received&apos;, function()&#123;</span><br><span class="line">   console.log(&apos;数据接收成功。&apos;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">// 触发 connection 事件 </span><br><span class="line">eventEmitter.emit(&apos;connection&apos;);</span><br><span class="line"></span><br><span class="line">console.log(&quot;程序执行完毕。&quot;);</span><br></pre></td></tr></table></figure>
</li>
<li><p>模块系统</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">//hello.js </span><br><span class="line">function Hello() &#123; </span><br><span class="line">	var name; </span><br><span class="line">	this.setName = function(thyName) &#123; </span><br><span class="line">		name = thyName; </span><br><span class="line">	&#125;; </span><br><span class="line">	this.sayHello = function() &#123; </span><br><span class="line">		console.log(&apos;Hello &apos; + name); </span><br><span class="line">	&#125;; </span><br><span class="line">&#125;; </span><br><span class="line">exports.method = Hello;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">var Hello = require(&apos;./hello&apos;); </span><br><span class="line">hello = new Hello(); </span><br><span class="line">hello.setName(&apos;BYVoid&apos;); </span><br><span class="line">hello.sayHello();</span><br></pre></td></tr></table></figure>
</li>
<li><p>Async/ES6 Yeild 同步事件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">async.series(&#123;</span><br><span class="line">	one: function(callback)&#123;</span><br><span class="line">		callback(null, 1);</span><br><span class="line">	&#125;,</span><br><span class="line">	two: function(callback)&#123;</span><br><span class="line">		callback(null, 2);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;,function(err, results) &#123;</span><br><span class="line">	console.log(results);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        async.waterfall([</span><br><span class="line">            function (callback) &#123;</span><br><span class="line">                var result=&#123;&#125;;</span><br><span class="line">                callback(null, result);</span><br><span class="line">            &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            function (result, callback) &#123;</span><br><span class="line">                &quot;use strict&quot;;</span><br><span class="line">            &#125;</span><br><span class="line">        ]);</span><br></pre></td></tr></table></figure>
</li>
<li><p>全局对象 <strong>filename/</strong>dirname/process</p>
</li>
<li>并发 cluster</li>
<li>守护进程 pm2</li>
</ul>
<h2 id="Express-使用"><a href="#Express-使用" class="headerlink" title="Express 使用"></a>Express 使用</h2><h3 id="关键组件"><a href="#关键组件" class="headerlink" title="关键组件"></a>关键组件</h3><ul>
<li>body-parser</li>
<li>cookie-parser</li>
<li>multer</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">var express = require(&apos;express&apos;)</span><br><span class="line">var app = express()</span><br><span class="line">var fs = require(&quot;fs&quot;);</span><br><span class="line">var bodyParser = require(&apos;body-parser&apos;);</span><br><span class="line">var multer  = require(&apos;multer&apos;);</span><br><span class="line">var cookieParser = require(&apos;cookie-parser&apos;)</span><br><span class="line"></span><br><span class="line">app.use(bodyParser.urlencoded(&#123; extended: false &#125;));</span><br><span class="line">app.use(multer(&#123; dest: &apos;/tmp/&apos;&#125;).array(&apos;image&apos;));</span><br><span class="line">app.use(cookieParser())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//get 请求</span><br><span class="line">app.get(&apos;/&apos;, function (req, res) &#123;</span><br><span class="line">  res.send(&apos;Hello World&apos;);</span><br><span class="line">  //json 格式</span><br><span class="line">  res.end(JSON.stringify(&#123;&#125;));</span><br><span class="line">&#125;)</span><br><span class="line">//静态目录隐射</span><br><span class="line">app.use(&apos;/public&apos;,express.static(path.join(__dirname, &apos;public&apos;)));</span><br><span class="line">//File 转发</span><br><span class="line">app.get(&apos;/test&apos;, function(req, res) &#123;</span><br><span class="line">  res.sendFile(path.join(__dirname, &apos;/public/test.html&apos;));</span><br><span class="line">&#125;);</span><br><span class="line">//拦截器</span><br><span class="line">app.use(&apos;/&apos;,function(req,res)&#123;</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.listen(3000);</span><br></pre></td></tr></table></figure>
<h2 id="module-化"><a href="#module-化" class="headerlink" title="module 化"></a>module 化</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">var express = require(&apos;express&apos;);</span><br><span class="line">var router = express.Router();</span><br><span class="line"></span><br><span class="line">/* GET users listing. */</span><br><span class="line">router.get(&apos;/&apos;, function(req, res, next) &#123;</span><br><span class="line">  res.send(&apos;respond with a resource&apos;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">module.exports = router;</span><br></pre></td></tr></table></figure>
<h2 id="私有仓库"><a href="#私有仓库" class="headerlink" title="私有仓库"></a>私有仓库</h2><p>verdaccio<br><a href="https://github.com/verdaccio/verdaccio" target="_blank" rel="noopener">https://github.com/verdaccio/verdaccio</a></p>
<h2 id="强制包更新"><a href="#强制包更新" class="headerlink" title="强制包更新"></a>强制包更新</h2><p>方法一手动跟新：<br>修改package.json中依赖包版本，执行npm install –force<br>方法二使用第三方插件：<br>npm install -g npm-check-updates<br>ncu // 查看可更新包<br>ncu -u // 更新package.json<br>npm install // 升级到最新版本<br>方法三使用yarn代替npm,yarn upgrade<br>题外话，stackoverflow的大神很谦虚，而sf的大神都很低调</p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>nodejs</tag>
      </tags>
  </entry>
  <entry>
    <title>LogAnalyze Nginx GoAccess</title>
    <url>/2016/06/27/0148-LogAnalyze%20Nginx%20GoAccess/</url>
    <content><![CDATA[<p>Nginx 日志分析工具<br><a href="https://goaccess.io/" target="_blank" rel="noopener">https://goaccess.io/</a></p>
<p>安装<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wget http://tar.goaccess.io/goaccess-1.0.1.tar.gz </span><br><span class="line">tar -xzvf goaccess-1.0.1.tar.gz </span><br><span class="line">cd goaccess-1.0.1/ </span><br><span class="line">./configure --enable-geoip --enable-utf8 </span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure></p>
<p>使用<br><a href="https://goaccess.io/man#" target="_blank" rel="noopener">https://goaccess.io/man#</a> examples</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 直接启动</span><br><span class="line">goaccess -f access.log</span><br><span class="line"># HTML 页面</span><br><span class="line">goaccess -f access.log -o report.html --real-time-html --ws-url=x.x.x.x --port=9870  --addr=0.0.0.0</span><br><span class="line">python -s SimpleHTTPServer</span><br><span class="line"># open report.html</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>LogTraceing Sentry</title>
    <url>/2016/06/27/0149-LogTraceing%20Sentry/</url>
    <content><![CDATA[<p>Sentry<br><a href="https://getsentry.com/" target="_blank" rel="noopener">https://getsentry.com/</a><br><a href="https://hub.docker.com/_/sentry/" target="_blank" rel="noopener">https://hub.docker.com/_/sentry/</a></p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>未归档</tag>
      </tags>
  </entry>
  <entry>
    <title>Proxy Shadowsocks/Omga</title>
    <url>/2016/07/01/0150-Proxy%20Shadowsocks-Omga/</url>
    <content><![CDATA[<p>Server<br><a href="https://github.com/shadowsocks/shadowsocks" target="_blank" rel="noopener">https://github.com/shadowsocks/shadowsocks</a><br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">apt-get install python-pip</span><br><span class="line">pip install shadowsocks</span><br><span class="line">sudo ssserver -p 443 -k password -m aes-256-cfb --user nobody -d start</span><br></pre></td></tr></table></figure></p>
<p>Clinet<br><a href="https://shadowsocks.org/en/download/clients.html" target="_blank" rel="noopener">https://shadowsocks.org/en/download/clients.html</a><br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sslocal -c -v ss.json</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">&quot;server&quot;:&quot;server-ip&quot;,</span><br><span class="line">&quot;server_port&quot;:8000,</span><br><span class="line">&quot;local_address&quot;: &quot;127.0.0.1&quot;,</span><br><span class="line">&quot;local_port&quot;:1080,</span><br><span class="line">&quot;password&quot;:&quot;your-password&quot;,</span><br><span class="line">&quot;timeout&quot;:600,</span><br><span class="line">&quot;method&quot;:&quot;aes-256-cfb&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p><a href="https://chrome.google.com/webstore/detail/proxy-switchyomega/padekgcemlokbadohgkifijomclgjgif?utm_campaign=en&amp;utm_source=en-et-na-us-oc-webstrhm&amp;utm_medium=et" target="_blank" rel="noopener">SwitchyOmega</a></p>
<p>Chrome plugins for proxy</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker pull oddrationale/docker-shadowsocks</span><br><span class="line"> docker run -d -p 1234:1234 oddrationale/docker-shadowsocks -s 0.0.0.0 -p 1234 -k 11223344 -m aes-256-cfb</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>tools</tag>
      </tags>
  </entry>
  <entry>
    <title>OLAP Zeppelin</title>
    <url>/2016/07/06/0151-OLAP%20Zeppelin/</url>
    <content><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>OLAP 工具，类似方案如 tableau 或者 Python + Matplotlib 都是可以的</p>
<h2 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">./bin/zeppelin-daemon.sh status</span><br></pre></td></tr></table></figure>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><ol>
<li>zeppelin-0.6.2-bin-all/interpreter/jdbc 放mysql jdbc插件</li>
<li>编辑 Interpreters 的jdbc句柄，更换 driver/url/user/passwd</li>
<li>设置notebook<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">%jdbc</span><br><span class="line">select * from demo_copy</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p><img src="http://img.sandseasoft.com/image/8/75/08c16e4557008ee22b1e314b34011.png" alt></p>
<h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><ul>
<li><a href="http://zeppelin.apache.org/" target="_blank" rel="noopener">http://zeppelin.apache.org/</a></li>
<li><a href="http://zeppelin.apache.org/docs/0.6.0/" target="_blank" rel="noopener">http://zeppelin.apache.org/docs/0.6.0/</a></li>
</ul>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>Server IRC</title>
    <url>/2016/07/13/0152-Server%20IRC/</url>
    <content><![CDATA[<h1 id="IRC-Server"><a href="#IRC-Server" class="headerlink" title="IRC Server"></a>IRC Server</h1><p><a href="https://github.com/unrealircd/unrealircd" target="_blank" rel="noopener">https://github.com/unrealircd/unrealircd</a><br><a href="https://www.unrealircd.org/docs/Installing_from_source" target="_blank" rel="noopener">https://www.unrealircd.org/docs/Installing_from_source</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cp /root/unrealircd/conf/examples/example.conf /root/unrealircd/conf/unrealircd.conf</span><br><span class="line"></span><br><span class="line">config error: /root/unrealircd/conf/unrealircd.conf:144: please change the the name and password of the default &apos;bobsmith&apos; oper block</span><br><span class="line">config error: /root/unrealircd/conf/unrealircd.conf:378: set::cloak-keys: (key 2) Keys should be mixed a-zA-Z0-9, like &quot;a2JO6fh3Q6w4oN3s7&quot;</span><br><span class="line">config error: /root/unrealircd/conf/unrealircd.conf:379: set::cloak-keys: (key 3) Keys should be mixed a-zA-Z0-9, like &quot;a2JO6fh3Q6w4oN3s7&quot;</span><br><span class="line">config error: /root/unrealircd/conf/unrealircd.conf:376: set::cloak-keys: All your 3 keys should be RANDOM, they should not be equal</span><br><span class="line">config error: /root/unrealircd/conf/unrealircd.conf:386: set::kline-address must be an e-mail or an URL</span><br><span class="line">config error: 5 errors encountered</span><br><span class="line"></span><br><span class="line">sh ./bin/unrealircd</span><br></pre></td></tr></table></figure>
<h1 id="IRC-Web-Client"><a href="#IRC-Web-Client" class="headerlink" title="IRC Web Client"></a>IRC Web Client</h1><p><a href="https://github.com/erming/shout" target="_blank" rel="noopener">https://github.com/erming/shout</a><br><a href="http://shout-irc.com/docs/" target="_blank" rel="noopener">http://shout-irc.com/docs/</a></p>
<h1 id="IRC-Local-Client"><a href="#IRC-Local-Client" class="headerlink" title="IRC Local Client"></a>IRC Local Client</h1><p><a href="https://github.com/mephux/komanda" target="_blank" rel="noopener">https://github.com/mephux/komanda</a></p>
<p>or maybe irssi<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum install irssi</span><br><span class="line"></span><br><span class="line">irssi</span><br><span class="line">/window new </span><br><span class="line">/connect 172.16.1.15</span><br><span class="line">/join deploy</span><br><span class="line">/nick zuoyun</span><br></pre></td></tr></table></figure></p>
<h1 id="IRC-Cloud"><a href="#IRC-Cloud" class="headerlink" title="IRC Cloud"></a>IRC Cloud</h1><p><a href="http://webchat.freenode.net/" target="_blank" rel="noopener">http://webchat.freenode.net/</a></p>
<h1 id="IRC-Protocl"><a href="#IRC-Protocl" class="headerlink" title="IRC Protocl"></a>IRC Protocl</h1><p><a href="https://en.wikipedia.org/wiki/Internet_Relay_Chat" target="_blank" rel="noopener">https://en.wikipedia.org/wiki/Internet_Relay_Chat</a><br><a href="https://www.alien.net.au/irc/index.html" target="_blank" rel="noopener">https://www.alien.net.au/irc/index.html</a></p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>manage</tag>
      </tags>
  </entry>
  <entry>
    <title>DevOps AuthServer LDAP And Jenkins</title>
    <url>/2016/07/13/0153-DevOps%20AuthServer%20LDAP%20And%20Jenkins/</url>
    <content><![CDATA[<h1 id="LDAP安装"><a href="#LDAP安装" class="headerlink" title="LDAP安装"></a>LDAP安装</h1><h2 id="Client"><a href="#Client" class="headerlink" title="Client"></a>Client</h2><p><a href="http://www.jxplorer.org/" target="_blank" rel="noopener">http://www.jxplorer.org/</a></p>
<h2 id="Server"><a href="#Server" class="headerlink" title="Server"></a>Server</h2><p><a href="http://directory.apache.org/apacheds/" target="_blank" rel="noopener">http://directory.apache.org/apacheds/</a></p>
<h2 id="安装方法"><a href="#安装方法" class="headerlink" title="安装方法"></a>安装方法</h2><p><a href="http://directory.apache.org/apacheds/download/download-linux-bin.html" target="_blank" rel="noopener">http://directory.apache.org/apacheds/download/download-linux-bin.html</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">chmod a+x apacheds-2.0.0-M23-64bit.bin</span><br><span class="line"></span><br><span class="line">./bin/apacheds start default</span><br><span class="line">./bin/apacheds status default</span><br><span class="line"></span><br><span class="line">Usage: /usr/local/apacheds-2.0.0-M24/bin/apacheds &#123; console | start | stop | restart | status | dump | repair &#125; &lt;instance name&gt;</span><br><span class="line"></span><br><span class="line">defluat:LDAPv3.0 </span><br><span class="line">port:10839</span><br></pre></td></tr></table></figure>
<h1 id="Jenkins安装"><a href="#Jenkins安装" class="headerlink" title="Jenkins安装"></a>Jenkins安装</h1><p><a href="https://jenkins.io/" target="_blank" rel="noopener">https://jenkins.io/</a><br><a href="https://www.w3cschool.cn/jenkins/" target="_blank" rel="noopener">https://www.w3cschool.cn/jenkins/</a><br>PS:移除 ${home}/.jenkins文件夹</p>
<h1 id="默认配置"><a href="#默认配置" class="headerlink" title="默认配置"></a>默认配置</h1><ol>
<li>默认账号uid=admin,ou=system 密码secret，找到对应账号修改密码</li>
<li>安装ldap插件和 Role-based Authorization Strategy 插件</li>
<li>安装jenkins，进入安全设置选择ldap插件，配置ldap链接<img src="http://img.sandseasoft.com/20171030150929657198688.png" alt="20171030150929657198688.png"></li>
<li>配置安全组策略<img src="http://img.sandseasoft.com/2017103015092970478380.png" alt="2017103015092970478380.png"></li>
</ol>
<h1 id="常用插件"><a href="#常用插件" class="headerlink" title="常用插件"></a>常用插件</h1><ul>
<li>GIT plugin</li>
<li>Maven Invoker plugin</li>
<li>Publish Over SSH (远程Shell)</li>
<li>Maven Integration plugin (Maven集成，否则新建的时候没有Maven Project)</li>
<li>Monitoring (监控Jenkins所消耗的系统资源，如内存使用等)</li>
<li>Ansible plugins</li>
<li>Blue Ocean</li>
<li>pipline</li>
</ul>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>devops</tag>
      </tags>
  </entry>
  <entry>
    <title>FED Build Tools-Gulp、Browserify</title>
    <url>/2016/07/16/0154-FED%20Build%20Tools-Gulp%E3%80%81Browserify/</url>
    <content><![CDATA[<p>↓主流方案</p>
<h1 id="FIS3"><a href="#FIS3" class="headerlink" title="FIS3"></a>FIS3</h1><p><a href="http://fis.baidu.com/" target="_blank" rel="noopener">http://fis.baidu.com/</a></p>
<blockquote>
<p>百度的构建方案,比较重,有自己的闭环生态</p>
</blockquote>
<h1 id="Webpack"><a href="#Webpack" class="headerlink" title="Webpack"></a>Webpack</h1><blockquote>
<p>这个功能强大，但是配置复杂，并没有想象中的成熟</p>
</blockquote>
<p>↓我的构建工具方案</p>
<h1 id="NPM-Browserify-Gulp"><a href="#NPM-Browserify-Gulp" class="headerlink" title="NPM+Browserify+Gulp"></a>NPM+Browserify+Gulp</h1><p><a href="http://www.gulpjs.com.cn/" target="_blank" rel="noopener">http://www.gulpjs.com.cn/</a><br><a href="http://browserify.org/" target="_blank" rel="noopener">http://browserify.org/</a><br><a href="https://segmentfault.com/a/1190000002941361" target="_blank" rel="noopener">https://segmentfault.com/a/1190000002941361</a></p>
<blockquote>
<p>流式插件化构建工具, 前端代码压缩</p>
</blockquote>
<h2 id="Browserify"><a href="#Browserify" class="headerlink" title="Browserify"></a>Browserify</h2><p>模块化前端代码，基于 CommonJS 风格管理，统一前后端命名空间<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">browserify main.js -o bundle.js --debug</span><br><span class="line">watchify main.js -o &apos;exorcist static/bundle.js.map &gt; static/bundle.js&apos; -d</span><br></pre></td></tr></table></figure></p>
<h2 id="Gulp"><a href="#Gulp" class="headerlink" title="Gulp"></a>Gulp</h2><h3 id="常用插件列表"><a href="#常用插件列表" class="headerlink" title="常用插件列表"></a>常用插件列表</h3><ul>
<li>watchify+browserify</li>
<li>live-reload</li>
<li>less</li>
<li>csslint/eslint</li>
</ul>
<h3 id="exp"><a href="#exp" class="headerlink" title="exp"></a>exp</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">var gulp = require(&quot;gulp&quot;);</span><br><span class="line">var browserify = require(&quot;browserify&quot;);</span><br><span class="line">var watchify = require(&apos;watchify&apos;);</span><br><span class="line">var sourcemaps = require(&quot;gulp-sourcemaps&quot;);</span><br><span class="line">var source = require(&apos;vinyl-source-stream&apos;);</span><br><span class="line">var buffer = require(&apos;vinyl-buffer&apos;);</span><br><span class="line">var assign = require(&apos;lodash.assign&apos;);</span><br><span class="line">var gutil = require(&apos;gulp-util&apos;);</span><br><span class="line">var livereload = require(&apos;gulp-livereload&apos;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">var customOpts=&#123;</span><br><span class="line">        entries: &quot;./fed_modules/main.js&quot;,</span><br><span class="line">        //代码压缩</span><br><span class="line">        debug: true</span><br><span class="line">        &#125;;</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">var b = watchify(browserify(assign(&#123;&#125;, watchify.args,customOpts)));</span><br><span class="line">    b.on(&apos;update&apos;, build); // 当任何依赖发生改变的时候，运行打包工具</span><br><span class="line">    b.on(&apos;log&apos;, gutil.log); // 输出编译日志到终端</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">gulp.task(&quot;browserify&quot;, build);</span><br><span class="line"></span><br><span class="line">function build() &#123;</span><br><span class="line">    return b.bundle()</span><br><span class="line">        .on(&apos;error&apos;, gutil.log.bind(gutil, &apos;Browserify Error&apos;))</span><br><span class="line">        .pipe(source(&quot;bundle.js&quot;))</span><br><span class="line">        .pipe(buffer())</span><br><span class="line">        .pipe(sourcemaps.init(&#123;loadMaps: true&#125;))</span><br><span class="line">        .pipe(sourcemaps.write(&quot;.&quot;))</span><br><span class="line">        .pipe(gulp.dest(&quot;./static/&quot;));</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">gulp.task(&apos;watch&apos;, function () &#123;    </span><br><span class="line">    livereload.listen();</span><br><span class="line">    // app/**/*.*的意思是 app文件夹下的 任何文件夹 的 任何文件</span><br><span class="line">    gulp.watch(&apos;static/*.js&apos;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="http://my.oschina.net/fellowtraveler/blog/719108" target="_blank" rel="noopener">http://my.oschina.net/fellowtraveler/blog/719108</a></p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>nodejs</tag>
      </tags>
  </entry>
  <entry>
    <title>Resource Intergration</title>
    <url>/2016/07/16/0155-Resource%20Intergration/</url>
    <content><![CDATA[<h1 id="公共"><a href="#公共" class="headerlink" title="公共"></a>公共</h1><ul>
<li>Wiki Conflunce</li>
<li>Issue Jira</li>
<li>CVS Gitlab</li>
<li>Resp Nexus</li>
<li>IM IRC</li>
<li>Files OwnCloud</li>
<li>User LDAPServer</li>
<li>VPN L2TP</li>
</ul>
<h1 id="个人"><a href="#个人" class="headerlink" title="个人"></a>个人</h1><ul>
<li>Win/Mac</li>
<li>WPS</li>
<li>Intellij Idea</li>
<li>SourcesTree</li>
<li>SublimeText</li>
<li>Navicat Premium</li>
<li>SecureCRT</li>
<li>Chrome</li>
<li>JProfiler</li>
<li>Photoshop</li>
<li>Sketch</li>
<li>Wunderlist</li>
<li>Auxre</li>
</ul>
<h1 id="硬件"><a href="#硬件" class="headerlink" title="硬件"></a>硬件</h1><p><img src="http://img.sandseasoft.com/image/6/63/ed4b88e8a1527b493c26d24be2b05.png" alt><br><img src="http://img.sandseasoft.com/image/3/a2/7171967861ca40e788341b595151b.png" alt></p>
<h2 id="耗材"><a href="#耗材" class="headerlink" title="耗材"></a>耗材</h2><ul>
<li>戴尔（DELL） U2412M</li>
<li>三星(SAMSUNG) 750 EVO 120G</li>
<li>Filco 87 </li>
<li>Mac 13 Pro/DELL XPS 13/联想 I7 128G SSD</li>
</ul>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>manage</tag>
      </tags>
  </entry>
  <entry>
    <title>IDE VSCode</title>
    <url>/2016/07/17/0156-IDE%20VSCode/</url>
    <content><![CDATA[<blockquote>
<p>虽然不喜欢微软这个公司，但是在做 VSCode 这个工具调研的时候发现功能已经整合 SublimeText Atom 的优点了</p>
</blockquote>
<h1 id="官网"><a href="#官网" class="headerlink" title="官网"></a>官网</h1><p><a href="http://code.visualstudio.com/" target="_blank" rel="noopener">http://code.visualstudio.com/</a><br><a href="https://github.com/Microsoft/vscode" target="_blank" rel="noopener">https://github.com/Microsoft/vscode</a></p>
<h2 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h2><ul>
<li>加载速度快, 自带 emmet</li>
<li>插件不用翻墙，规范，整洁</li>
<li>Ctrl+P 兼容SublimeText 命令使用</li>
<li>支持全局搜索， 正则搜索（高亮）</li>
<li>支持 Git 文档管理，查看，diff</li>
<li>支持 debug</li>
<li>强大的 plugins （@popular）</li>
</ul>
<h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>很适合给新手使用的 Editor，完整稳定的组件，开箱即用支持一整套开发流，不需要翻墙，掌握简单。</p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>manage</tag>
      </tags>
  </entry>
  <entry>
    <title>CodeReview Sonarqube</title>
    <url>/2016/07/23/0157-CodeReview%20Sonarqube/</url>
    <content><![CDATA[<h1 id="SonarQube"><a href="#SonarQube" class="headerlink" title="SonarQube"></a>SonarQube</h1><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">brew install sonarqube</span><br></pre></td></tr></table></figure>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>localhost:9000</p>
<p>snoarqube</p>
<h2 id="使用-1"><a href="#使用-1" class="headerlink" title="使用"></a>使用</h2><p>admin:admin<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">localhost:9000</span><br></pre></td></tr></table></figure></p>
<p>扫描端配置</p>
<p><a href="https://docs.sonarqube.org/display/SCAN/Analyzing+with+SonarQube+Scanner+for+Maven" target="_blank" rel="noopener">https://docs.sonarqube.org/display/SCAN/Analyzing+with+SonarQube+Scanner+for+Maven</a></p>
<p>配置settings.xml<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;settings&gt;</span><br><span class="line">    &lt;pluginGroups&gt;</span><br><span class="line">        &lt;pluginGroup&gt;org.sonarsource.scanner.maven&lt;/pluginGroup&gt;</span><br><span class="line">    &lt;/pluginGroups&gt;</span><br><span class="line">    &lt;profiles&gt;</span><br><span class="line">        &lt;profile&gt;</span><br><span class="line">            &lt;id&gt;sonar&lt;/id&gt;</span><br><span class="line">            &lt;activation&gt;</span><br><span class="line">                &lt;activeByDefault&gt;true&lt;/activeByDefault&gt;</span><br><span class="line">            &lt;/activation&gt;</span><br><span class="line">            &lt;properties&gt;</span><br><span class="line">                &lt;!-- Optional URL to server. Default value is http://localhost:9000 --&gt;</span><br><span class="line">                &lt;sonar.host.url&gt;</span><br><span class="line">                  http://myserver:9000</span><br><span class="line">                &lt;/sonar.host.url&gt;</span><br><span class="line">            &lt;/properties&gt;</span><br><span class="line">        &lt;/profile&gt;</span><br><span class="line">     &lt;/profiles&gt;</span><br><span class="line">&lt;/settings&gt;</span><br></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mvn clean verify sonar:sonar</span><br><span class="line">mvn clean install</span><br><span class="line">mvn sonar:sonar</span><br></pre></td></tr></table></figure>
<p>PS 注意环境要求，只支持jdk1.8+ maven 3+</p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>manage</tag>
      </tags>
  </entry>
  <entry>
    <title>Guide Gradle</title>
    <url>/2016/07/28/0158-Guide%20Gradle/</url>
    <content><![CDATA[<h1 id="官网"><a href="#官网" class="headerlink" title="官网"></a>官网</h1><p><a href="https://gradle.org/" target="_blank" rel="noopener">https://gradle.org/</a></p>
<p>编译打包工具<br>settings.gradle<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">include &apos;usrbo&apos;</span><br><span class="line">project(&apos;:usrbo&apos;).projectDir = new File(settingsDir, &apos;../usrbo/&apos;)</span><br></pre></td></tr></table></figure></p>
<p>build.gradle<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">apply plugin: &apos;war&apos;</span><br><span class="line">apply from: &apos;http://115.29.139.173:4480/ver/jyq.gradle&apos;</span><br><span class="line"></span><br><span class="line">version = &apos;1.0.1.RELEASE&apos;</span><br><span class="line">webAppDirName = &apos;src/main/webapp&apos;</span><br><span class="line"></span><br><span class="line">dependencies &#123;</span><br><span class="line">    compile &apos;com.alibaba:fastjson:1.2.5&apos;</span><br><span class="line">    compile project(&apos;:usrbo&apos;);</span><br><span class="line">    providedCompile &apos;javax.servlet:servlet-api:2.5&apos;</span><br><span class="line">    providedRuntime &apos;javax.servlet:jstl:1.2&apos;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">gradle.taskGraph.beforeTask &#123; Task task -&gt;&quot;merge&quot;</span><br><span class="line">    println task.toString()</span><br><span class="line">    if (task.toString().contains(&quot;war&quot;)) &#123;</span><br><span class="line">        try &#123;</span><br><span class="line">            println &quot;写入 git 信息!&quot;</span><br><span class="line">            new File(&quot;src/main/config/git.properties&quot;).write(new File(&quot;.git/sourcetreeconfig&quot;).getText(&quot;UTF-8&quot;))</span><br><span class="line">            def log=&quot;git log --pretty=format:\&quot;%h|%cn|%cd|%s\&quot;  --date=short -n 1&quot;.execute().getText();</span><br><span class="line">            println log;</span><br><span class="line"></span><br><span class="line">            def properties=new Properties()</span><br><span class="line"></span><br><span class="line">        &#125;catch (Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>未归档</tag>
      </tags>
  </entry>
  <entry>
    <title>Tool-GenyMotion</title>
    <url>/2016/08/14/0159-Tool-GenyMotion/</url>
    <content><![CDATA[<p>Genymition<br>安装 apk 失败, 报错INSTALL_FAILED_CPU_ABI_INCOMPATIBLE 使用这个补丁</p>
<p><a href="https://pan.baidu.com/s/1pLcpSJT" target="_blank" rel="noopener">https://pan.baidu.com/s/1pLcpSJT</a></p>
<p>来源</p>
<p><a href="http://stackoverflow.com/questions/20187609/genymotion-failure-install-failed-cpu-api-incompatible/24076795#" target="_blank" rel="noopener">http://stackoverflow.com/questions/20187609/genymotion-failure-install-failed-cpu-api-incompatible/24076795#</a> 24076795</p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>tools</tag>
      </tags>
  </entry>
  <entry>
    <title>ORC-ABBYY</title>
    <url>/2016/08/14/0160-ORC-ABBYY/</url>
    <content><![CDATA[<p>树大招风..低调..<br><a href="https://pan.baidu.com/s/1hsNRpas" target="_blank" rel="noopener">https://pan.baidu.com/s/1hsNRpas</a></p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>tools</tag>
      </tags>
  </entry>
  <entry>
    <title>Java-  JMX,Jolokia  监控</title>
    <url>/2016/09/28/0161-Java-%20%20JMX,Jolokia%20%20%E7%9B%91%E6%8E%A7/</url>
    <content><![CDATA[<p>JMX相关类<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public class App &#123;  </span><br><span class="line">      </span><br><span class="line">    public static void main(String[] args) throws Exception &#123;  </span><br><span class="line">        // 创建MBeanServer  </span><br><span class="line">        MBeanServer mbs = ManagementFactory.getPlatformMBeanServer();  </span><br><span class="line">          </span><br><span class="line">        // 新建MBean ObjectName, 在MBeanServer里标识注册的MBean  </span><br><span class="line">        ObjectName name = new ObjectName(&quot;com.haitao.jmx:type=Echo&quot;);  </span><br><span class="line">          </span><br><span class="line">        // 创建MBean  </span><br><span class="line">        Echo mbean = new Echo();  </span><br><span class="line">          </span><br><span class="line">        // 在MBeanServer里注册MBean, 标识为ObjectName(com.tenpay.jmx:type=Echo)  </span><br><span class="line">        mbs.registerMBean(mbean, name);  </span><br><span class="line">  </span><br><span class="line">          </span><br><span class="line">        // 在MBeanServer里调用已注册的EchoMBean的print方法  </span><br><span class="line">        mbs.invoke(name, &quot;print&quot;, new Object[] &#123; &quot;haitao.tu&quot;&#125;, new String[] &#123;&quot;java.lang.String&quot;&#125;);  </span><br><span class="line">          </span><br><span class="line">        Thread.sleep(Long.MAX_VALUE);  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>Jolokia 是基于 jmx 的 http 协议实现<br>暴露方法<br>pom.xml<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.jolokia&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;jolokia-core&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;1.3.4&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure></p>
<p>web.xml<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;servlet&gt;</span><br><span class="line">    &lt;servlet-name&gt;jolokia-agent&lt;/servlet-name&gt;</span><br><span class="line">    &lt;servlet-class&gt;org.jolokia.http.AgentServlet&lt;/servlet-class&gt;</span><br><span class="line">    &lt;load-on-startup&gt;1&lt;/load-on-startup&gt;</span><br><span class="line">&lt;/servlet&gt;</span><br><span class="line"></span><br><span class="line">&lt;servlet-mapping&gt;</span><br><span class="line">    &lt;servlet-name&gt;jolokia-agent&lt;/servlet-name&gt;</span><br><span class="line">    &lt;url-pattern&gt;/jolokia/*&lt;/url-pattern&gt;</span><br><span class="line">&lt;/servlet-mapping&gt;</span><br></pre></td></tr></table></figure></p>
<p>当然还可以作为挂载监控使用<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">java -jar jolokia-jvm-1.3.7-agent.jar 获取pid</span><br><span class="line">java -jar jolokia-jvm-1.3.7-agent.jar start 700</span><br></pre></td></tr></table></figure></p>
<p>查询<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8888/jolokia/read/java.lang:type=Memory/HeapMemoryUsage</span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>未归档</tag>
      </tags>
  </entry>
  <entry>
    <title>Guide BI System Build</title>
    <url>/2016/11/11/0162-Guide%20BI%20System%20Build/</url>
    <content><![CDATA[<h2 id="技术评估"><a href="#技术评估" class="headerlink" title="技术评估"></a>技术评估</h2><h3 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h3><ul>
<li>google analytics</li>
<li>growingio</li>
<li>mta.qq.com</li>
<li>talkingdata<h3 id="移动端"><a href="#移动端" class="headerlink" title="移动端"></a>移动端</h3></li>
<li>flurry.com</li>
<li>友盟</li>
</ul>
<h2 id="后端埋点"><a href="#后端埋点" class="headerlink" title="后端埋点"></a>后端埋点</h2><ul>
<li>Nginx／callback</li>
<li>ELK／SLS</li>
<li>Redis</li>
<li>Tableau／QuickBI</li>
</ul>
<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>  随着工信保／星星点财项目数据分析需求日益增长， 对快速简单构建BI系统架构更加强烈</p>
<h2 id="技术原理"><a href="#技术原理" class="headerlink" title="技术原理"></a>技术原理</h2><p>  前端生成指纹信息，通过获取ip，页面信息，停留时间做N*N纬度分析，生成留存率，地图，转化</p>
<h2 id="技术方向"><a href="#技术方向" class="headerlink" title="技术方向"></a>技术方向</h2><h3 id="前端选型：-GrowingIO"><a href="#前端选型：-GrowingIO" class="headerlink" title="前端选型： GrowingIO"></a>前端选型： GrowingIO</h3><ul>
<li>优势：无埋点／全端支持／实时报告／热点图／Quick运营报告／产品迭代<br><img src="http://img.sandseasoft.com/image/6/34/a3688bd82ba1c1823464d64cf4e2c.png" alt><h3 id="后端选型：-QuickBI／Redis／CallBack"><a href="#后端选型：-QuickBI／Redis／CallBack" class="headerlink" title="后端选型： QuickBI／Redis／CallBack"></a>后端选型： QuickBI／Redis／CallBack</h3></li>
<li>优势<ul>
<li>QuickBI： 将t_cfp_txnjnl, log<em> 同步到QuickBI，然后做N</em>N纬度分析出运营实时报表数据</li>
<li>Redis： 通过带TTL的ADD函数统计在线人数</li>
<li>CallBack：图片，超链类似 <a href="http://www.xx.com?callback=58gxb.com/xxx&amp;param1=key1&amp;param2=key2" target="_blank" rel="noopener">www.xx.com?callback=58gxb.com/xxx&amp;param1=key1&amp;param2=key2</a> 打通html5入口跟踪链<br><img src="http://img.sandseasoft.com/image/8/5c/14aba83a009af09b8064140ee550a.png" alt></li>
</ul>
</li>
</ul>
<p><img src="http://img.sandseasoft.com/image/2/99/26efb7f8b24feb1cc8921e8db59d1.png" alt></p>
<p><img src="http://img.sandseasoft.com/image/3/d8/aae26455910361b7d7b4542e34edb.png" alt></p>
<h3 id="运营数据存储：MySQL／AccessLog／HDFS／ElasticSearch／SLS"><a href="#运营数据存储：MySQL／AccessLog／HDFS／ElasticSearch／SLS" class="headerlink" title="运营数据存储：MySQL／AccessLog／HDFS／ElasticSearch／SLS"></a>运营数据存储：MySQL／AccessLog／HDFS／ElasticSearch／SLS</h3><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>  尽可能降低业务侵入性，降低性能影响的同时，对实时数据／近实时数据／离线数据 进行统计，同时打通各个平台数据链路保证数据透明。</p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>未归档</tag>
      </tags>
  </entry>
  <entry>
    <title>SelfHost MailServer</title>
    <url>/2016/11/22/0163-SelfHost%20MailServer/</url>
    <content><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>   在使用阿里和腾讯的免费企业邮箱的时候，发现有别有用心的人使用社工钓鱼企业内部机密资料，给部门行政管理带来很大的困扰，所以迁移回本地私有邮件服务器。</p>
<h2 id="服务端"><a href="#服务端" class="headerlink" title="服务端"></a>服务端</h2><h3 id="可选方案"><a href="#可选方案" class="headerlink" title="可选方案"></a>可选方案</h3><ul>
<li>postfix</li>
<li>hmailserver</li>
</ul>
<h3 id="hmailserver使用"><a href="#hmailserver使用" class="headerlink" title="hmailserver使用"></a>hmailserver使用</h3><p>资源 <a href="https://pan.baidu.com/s/1eSIAXKu" target="_blank" rel="noopener">https://pan.baidu.com/s/1eSIAXKu</a></p>
<ol>
<li>直接安装</li>
<li>加载libsql.dll</li>
<li>构建数据库</li>
<li>创建domain</li>
<li>创建account</li>
<li>设置 Delivery of email（中续邮箱）</li>
<li>window防火墙-&gt;高级设置设置-&gt;入站规则-&gt;开放端口</li>
<li>IP Rage 增加白名单域，set defualt</li>
<li>foxmail client连接</li>
</ol>
<p><img src="http://img.sandseasoft.com/image/c/4e/a258bf4ee444a6acda752ffa64e52.jpeg" alt></p>
<h3 id="AfterLogic-WebMail"><a href="#AfterLogic-WebMail" class="headerlink" title="AfterLogic WebMail"></a>AfterLogic WebMail</h3><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><ol>
<li>使用wampserver，挂在webmail</li>
<li>/install ，一路next</li>
<li>管理后台登录, /adminpanel/index.php 设置save</li>
<li>webmail登录，/index.php</li>
</ol>
<p><img src="http://img.sandseasoft.com/image/0/57/0f86ae9b1fd51f8b9bac95ab55eb8.png" alt></p>
<h3 id="来源"><a href="#来源" class="headerlink" title="来源"></a>来源</h3><ul>
<li><a href="https://en.wikipedia.org/wiki/Comparison_of_mail_servers" target="_blank" rel="noopener">https://en.wikipedia.org/wiki/Comparison_of_mail_servers</a></li>
<li><a href="https://www.hmailserver.com/" target="_blank" rel="noopener">https://www.hmailserver.com/</a></li>
<li><a href="http://www.afterlogic.org" target="_blank" rel="noopener">http://www.afterlogic.org</a></li>
<li><a href="http://www.foxmail.com/" target="_blank" rel="noopener">http://www.foxmail.com/</a></li>
<li><a href="http://www.wampserver.com/" target="_blank" rel="noopener">http://www.wampserver.com/</a></li>
</ul>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>tools</tag>
      </tags>
  </entry>
  <entry>
    <title>Guide SVN</title>
    <url>/2016/11/24/0164-Guide%20SVN/</url>
    <content><![CDATA[<h3 id="公共云"><a href="#公共云" class="headerlink" title="公共云"></a>公共云</h3><p>code.taobao.org</p>
<h3 id="win系CS"><a href="#win系CS" class="headerlink" title="win系CS"></a>win系CS</h3><p>VisualSVN server/TortoiseSVN<br><a href="https://www.visualsvn.com/server/" target="_blank" rel="noopener">https://www.visualsvn.com/server/</a></p>
<h3 id="linux"><a href="#linux" class="headerlink" title="linux"></a>linux</h3><p><a href="http://www.centoscn.com/CentosServer/ftp/2016/0515/7236.html" target="_blank" rel="noopener">http://www.centoscn.com/CentosServer/ftp/2016/0515/7236.html</a></p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>tools</tag>
      </tags>
  </entry>
  <entry>
    <title>Java-XDiamond</title>
    <url>/2016/11/25/0165-Java-XDiamond/</url>
    <content><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>本地编译配置，有严重的安全问题，</p>
<ol>
<li>本地的profile开发人员都有访问和修改权限，泄漏核心key和serect</li>
<li>上线或者要做重新编译，会很麻烦，容易出错</li>
</ol>
<h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>  从配置中心使用长链接拉取配置， 挂载到Spring的PropertiesPropertySource的方法。 由于本地会有configure的cache，所以配置中心是单点的，部署简单好用。</p>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p>详见simple-springboot-dubbo的 xdiamond 部分<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!--配置中心--&gt;</span><br><span class="line">&lt;bean id=&quot;xDiamondConfig&quot; class=&quot;io.github.xdiamond.client.spring.XDiamondConfigFactoryBean&quot;&gt;</span><br><span class="line">    &lt;property name=&quot;serverHost&quot; value=&quot;$&#123;xdiamond.server.host:127.0.0.1&#125;&quot;/&gt;</span><br><span class="line">    &lt;property name=&quot;serverPort&quot; value=&quot;5678&quot;/&gt;</span><br><span class="line">    &lt;property name=&quot;groupId&quot; value=&quot;com.matan&quot;/&gt;</span><br><span class="line">    &lt;property name=&quot;artifactId&quot; value=&quot;bui_web&quot;/&gt;</span><br><span class="line">    &lt;property name=&quot;version&quot; value=&quot;1.0.0.1.SNAPSHOT&quot;/&gt;</span><br><span class="line">    &lt;property name=&quot;profile&quot; value=&quot;$&#123;xdiamond.project.profile:dev&#125;&quot;/&gt;</span><br><span class="line">    &lt;property name=&quot;secretKey&quot; value=&quot;$&#123;xdiamond.project.secretkey:&#125;&quot;&gt;&lt;/property&gt;</span><br><span class="line">    &lt;property name=&quot;bSyncToSystemProperties&quot; value=&quot;true&quot;&gt;&lt;/property&gt;</span><br><span class="line">&lt;/bean&gt;</span><br><span class="line"></span><br><span class="line">&lt;bean class=&quot;io.github.xdiamond.client.spring.PropertySourcesAdderBean&quot;&gt;</span><br><span class="line">    &lt;property name=&quot;properties&quot;&gt;</span><br><span class="line">        &lt;bean class=&quot;java.util.Properties&quot; factory-bean=&quot;xDiamondConfig&quot;</span><br><span class="line">              factory-method=&quot;getProperties&quot;&gt;</span><br><span class="line">        &lt;/bean&gt;</span><br><span class="line">    &lt;/property&gt;</span><br><span class="line">&lt;/bean&gt;</span><br></pre></td></tr></table></figure></p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>部署简单，架构并没有过度开发，安全性和扩展性符合要求，好用。</p>
<ul>
<li><a href="https://github.com/hengyunabc/xdiamond" target="_blank" rel="noopener">https://github.com/hengyunabc/xdiamond</a></li>
<li><a href="https://github.com/hengyunabc/xdiamond/wiki" target="_blank" rel="noopener">https://github.com/hengyunabc/xdiamond/wiki</a></li>
</ul>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>NewSQL CouchBase</title>
    <url>/2016/11/25/0166-NewSQL%20CouchBase/</url>
    <content><![CDATA[<p>Couchbase</p>
<h3 id="feature"><a href="#feature" class="headerlink" title="feature"></a>feature</h3><ul>
<li>分社区版和专业版，功能没有阉割</li>
<li>前身memcache，完全兼容相关协议。</li>
<li>server支持like sql查询（N1Query）</li>
<li>server对等分布式（类似elasticsearch），可以快速组建集群，动态伸缩</li>
<li>server有丰富的监控模块，webgui</li>
</ul>
<h3 id="安装使用"><a href="#安装使用" class="headerlink" title="安装使用"></a>安装使用</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">rpm -ivh couchbase-server-enterprise-4.6.0-DP-</span><br><span class="line">centos7.x86_64.rpm</span><br></pre></td></tr></table></figure>
<p>托管于 systemd</p>
<p>启动<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">/opt/couchbase/bin/couchbase-server start</span><br></pre></td></tr></table></figure></p>
<p>停止<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">/opt/couchbase/bin/couchbase-server stop</span><br></pre></td></tr></table></figure></p>
<p>访问<br>0.0.0.0:8091</p>
<p>端口使用<br>8091<br>11210</p>
<p>客户端使用<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public class Example &#123;</span><br><span class="line"></span><br><span class="line">    public static void main(String... args) throws Exception &#123;</span><br><span class="line">        // Initialize the Connection</span><br><span class="line">        Cluster cluster = CouchbaseCluster.create(&quot;localhost&quot;);</span><br><span class="line">        Bucket bucket = cluster.openBucket(&quot;default&quot;);</span><br><span class="line"></span><br><span class="line">        // Create a JSON Document</span><br><span class="line">        JsonObject arthur = JsonObject.create()</span><br><span class="line">            .put(&quot;name&quot;, &quot;Arthur&quot;)</span><br><span class="line">            .put(&quot;email&quot;, &quot;kingarthur@couchbase.com&quot;)</span><br><span class="line">            .put(&quot;interests&quot;, JsonArray.from(&quot;Holy Grail&quot;, &quot;African Swallows&quot;));</span><br><span class="line"></span><br><span class="line">        // Store the Document</span><br><span class="line">        bucket.upsert(JsonDocument.create(&quot;u:king_arthur&quot;, arthur));</span><br><span class="line"></span><br><span class="line">        // Load the Document and print it</span><br><span class="line">        // Prints Content and Metadata of the stored Document</span><br><span class="line">        System.out.println(bucket.get(&quot;u:king_arthur&quot;));</span><br><span class="line"></span><br><span class="line">        // Create a N1QL Primary Index (but ignore if it exists)</span><br><span class="line">        bucket.bucketManager().createN1qlPrimaryIndex(true, false);</span><br><span class="line"></span><br><span class="line">        // Perform a N1QL Query</span><br><span class="line">        N1qlQueryResult result = bucket.query(</span><br><span class="line">            N1qlQuery.parameterized(&quot;SELECT name FROM default WHERE $1 IN interests&quot;,</span><br><span class="line">            JsonArray.from(&quot;African Swallows&quot;))</span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">        // Print each found Row</span><br><span class="line">        for (N1qlQueryRow row : result) &#123;</span><br><span class="line">            // Prints &#123;&quot;name&quot;:&quot;Arthur&quot;&#125;</span><br><span class="line">            System.out.println(row);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ul>
<li><a href="http://www.couchbase.com/" target="_blank" rel="noopener">http://www.couchbase.com/</a></li>
<li><a href="http://developer.couchbase.com/documentation/server/current/sdk/java/start-using-sdk.html" target="_blank" rel="noopener">http://developer.couchbase.com/documentation/server/current/sdk/java/start-using-sdk.html</a></li>
</ul>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>devops</tag>
      </tags>
  </entry>
  <entry>
    <title>Guide Percona-Mongodb</title>
    <url>/2016/12/08/0167-Guide%20Percona-Mongodb/</url>
    <content><![CDATA[<h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><ul>
<li>完全兼容mongodb3.x API</li>
<li>rockdb内核，这意味着落地存储能力变强，不在强依赖内存性能</li>
<li>不兼容ACID特性</li>
<li>支持wiredtiger（default）／rockdb／memony</li>
</ul>
<h3 id="安装For-CentOS"><a href="#安装For-CentOS" class="headerlink" title="安装For CentOS"></a>安装For CentOS</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum install http://www.percona.com/downloads/percona-release/redhat/0.1-4/percona-release-0.1-4.noarch.rpm</span><br><span class="line"></span><br><span class="line">yum install Percona-Server-MongoDB-32</span><br><span class="line"></span><br><span class="line">sudo service mongod start</span><br><span class="line"></span><br><span class="line">vim /etc/mongod.conf </span><br><span class="line">-------</span><br><span class="line">security:</span><br><span class="line">  authorization: enabled</span><br></pre></td></tr></table></figure>
<h3 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 备份</span><br><span class="line">db.runCommand(&#123;createBackup: 1, backupDir: &quot;/my/backup/data/path&quot;&#125;)</span><br><span class="line"></span><br><span class="line"># 增加角色，登录</span><br><span class="line">db.createUser(&#123;user:&quot;root&quot;,pwd:&quot;123456&quot;,roles:[]&#125;)</span><br><span class="line">db.auth(&apos;root&apos;,&apos;123456&apos;)</span><br></pre></td></tr></table></figure>
<h3 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h3><p><a href="https://www.percona.com/software/mongo-database/percona-server-for-mongodb" target="_blank" rel="noopener">https://www.percona.com/software/mongo-database/percona-server-for-mongodb</a></p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>devops</tag>
      </tags>
  </entry>
  <entry>
    <title>Guide Percona-xtrabackup</title>
    <url>/2016/12/08/0168-Guide%20Percona-xtrabackup/</url>
    <content><![CDATA[<h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><pre><code>mysql热备份／恢复工具
</code></pre><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum install http://www.percona.com/downloads/percona-release/redhat/0.1-3/percona-release-0.1-3.noarch.rpm</span><br><span class="line"></span><br><span class="line">yum install percona-xtrabackup-22</span><br></pre></td></tr></table></figure>
<h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 备份</span><br><span class="line">innobackupex --user=root --password=root --defaults-file=/etc/my.cnf --database=webmail /root/bak  </span><br><span class="line"># 增量备份</span><br><span class="line">innobackupex --user=root --password=root --database=webmail --incremental --incremental-basedir=/root/bak/2016-12-08_17-47-56 /root/bak</span><br><span class="line"></span><br><span class="line"># 恢复</span><br><span class="line">innobackupex --user=root --password=root --defaults-file=/etc/my.cnf  --apply-log /root/bak/2016-12-08_17-47-56</span><br><span class="line">innobackupex --user=root --password=root --defaults-file=/etc/my.cnf  --copy-back /root/bak/2016-12-08_17-47-56</span><br><span class="line"># 增量恢复</span><br><span class="line">  见图一</span><br></pre></td></tr></table></figure>
<p><img src="http://img.sandseasoft.com/image/e/f2/b494b97e3a8104f41055f4a4063bb.png" alt></p>
<h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="http://blog.csdn.net/yongsheng0550/article/details/6682162" target="_blank" rel="noopener">http://blog.csdn.net/yongsheng0550/article/details/6682162</a></p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>store</tag>
      </tags>
  </entry>
  <entry>
    <title>Guide MySQL mysqldump/Binlog</title>
    <url>/2016/12/09/0169-Guide%20MySQL%20mysqldump-Binlog/</url>
    <content><![CDATA[<h3 id="mysqldump"><a href="#mysqldump" class="headerlink" title="mysqldump"></a>mysqldump</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 备份所有数据库</span><br><span class="line">mysqldump  --all-databases&gt;test.dump</span><br><span class="line"># 备份指定数据库</span><br><span class="line">mysqldump [--opt] [--no-data --databases] -uroot -p mt_dev &gt; /root/bak/mt_dev.dump</span><br><span class="line"># 跨主机备份</span><br><span class="line">mysqldump --host=host1 --opt sourceDb| mysql --host=host2 -C targetDb</span><br><span class="line"># 恢复数据库</span><br><span class="line">mysql [database name] &lt; [backup file name]</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysqldump -u root -pPASSWORD --all-databases | gzip &gt; /mnt/disk2/database_`date &apos;+%m-%d-%Y&apos;`.sql.gz</span><br></pre></td></tr></table></figure>
<h3 id="BinLog"><a href="#BinLog" class="headerlink" title="BinLog"></a>BinLog</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 启动binlog</span><br><span class="line">vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">bin-log=xxxx</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 查看</span><br><span class="line">cd /var/lib/mysql</span><br><span class="line"># 自动删除binlog</span><br><span class="line"># 通过binlog参数（expire_logs_days ）来实现mysql自动删除binlog</span><br><span class="line">mysql&gt; show binary logs;</span><br><span class="line">mysql&gt; show variables like &apos;expire_logs_days&apos;;</span><br><span class="line">mysql&gt; set global expire_logs_days=3;</span><br><span class="line"># 手工删除binlog</span><br><span class="line">mysql&gt; reset master;   //删除master的binlog</span><br><span class="line">mysql&gt; reset slave;    //删除slave的中继日志</span><br><span class="line">mysql&gt; purge master logs before &apos;2012-03-30 17:20:00&apos;;  //删除指定日期以前的日志索引中binlog日志文件</span><br><span class="line">mysql&gt; purge master logs to &apos;binlog.000002&apos;;   //删除指定日志文件的日志索引中binlog日志文件</span><br><span class="line"></span><br><span class="line"># 查看binlog</span><br><span class="line">show binlog events in &apos;mysql-bin.000002&apos;;</span><br><span class="line"></span><br><span class="line"># 远程binlog备份</span><br><span class="line">mysqlbinlog -u username -p password -hl-db1.dba.beta.cn6.qunar.com -P3306 \</span><br><span class="line">--read-from-remote-server --start-datetime=&apos;2013-09-10 23:00:00&apos; --stop-datetime=&apos;2013-09-10 23:30:00&apos; mysql-bin.000001 &gt; t.binlog</span><br></pre></td></tr></table></figure>
<h3 id="结合mysqldump和binlog做数据还原"><a href="#结合mysqldump和binlog做数据还原" class="headerlink" title="结合mysqldump和binlog做数据还原"></a>结合mysqldump和binlog做数据还原</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 本地库还原</span><br><span class="line">mysql -uroot -pPwd &lt; backup_sunday_1_PM.sql</span><br><span class="line"># 本地binlog还原</span><br><span class="line">mysqlbinlog --start-date=&quot;2005-04-20 10:01:00&quot; --stop-date=&quot;2005-04-20 10:05:00&quot; mysql-bin.000003 | mysql -uroot -pPwd </span><br><span class="line"># 把sql导出</span><br><span class="line">mysqlbinlog --start-date=&quot;2005-04-20 10:01:00&quot; --stop-date=&quot;2005-04-20 10:05:00&quot; mysql-bin.000003 &gt;/tmp/restore.sql</span><br></pre></td></tr></table></figure>
<p><img src="http://img.sandseasoft.com/image/e/4b/f2755584878df485a04b65fe8b0b6.png" alt></p>
<h3 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h3><p>这篇文章讲的很好<br><a href="http://www.cnblogs.com/feichexia/p/MysqlDataBackup.html" target="_blank" rel="noopener">http://www.cnblogs.com/feichexia/p/MysqlDataBackup.html</a><br><a href="https://my.oschina.net/u/1462678/blog/232723" target="_blank" rel="noopener">https://my.oschina.net/u/1462678/blog/232723</a></p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>未归档</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux crontab</title>
    <url>/2016/12/09/0170-Linux%20crontab/</url>
    <content><![CDATA[<h3 id="crontab-定时器使用"><a href="#crontab-定时器使用" class="headerlink" title="crontab 定时器使用"></a>crontab 定时器使用</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 服务重启</span><br><span class="line">service crond restart</span><br><span class="line"># 编辑、查询</span><br><span class="line">crontab -[e][l]</span><br><span class="line"># 日志查看</span><br><span class="line">tail -fn 200 /var/log/cron</span><br><span class="line"></span><br><span class="line">crontab -e</span><br><span class="line">*/1 * * * * sh /root/script/echo.sh</span><br><span class="line">0 1 * * * sh /root/script/backup.sh</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 测试</span><br><span class="line">echo &apos;hello&apos; &gt;&gt;/root/bak/xxxx`date &apos;+%Y%m%d&apos;`.test</span><br><span class="line"># 备份数据库</span><br><span class="line">/usr/bin/mysqldump -uroot -p123456 mt_demo &gt; /root/bak/mt_demo_`date +%Y%m%d`.bak</span><br><span class="line">/usr/bin/find /root/bak -mtime +7 -name &quot;*.*&quot; -exec rm -rf &#123;&#125; \;</span><br><span class="line"># 全局备份</span><br><span class="line">mysqldump -u root -pPASSWORD --all-databases | gzip &gt; /mnt/disk2/database_`date &apos;+%m-%d-%Y&apos;`.sql.gz</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>devops</tag>
      </tags>
  </entry>
  <entry>
    <title>SpyDebugger</title>
    <url>/2016/12/09/0171-SpyDebugger/</url>
    <content><![CDATA[<h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p>移动端远程调试</p>
<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cnpm install spy-debugger</span><br><span class="line">spy-debugger</span><br></pre></td></tr></table></figure>
<h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><h4 id="手机设置代理，端口如下"><a href="#手机设置代理，端口如下" class="headerlink" title="手机设置代理，端口如下"></a>手机设置代理，端口如下</h4><p><img src="http://img.sandseasoft.com/image/9/25/d37ca78121309cf8f4a2a7355a73e.png" alt></p>
<h4 id="页面调试"><a href="#页面调试" class="headerlink" title="页面调试"></a>页面调试</h4><ul>
<li>调试 weinre</li>
<li>抓包 anyproxy<br><img src="http://img.sandseasoft.com/image/8/42/2a71cb8dbfe6003e27dda865116e2.png" alt></li>
</ul>
<p>https协议抓包</p>
<ul>
<li>如果手机端，微信扫码，再用sarfi打开下载安装<br><img src="http://img.sandseasoft.com/image/f/a5/902d5666dc9b4957e7333c0e295fb.png" alt></li>
<li>如果mac端，keychain access允许<br><img src="http://img.sandseasoft.com/image/7/f3/f61baacfd264c830350dc23602efe.png" alt></li>
</ul>
<p>引用</p>
<ul>
<li><a href="https://github.com/alibaba/anyproxy/wiki/HTTPS%E7%9B%B8%E5%85%B3%E6%95%99%E7%A8%8B" target="_blank" rel="noopener">https://github.com/alibaba/anyproxy/wiki/HTTPS%E7%9B%B8%E5%85%B3%E6%95%99%E7%A8%8B</a></li>
<li><a href="https://github.com/wuchangming/spy-debugger" target="_blank" rel="noopener">https://github.com/wuchangming/spy-debugger</a></li>
</ul>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>nodejs</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL  Cluster</title>
    <url>/2016/12/14/0172-MySQL%20%20Cluster/</url>
    <content><![CDATA[<p>三种<br>MGB<br>galera cluster<br>Percona XtraDB Cluster</p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>未归档</tag>
      </tags>
  </entry>
  <entry>
    <title>Crawler  Phantomjs</title>
    <url>/2016/12/14/0173-Crawler%20%20Phantomjs/</url>
    <content><![CDATA[<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><ul>
<li><a href="http://phantomjs.org/download.html" target="_blank" rel="noopener">http://phantomjs.org/download.html</a></li>
<li><a href="http://phantomjs.org/api/" target="_blank" rel="noopener">http://phantomjs.org/api/</a></li>
<li><a href="http://phantomjs.org/examples/" target="_blank" rel="noopener">http://phantomjs.org/examples/</a></li>
</ul>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">var page = require(&apos;webpage&apos;).create(),</span><br><span class="line">        system = require(&apos;system&apos;),</span><br><span class="line">            address;</span><br><span class="line">if (system.args.length === 1) &#123;</span><br><span class="line">        phantom.exit(1);</span><br><span class="line"></span><br><span class="line">&#125; else &#123;</span><br><span class="line">        address = system.args[1];</span><br><span class="line">        page.open(address, function (status) &#123;</span><br><span class="line">                    console.log(page.content);</span><br><span class="line"></span><br><span class="line"># 设置画布大小</span><br><span class="line">page.viewportSize = &#123; width: 1440, height: 900 &#125;;</span><br><span class="line"></span><br><span class="line"># 打印png</span><br><span class="line">page.render(&quot;demo.png&quot;);</span><br><span class="line"></span><br><span class="line"># 打印pdf</span><br><span class="line">     page.paperSize = &#123; format: &apos;A4&apos;, </span><br><span class="line">              orientation: &apos;portrait&apos;, </span><br><span class="line">              border: &apos;1cm&apos; &#125;;</span><br><span class="line">        page.render(&quot;demo.pdf&quot;);</span><br><span class="line"></span><br><span class="line"># 加载自定js</span><br><span class="line">       page.includeJs(&quot;http://code.jquery.com/jquery-1.10.1.min.js&quot;, </span><br><span class="line">             function() &#123;</span><br><span class="line">                  page.evaluate(function() &#123;</span><br><span class="line">                  $(&apos;# Header1_HeaderTitle&apos;).html(&apos;My PhantomJS&apos;);</span><br><span class="line">            &#125;);</span><br><span class="line">                            phantom.exit();</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">./phantomjs/bin/phantomjs test.js https://zuoyun.me</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>nodejs</tag>
      </tags>
  </entry>
  <entry>
    <title>Server Gogs</title>
    <url>/2016/12/14/0174-Server%20Gogs/</url>
    <content><![CDATA[<h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p>自己的乞丐服务器装不了confluence或者gitlab，都是内存大户，看上了这个gogs，go语言内存还是控制的漂亮的，空转启动30m内存左右</p>
<h3 id="官网"><a href="#官网" class="headerlink" title="官网"></a>官网</h3><p><a href="https://gogs.io/" target="_blank" rel="noopener">https://gogs.io/</a></p>
<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum install git</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#  Pull image from Docker Hub.</span><br><span class="line">$ docker pull gogs/gogs</span><br><span class="line"></span><br><span class="line">#  Create local directory for volume.</span><br><span class="line">$ mkdir -p /var/gogs</span><br><span class="line"></span><br><span class="line">#  Use `docker run` for the first time.</span><br><span class="line">$ docker run --name=gogs -p 10022:22 -p 10080:3000 -v /var/gogs:/data gogs/gogs</span><br><span class="line"></span><br><span class="line">#  Use `docker start` if you have stopped it.</span><br><span class="line">$ docker start gogs</span><br></pre></td></tr></table></figure>
<p>PS 新版本有 bug，换0.9.9可以</p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>devops</tag>
      </tags>
  </entry>
  <entry>
    <title>HTTPS letencrypt&#39; certbot</title>
    <url>/2016/12/14/0175-HTTPS%20letencrypt&#39;%20certbot/</url>
    <content><![CDATA[<p>letencrypt的证书续签服务</p>
<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>根据url路由访问脚本生成的校验文件，通过自动签名证书</p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>1 . 配置nginx，设置访问路径<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">server&#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name git.tech84.com;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">location ^~ /.well-known/acme-challenge/ &#123;</span><br><span class="line">   default_type &quot;text/plain&quot;;</span><br><span class="line">   root     /usr/local/openresty/nginx/html;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">location = /.well-known/acme-challenge/ &#123;</span><br><span class="line">   return 404;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    rewrite ^(.*)$  https://$host$1 permanent;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server&#123;</span><br><span class="line">    server_name git.tech84.com;</span><br><span class="line">     listen 443 ssl;</span><br><span class="line"></span><br><span class="line">    ssl_certificate /etc/letsencrypt/live/git.tech84.com/fullchain.pem;</span><br><span class="line">        ssl_certificate_key /etc/letsencrypt/live/git.tech84.com/privkey.pem;</span><br><span class="line">        ssl_trusted_certificate /etc/letsencrypt/live/git.tech84.com/chain.pem;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        proxy_pass http://localhost:10080;</span><br><span class="line">        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">        proxy_set_header Host $http_host;</span><br><span class="line">        proxy_set_header X-Forwarded-Proto $scheme;</span><br><span class="line">        proxy_buffering off;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>2 . 验证url路径，自动签名<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 首次签名</span><br><span class="line">certbot certonly --webroot -w /usr/local/openresty/nginx/html -d git.tech84.com  -d tech84.com -d app.tech84.com -d wiki.tech84.com  -d repo.tech84.com </span><br><span class="line"># 手动续签</span><br><span class="line">certbot renew --dry-run</span><br></pre></td></tr></table></figure></p>
<p>3 . 证书保存路径<br><code>/root/cert</code><br><code>/etc/letsencrypt/live</code></p>
<p>4 . 自动续签脚本<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">crontabe -e</span><br><span class="line"></span><br><span class="line">30 2 * * 1 /usr/bin/certbot renew  &gt;&gt; /var/log/le-renew.log</span><br></pre></td></tr></table></figure></p>
<h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><p><a href="https://github.com/certbot/certbot" target="_blank" rel="noopener">https://github.com/certbot/certbot</a><br><a href="https://certbot.eff.org/" target="_blank" rel="noopener">https://certbot.eff.org/</a><br><a href="https://segmentfault.com/a/1190000005797776" target="_blank" rel="noopener">https://segmentfault.com/a/1190000005797776</a></p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>devops</tag>
      </tags>
  </entry>
  <entry>
    <title>Mr .Le  tech  wxopen&#39;app</title>
    <url>/2016/12/15/0176-Mr%20.Le%20%20tech%20%20wxopen&#39;app/</url>
    <content><![CDATA[<blockquote>
<p>乐哥教我写小程序，记录如下</p>
</blockquote>
<h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><p>小程序分三个角色</p>
<ul>
<li>管理者</li>
<li>开发者</li>
<li>体验者</li>
</ul>
<p>三个分支版本：开发版本，审核版本，线上版本</p>
<p>实际上本地IDE只提供网页调试／小程序调试功能，代码共享还是走git</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul>
<li><a href="https://mp.weixin.qq.com/debug/wxadoc/dev/demo.html" target="_blank" rel="noopener">https://mp.weixin.qq.com/debug/wxadoc/dev/demo.html</a></li>
<li><a href="https://mp.weixin.qq.com/debug/wxadoc/dev/" target="_blank" rel="noopener">https://mp.weixin.qq.com/debug/wxadoc/dev/</a></li>
<li><a href="https://mp.weixin.qq.com/debug/wxadoc/dev/api/api-network.html" target="_blank" rel="noopener">https://mp.weixin.qq.com/debug/wxadoc/dev/api/api-network.html</a></li>
</ul>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>nodejs</tag>
      </tags>
  </entry>
  <entry>
    <title>OLAP Datax</title>
    <url>/2016/12/15/0177-OLAP%20Datax/</url>
    <content><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>各种数据迁移，ETL</p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><ul>
<li><p>安装</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tar zxvf datax.tar.gz</span><br><span class="line">sudo chmod -R 755 &#123;YOUR_DATAX_HOME&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>生成传输脚本文件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 生成传输脚本</span><br><span class="line">python datax.py -r mysqlreader -w mysqlwriter</span><br></pre></td></tr></table></figure>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;job&quot;: &#123;</span><br><span class="line">        &quot;content&quot;: [</span><br><span class="line">            &#123;</span><br><span class="line">                &quot;reader&quot;: &#123;</span><br><span class="line">                    &quot;name&quot;: &quot;mysqlreader&quot;, </span><br><span class="line">                    &quot;parameter&quot;: &#123;</span><br><span class="line">                        &quot;column&quot;: [], </span><br><span class="line">                        &quot;connection&quot;: [</span><br><span class="line">                            &#123;</span><br><span class="line">                                &quot;jdbcUrl&quot;: [], </span><br><span class="line">                                &quot;table&quot;: []</span><br><span class="line">                            &#125;</span><br><span class="line">                        ], </span><br><span class="line">                        &quot;password&quot;: &quot;&quot;, </span><br><span class="line">                        &quot;username&quot;: &quot;&quot;, </span><br><span class="line">                        &quot;where&quot;: &quot;&quot;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, </span><br><span class="line">                &quot;writer&quot;: &#123;</span><br><span class="line">                    &quot;name&quot;: &quot;mysqlwriter&quot;, </span><br><span class="line">                    &quot;parameter&quot;: &#123;</span><br><span class="line">                        &quot;column&quot;: [], </span><br><span class="line">                        &quot;connection&quot;: [</span><br><span class="line">                            &#123;</span><br><span class="line">                                &quot;jdbcUrl&quot;: &quot;&quot;, </span><br><span class="line">                                &quot;table&quot;: []</span><br><span class="line">                            &#125;</span><br><span class="line">                        ], </span><br><span class="line">                        &quot;password&quot;: &quot;&quot;, </span><br><span class="line">                        &quot;preSql&quot;: [], </span><br><span class="line">                        &quot;session&quot;: [], </span><br><span class="line">                        &quot;username&quot;: &quot;&quot;, </span><br><span class="line">                        &quot;writeMode&quot;: &quot;&quot;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        ], </span><br><span class="line">        &quot;setting&quot;: &#123;</span><br><span class="line">            &quot;speed&quot;: &#123;</span><br><span class="line">                &quot;channel&quot;: &quot;&quot;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>定时器<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">0,10,20,35,44,50 * * * *  python /home/admin/datax3/bin/datax.py /home/admin/mysql2odps.json  &gt;&gt;/home/hanfa.shf/log.`date +\%Y\%m\%d\%H\%M\%S`  2&gt;&amp;1</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><ul>
<li><a href="https://github.com/alibaba/DataX" target="_blank" rel="noopener">https://github.com/alibaba/DataX</a></li>
<li><a href="https://github.com/alibaba/DataX/wiki/Quick-Start" target="_blank" rel="noopener">https://github.com/alibaba/DataX/wiki/Quick-Start</a></li>
<li><a href="https://github.com/alibaba/DataX/blob/master/mysqlwriter/doc/mysqlwriter.md" target="_blank" rel="noopener">https://github.com/alibaba/DataX/blob/master/mysqlwriter/doc/mysqlwriter.md</a></li>
</ul>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>Virtualization Guide Hyper-V</title>
    <url>/2016/12/20/0179-Virtualization%20Guide%20Hyper-V/</url>
    <content><![CDATA[<p>今天尝试了下WindowServer，发现30年河东30年河西，Hyper-v真是强大。</p>
<p>用户管理</p>
<p>远程连接</p>
<p>Hyper-V</p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>未归档</tag>
      </tags>
  </entry>
  <entry>
    <title>Maven git-commit-id-plugin</title>
    <url>/2016/12/20/0180-Maven%20git-commit-id-plugin/</url>
    <content><![CDATA[<h2 id="地址"><a href="#地址" class="headerlink" title="地址"></a>地址</h2><p><a href="https://github.com/ktoso/maven-git-commit-id-plugin" target="_blank" rel="noopener">https://github.com/ktoso/maven-git-commit-id-plugin</a> </p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;plugin&gt;</span><br><span class="line">    &lt;groupId&gt;pl.project13.maven&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;git-commit-id-plugin&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;2.1.5&lt;/version&gt;</span><br><span class="line">    &lt;executions&gt;</span><br><span class="line">        &lt;execution&gt;</span><br><span class="line">            &lt;goals&gt;</span><br><span class="line">                &lt;goal&gt;revision&lt;/goal&gt;</span><br><span class="line">            &lt;/goals&gt;</span><br><span class="line">        &lt;/execution&gt;</span><br><span class="line">    &lt;/executions&gt;</span><br><span class="line">    &lt;configuration&gt;</span><br><span class="line">        &lt;!--日期格式;默认值:dd.MM.yyyy &apos;@&apos; HH:mm:ss z;--&gt;</span><br><span class="line">        &lt;dateFormat&gt;yyyyMMddHHmmss&lt;/dateFormat&gt;</span><br><span class="line">        &lt;!--,构建过程中,是否打印详细信息;默认值:false;--&gt;</span><br><span class="line">        &lt;verbose&gt;true&lt;/verbose&gt;</span><br><span class="line">        &lt;!-- &quot;.git&quot;文件路径;默认值:$&#123;project.basedir&#125;/.git; --&gt;</span><br><span class="line">        &lt;dotGitDirectory&gt;$&#123;project.basedir&#125;/.git&lt;/dotGitDirectory&gt;</span><br><span class="line">        &lt;!--若项目打包类型为pom,是否取消构建;默认值:true;--&gt;</span><br><span class="line">        &lt;skipPoms&gt;false&lt;/skipPoms&gt;</span><br><span class="line">        &lt;!--是否生成&quot;git.properties&quot;文件;默认值:false;--&gt;</span><br><span class="line">        &lt;generateGitPropertiesFile&gt;true&lt;/generateGitPropertiesFile&gt;</span><br><span class="line">        &lt;!--指定&quot;git.properties&quot;文件的存放路径(相对于$&#123;project.basedir&#125;的一个路径);--&gt;</span><br><span class="line">        &lt;generateGitPropertiesFilename&gt;src/main/resources/git/git.properties&lt;/generateGitPropertiesFilename&gt;</span><br><span class="line">        &lt;!--&quot;.git&quot;文件夹未找到时,构建是否失败;若设置true,则构建失败;若设置false,则跳过执行该目标;默认值:true;--&gt;</span><br><span class="line">        &lt;failOnNoGitDirectory&gt;true&lt;/failOnNoGitDirectory&gt;</span><br><span class="line"></span><br><span class="line">        &lt;gitDescribe&gt;</span><br><span class="line">            &lt;!--是否生成描述属性--&gt;</span><br><span class="line">            &lt;skip&gt;false&lt;/skip&gt;</span><br><span class="line">            &lt;!--提交操作未发现tag时,仅打印提交操作ID,--&gt;</span><br><span class="line">            &lt;always&gt;false&lt;/always&gt;</span><br><span class="line">            &lt;!--提交操作ID显式字符长度,最大值为:40;默认值:7;</span><br><span class="line">                0代表特殊意义;后面有解释;</span><br><span class="line">            --&gt;</span><br><span class="line">            &lt;abbrev&gt;7&lt;/abbrev&gt;</span><br><span class="line">            &lt;!--构建触发时,代码有修改时(即&quot;dirty state&quot;),添加指定后缀;默认值:&quot;&quot;;--&gt;</span><br><span class="line">            &lt;dirty&gt;-dirty&lt;/dirty&gt;</span><br><span class="line">            &lt;!--always print using the &quot;tag-commits_from_tag-g_commit_id-maybe_dirty&quot; format, even if &quot;on&quot; a tag.</span><br><span class="line">                The distance will always be 0 if you&apos;re &quot;on&quot; the tag.</span><br><span class="line">            --&gt;</span><br><span class="line">            &lt;forceLongFormat&gt;false&lt;/forceLongFormat&gt;</span><br><span class="line">        &lt;/gitDescribe&gt;</span><br><span class="line">    &lt;/configuration&gt;</span><br><span class="line">&lt;/plugin&gt;</span><br></pre></td></tr></table></figure>
<h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><p><a href="http://www.tuicool.com/articles/JJry2a" target="_blank" rel="noopener">http://www.tuicool.com/articles/JJry2a</a></p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>4.0 springboot Bean Validation(JSR303)</title>
    <url>/2016/12/21/0181-4.0%20springboot%20Bean%20Validation(JSR303)/</url>
    <content><![CDATA[<h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p>bean数据校验注解标准，具体实现是hibernate-validator，springmvc也有相关支持，method(@Vaild User user)</p>
<h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><ul>
<li><p>依赖</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">       &lt;dependency&gt;</span><br><span class="line">		&lt;groupId&gt;org.hibernate&lt;/groupId&gt;</span><br><span class="line">	&lt;artifactId&gt;hibernate-validator&lt;/artifactId&gt;</span><br><span class="line">	&lt;version&gt;5.1.3.Final&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">	&lt;groupId&gt;javax.el&lt;/groupId&gt;</span><br><span class="line">	&lt;artifactId&gt;javax.el-api&lt;/artifactId&gt;</span><br><span class="line">	&lt;version&gt;2.2.4&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">	&lt;groupId&gt;org.glassfish.web&lt;/groupId&gt;</span><br><span class="line">	&lt;artifactId&gt;javax.el&lt;/artifactId&gt;</span><br><span class="line">	&lt;version&gt;2.2.4&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>显示调用</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ValidatorFactory factory = Validation.buildDefaultValidatorFactory();</span><br><span class="line">Validator validator = factory.getValidator();</span><br><span class="line">Set&lt;ConstraintViolation&lt;AppUser&gt;&gt; violations = validator.validate(appUser);</span><br><span class="line"></span><br><span class="line">for (ConstraintViolation&lt;AppUser&gt; violation : violations) &#123;</span><br><span class="line">  System.out.println(violation.getMessage());</span><br><span class="line">  System.out.println(violation.getPropertyPath().toString());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>SpringMVC支持</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public String login(@Valid User user, BindingResult br, Map&lt;String, Object&gt; model) &#123;   </span><br><span class="line">    if (br.hasErrors()) &#123;   </span><br><span class="line">        return &quot;login&quot;;   </span><br><span class="line">    &#125;   </span><br><span class="line">    return &quot;redirect:/salary/list.do&quot;;   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>相关注解</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@Max(value=1,message=&quot;长度不匹配&quot;)</span><br><span class="line">@Pattern(regexp = &quot;\\W+&quot;,message = &quot;不匹配纯英文&quot;)</span><br><span class="line">@AssertTrue</span><br><span class="line">@Digits(integer = 6,fraction = 2,message = &quot;数据不合法&quot;)</span><br><span class="line">@Future</span><br><span class="line">@NotNull</span><br><span class="line">@Size(max = 4,min = 4,message = &quot;长度不符合要求&quot;)</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h3><ul>
<li><a href="https://www.jcp.org/en/jsr/detail?id=303" target="_blank" rel="noopener">https://www.jcp.org/en/jsr/detail?id=303</a></li>
<li><a href="http://www.ibm.com/developerworks/cn/java/j-lo-jsr303/" target="_blank" rel="noopener">http://www.ibm.com/developerworks/cn/java/j-lo-jsr303/</a></li>
<li><a href="http://blog.csdn.net/generalyy0/article/details/7019521" target="_blank" rel="noopener">http://blog.csdn.net/generalyy0/article/details/7019521</a></li>
</ul>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>Crawler pyspider</title>
    <url>/2017/01/03/0182-Crawler%20pyspider/</url>
    <content><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>快速爬虫</p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>pip install pyspider<br>pyspider -c conf.json</p>
<ol>
<li>create script</li>
<li>set running </li>
<li>run</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;taskdb&quot;: &quot;mysql+taskdb://root:123456@172.16.1.13:3306/crawler&quot;,</span><br><span class="line">  &quot;projectdb&quot;: &quot;mysql+projectdb://root:123456@172.16.1.13:3306/crawler&quot;,</span><br><span class="line">  &quot;resultdb&quot;: &quot;mysql+resultdb://root:123456@172.16.1.13:3306/crawler&quot;</span><br><span class="line">  &quot;webui&quot;: &#123;</span><br><span class="line">    &quot;username&quot;: &quot;admin&quot;,</span><br><span class="line">    &quot;password&quot;: &quot;admin&quot;,</span><br><span class="line">    &quot;need-auth&quot;: true</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">## 如果有数据表缺陷问题</span><br><span class="line">ALTER TABLE xxxx ADD result varchar(2024) default &apos;&#123;&#125;&apos;</span><br></pre></td></tr></table></figure>
<h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">##  爬取回调</span><br><span class="line">self.crawl(&apos;http://scrapy.org/&apos;, callback=self.index_page)</span><br><span class="line">##  解析jquery</span><br><span class="line">response.doc(&apos;a[href^=&quot;http&quot;]&apos;).items()</span><br></pre></td></tr></table></figure>
<p>重写result方法，存储至mysql<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">def on_result(self, result):</span><br><span class="line">    # print result</span><br><span class="line">    if not result or not result[&apos;title&apos;]:</span><br><span class="line">        return</span><br><span class="line">    sql = SQL()</span><br><span class="line">    sql.replace(&apos;info&apos;,**result)</span><br></pre></td></tr></table></figure></p>
<p>PS 高并发写会锁表，这个有点麻烦，注意log</p>
<h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><p><a href="https://github.com/binux/pyspider" target="_blank" rel="noopener">https://github.com/binux/pyspider</a><br><a href="http://docs.pyspider.org/en/latest/" target="_blank" rel="noopener">http://docs.pyspider.org/en/latest/</a></p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>Maven Plugin Build</title>
    <url>/2017/01/04/0183-Maven%20Plugin%20Build/</url>
    <content><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>  有时候要自己设计一个maven插件</p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>  注意：</p>
<ul>
<li>老版本的maven支持注释里面@goal，并不支持@Mojo注解，导致编译错误，在编译maven plugin的时候使用最新的maven版本（3.3.x&gt;）</li>
<li>插件命名方法  xxxx-maven-plugin </li>
</ul>
<p>一个合理的pom.xml<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot;</span><br><span class="line">         xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span><br><span class="line">         xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;</span><br><span class="line">    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;</span><br><span class="line"></span><br><span class="line">    &lt;groupId&gt;com.tech84&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;scaffold-maven-plugin&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;2.1-SNAPSHOT&lt;/version&gt;</span><br><span class="line">    &lt;packaging&gt;maven-plugin&lt;/packaging&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &lt;description&gt;</span><br><span class="line">        脚手架，项目生成器</span><br><span class="line">    &lt;/description&gt;</span><br><span class="line"></span><br><span class="line">    &lt;name&gt;tech84-scaffold&lt;/name&gt;</span><br><span class="line">    &lt;url&gt;http://maven.apache.org&lt;/url&gt;</span><br><span class="line"></span><br><span class="line">    &lt;properties&gt;</span><br><span class="line">        &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt;</span><br><span class="line">    &lt;/properties&gt;</span><br><span class="line"></span><br><span class="line">    &lt;dependencies&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.apache.maven&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;maven-plugin-api&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;3.0&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- dependencies to annotations --&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.apache.maven.plugin-tools&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;maven-plugin-annotations&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;3.4&lt;/version&gt;</span><br><span class="line">            &lt;scope&gt;provided&lt;/scope&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">    &lt;/dependencies&gt;</span><br><span class="line"></span><br><span class="line">    &lt;distributionManagement&gt;</span><br><span class="line">        &lt;snapshotRepository&gt;</span><br><span class="line">            &lt;id&gt;snapshots&lt;/id&gt;</span><br><span class="line">            &lt;url&gt;http://172.16.1.14:8081/nexus/content/repositories/snapshots&lt;/url&gt;</span><br><span class="line">        &lt;/snapshotRepository&gt;</span><br><span class="line">    &lt;/distributionManagement&gt;</span><br><span class="line"></span><br><span class="line">&lt;/project&gt;</span><br></pre></td></tr></table></figure></p>
<p>继承AbstractMojo的一个类<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@Mojo(name = &quot;drive&quot;)</span><br><span class="line">public class Car extends AbstractMojo &#123;</span><br><span class="line"></span><br><span class="line">  @Parameter(defaultValue = &quot;8080&quot;)</span><br><span class="line">  private Integer port;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  public void execute() throws MojoExecutionException, MojoFailureException &#123;</span><br><span class="line">    getLog().info(&quot;hello&quot;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>最后 clean package deploy 可以正常使用<br><img src="http://img.sandseasoft.com/201701041283450C8B04F-2D37-4938-8DCE-043E9F77A2A1.png" alt></p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul>
<li><a href="http://maven.apache.org/guides/plugin/guide-java-plugin-development.html" target="_blank" rel="noopener">http://maven.apache.org/guides/plugin/guide-java-plugin-development.html</a>  </li>
</ul>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>Crawler about</title>
    <url>/2017/01/06/0184-Crawler%20about/</url>
    <content><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>爬虫设计，主要是分【控制器】，【爬行节点】，【代理池】</p>
<ul>
<li>列表爬取-》详情爬取-》翻页</li>
<li>任务派发-》领取任务-》详情爬取</li>
<li>请求失败-》重试-》判断ip被ban-》更换代理</li>
</ul>
<h4 id="反爬虫机制"><a href="#反爬虫机制" class="headerlink" title="反爬虫机制"></a>反爬虫机制</h4><ul>
<li>频度判断</li>
<li>IP判断</li>
<li>会员积分制</li>
</ul>
<h4 id="爬虫IP池策略"><a href="#爬虫IP池策略" class="headerlink" title="爬虫IP池策略"></a>爬虫IP池策略</h4><ul>
<li>ADSL</li>
<li>squid3.x 透明代理</li>
<li>爬虫代理池</li>
</ul>
<h4 id="爬虫工具"><a href="#爬虫工具" class="headerlink" title="爬虫工具"></a>爬虫工具</h4><ul>
<li>基本httpclient请求</li>
<li>webdriver</li>
<li>phantomjs webkit内核</li>
</ul>
<h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><ul>
<li>IPProxyPool-稳定代理池工具<br><a href="https://github.com/qiyeboy/IPProxyPool" target="_blank" rel="noopener">https://github.com/qiyeboy/IPProxyPool</a></li>
<li>HttpRequest-Http 请求工具<br><a href="https://github.com/kevinsawicki/http-request" target="_blank" rel="noopener">https://github.com/kevinsawicki/http-request</a><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;com.github.kevinsawicki&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;http-request&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;6.0&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">    HttpRequest request = HttpRequest</span><br><span class="line">        .post(</span><br><span class="line">            &quot;http://api.jgjapp.com/weixin/findworkerdetail&quot;)</span><br><span class="line">//        .useProxy(&quot;0.0.0.0&quot;, 9888)</span><br><span class="line">        .header(&quot;cookie&quot;, &quot;PHPSESSID=e3l5heh3o756k1aq8nq8sg0j34; Authorization=I+2d517093405fc6e01b4a355df9520fd3&quot;)</span><br><span class="line">        .header(&quot;proxy-connection&quot;, &quot;keep-alive&quot;)</span><br><span class="line">        .header(&quot;accept&quot;, &quot;*/*&quot;)</span><br><span class="line">        .header(&quot;user-agent&quot;, &quot;mix/2.0.3 (iPhone; iOS 10.2; Scale/2.00)&quot;)</span><br><span class="line">        .header(&quot;accept-language&quot;, &quot;zh-Hans-CN;q=1&quot;)</span><br><span class="line">        .header(&quot;authorization&quot;, &quot;I 2d517093405fc6e01b4a355df9520fd3&quot;)</span><br><span class="line">        .header(&quot;content-length&quot;, &quot;43&quot;)</span><br><span class="line">        .send(&quot;uid=&quot; + uid + &quot;&amp;pg=1&amp;role_type=2&amp;platform=w&amp;os=I&amp;token=2d517093405fc6e01b4a355df9520fd3&quot;);</span><br></pre></td></tr></table></figure>
<ul>
<li><p>Joup-类似JQuery节点查询工具<br><a href="https://github.com/jhy/jsoup" target="_blank" rel="noopener">https://github.com/jhy/jsoup</a><br><a href="http://www.open-open.com/jsoup/" target="_blank" rel="noopener">http://www.open-open.com/jsoup/</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.jsoup&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;jsoup&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;1.10.2&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>Webmagic-爬虫框架<br><a href="http://webmagic.io/" target="_blank" rel="noopener">http://webmagic.io/</a><br><a href="https://github.com/code4craft/webmagic" target="_blank" rel="noopener">https://github.com/code4craft/webmagic</a></p>
</li>
</ul>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>LogTraceing PinPoint/Zipkin</title>
    <url>/2017/01/09/0185-LogTraceing%20PinPoint-Zipkin/</url>
    <content><![CDATA[<p>Pinpoint的特点如下:<br>分布式事务跟踪，跟踪跨分布式应用的消息<br>自动检测应用拓扑，帮助你搞清楚应用的架构<br>水平扩展以便支持大规模服务器集群<br>提供代码级别的可见性以便轻松定位失败点和瓶颈<br>使用字节码增强技术，添加新功能而无需修改代码<br>安装探针不需要修改哪怕一行代码及trace server端部署简单，支持hdfs存储<br>具有简单的阀值触发报警功能<br>移植性比较强的，会比较讨人喜欢（相比cat）<br>插件化功能可扩展（<a href="https://github.com/naver/pinpoint/wiki/Pinpoint-Plugin-Developer-Guide）" target="_blank" rel="noopener">https://github.com/naver/pinpoint/wiki/Pinpoint-Plugin-Developer-Guide）</a></p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>未归档</tag>
      </tags>
  </entry>
  <entry>
    <title>Store Hbase/Phoenix</title>
    <url>/2017/01/09/0186-Store%20Hbase-Phoenix/</url>
    <content><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p><img src="http://img.sandseasoft.com/image/8/27/e8ceb60d99b8c659065515c9a01c4.png" alt></p>
<p>基于HDFS的NoSQL数据库<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 启动 16010 端口</span><br><span class="line">export JAVA_HOME=xxxx</span><br><span class="line">./bin/hbase start</span><br></pre></td></tr></table></figure></p>
<h2 id="最佳实践"><a href="#最佳实践" class="headerlink" title="最佳实践"></a>最佳实践</h2><p>挂载Phoenix，用Squirrel GUI进行GUI查询</p>
<p>To install a pre-built phoenix, use these directions:</p>
<ul>
<li>Download and expand the latest phoenix-[version]-bin.tar.</li>
<li>Add the phoenix-[version]-server.jar to the classpath of all HBase region server and master and remove any previous version. An easy way to do this is to copy it into the HBase lib directory (use phoenix-core-[version].jar for Phoenix 3.x)</li>
<li>Restart HBase.</li>
<li>Add the phoenix-[version]-client.jar to the classpath of any Phoenix client.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># loading Data</span><br><span class="line">./sqlline.py localhost ../examples/stock_symbol.sql</span><br><span class="line">.psql.py localhost ../examples/web_stat.sql ../examples/web_stat.csv ../examples/web_stat_queries.sql</span><br><span class="line"></span><br><span class="line"># query Data</span><br><span class="line">./sqlline.py localhost</span><br><span class="line">!tables</span><br><span class="line">!exit</span><br><span class="line"></span><br><span class="line">select * from xx;</span><br></pre></td></tr></table></figure>
<p>Squirrel使用，增加一个Driver，增加一个Ailaes</p>
<h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><p><a href="http://hbase.apache.org/" target="_blank" rel="noopener">http://hbase.apache.org/</a><br><a href="http://phoenix.apache.org/" target="_blank" rel="noopener">http://phoenix.apache.org/</a><br><a href="http://phoenix.apache.org/installation.html" target="_blank" rel="noopener">http://phoenix.apache.org/installation.html</a><br><a href="http://www.squirrelsql.org/" target="_blank" rel="noopener">http://www.squirrelsql.org/</a><br><a href="http://www.cnblogs.com/yyhh/p/6106472.html" target="_blank" rel="noopener">http://www.cnblogs.com/yyhh/p/6106472.html</a></p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>devops</tag>
        <tag>store</tag>
      </tags>
  </entry>
  <entry>
    <title>Maven  upload</title>
    <url>/2017/01/11/0187-Maven%20%20upload/</url>
    <content><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>maven的开源库上传到中央仓库</p>
<h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p><a href="https://issues.sonatype.org" target="_blank" rel="noopener">https://issues.sonatype.org</a><br>注册一个账号</p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>未归档</tag>
      </tags>
  </entry>
  <entry>
    <title>SQL Guide</title>
    <url>/2017/01/11/0188-SQL%20Guide/</url>
    <content><![CDATA[<h1 id="历史"><a href="#历史" class="headerlink" title="历史"></a>历史</h1><ul>
<li>文档型数据库-&gt;关系型数据库(SQL92)</li>
<li>Db2 Orcale SyBase SQLServer</li>
<li>PostgreSQL MySQL </li>
<li>mariaDB SQLite</li>
<li>greenplum</li>
</ul>
<h1 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h1><ul>
<li>mysql -&gt;  数据库操作系统+ 数据库（表）</li>
<li>关系 笛卡尔乘积的子集</li>
<li>关系代数表达式  并(∪)、差(-)、笛卡尔积(×)、投影(σ)、选择(π)</li>
<li>主码、候选码 PK</li>
<li>主属性、非主属性</li>
<li>范式 NF<br><img src="http://img.sandseasoft.com/20180625152986120135524.png" alt="20180625152986120135524.png"><br><img src="http://img.sandseasoft.com/20180630153033611581177.png" alt="20180630153033611581177.png"></li>
</ul>
<h1 id="算法"><a href="#算法" class="headerlink" title="算法"></a>算法</h1><ul>
<li>排序算法</li>
<li>连接算法<ul>
<li>循环嵌套算法</li>
<li>哈希连接算法</li>
<li>排序合并算法</li>
</ul>
</li>
<li>聚组算法</li>
<li>去重算法</li>
</ul>
<h2 id="数据库操作系统"><a href="#数据库操作系统" class="headerlink" title="数据库操作系统"></a>数据库操作系统</h2><p>ACID（Atomicity/Consistency/Isolation/Durability)</p>
<p>1.DML column-&gt;update /insert /delete<br>2.DDL table-&gt;create/drop/alter/desc<br>3.DCL ACL-&gt; grant<br>4.DQL query-&gt;select from group by<br>5.DTL transaction -&gt; set autocommit=0; commit; rollback;</p>
<h2 id="数据库（表）"><a href="#数据库（表）" class="headerlink" title="数据库（表）"></a>数据库（表）</h2><p>database -&gt; table -&gt; column -&gt; index （Btree+）</p>
<h1 id="范式"><a href="#范式" class="headerlink" title="范式"></a>范式</h1><ul>
<li>一范式  必有主码，数据唯一性 去除重复数据</li>
<li>二范式  去除部分依赖</li>
<li>三范式  去除传递依赖</li>
</ul>
<p>一般数据库做到二范式足以，优秀的数据库应该在低冗余，部分特殊场景可以通过冗余数据提升查询能力</p>
<h1 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h1><ul>
<li>聚合函数 sum/count/avg</li>
<li>内嵌函数 dateformat(now(),”%Y-%m-%d”)</li>
<li>DQL语法 group by having xxx&gt;0 limit 0,100</li>
</ul>
<h1 id="周边"><a href="#周边" class="headerlink" title="周边"></a>周边</h1><p>navicat for premium</p>
<h1 id="学习书籍"><a href="#学习书籍" class="headerlink" title="学习书籍"></a>学习书籍</h1><ul>
<li>数据库系统概论</li>
<li>数据库系统基础课程</li>
<li>数据库系统实现<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><a href="https://blog.csdn.net/liujiangce/article/details/80119795" target="_blank" rel="noopener">https://blog.csdn.net/liujiangce/article/details/80119795</a><br><a href="https://blog.csdn.net/u011467176/article/details/52578295" target="_blank" rel="noopener">https://blog.csdn.net/u011467176/article/details/52578295</a></li>
</ul>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>store</tag>
      </tags>
  </entry>
  <entry>
    <title>Golang 学习</title>
    <url>/2017/01/11/0191-Golang%20%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><ul>
<li>内存控制良好</li>
<li>性能高</li>
<li>天生并发优势</li>
<li>支持编译机器码，无依赖</li>
</ul>
<h1 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">// 程序运行的入口是包 main </span><br><span class="line">package main</span><br><span class="line">// 导入</span><br><span class="line">import &quot;fmt&quot;</span><br><span class="line">// 函数声明</span><br><span class="line">func main() &#123;</span><br><span class="line">	fmt.Println(&quot;Hello&quot;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>GOPATH 指向 go get下载包目录</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 格式化</span><br><span class="line">go fmt</span><br><span class="line"># 构建编译</span><br><span class="line">go build -o fileName main.go</span><br><span class="line"># 获取库</span><br><span class="line">go get -u xxxx</span><br></pre></td></tr></table></figure>
<h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><ul>
<li>IDE idea+golang plugin</li>
</ul>
<h1 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h1><p><a href="https://golang.org/" target="_blank" rel="noopener">https://golang.org/</a><br><a href="https://tour.go-zh.org/welcome/1" target="_blank" rel="noopener">https://tour.go-zh.org/welcome/1</a><br><a href="https://github.com/go-lang-plugin-org/go-lang-idea-plugin" target="_blank" rel="noopener">https://github.com/go-lang-plugin-org/go-lang-idea-plugin</a><br><a href="http://wiki.jikexueyuan.com/project/go-command-tutorial" target="_blank" rel="noopener">http://wiki.jikexueyuan.com/project/go-command-tutorial</a></p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>OwnCloud</title>
    <url>/2017/01/12/0192-OwnCloud/</url>
    <content><![CDATA[<p>docker run -d -p 8082:80 -v /root/owncloud:/var/www/html owncloud</p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>未归档</tag>
      </tags>
  </entry>
  <entry>
    <title>业务 电商领域</title>
    <url>/2017/01/15/0193-%E4%B8%9A%E5%8A%A1%20%E7%94%B5%E5%95%86%E9%A2%86%E5%9F%9F/</url>
    <content><![CDATA[<h3 id="ERP-Enterprise-Resource-Planning"><a href="#ERP-Enterprise-Resource-Planning" class="headerlink" title="ERP(Enterprise Resource Planning)"></a>ERP(Enterprise Resource Planning)</h3><ul>
<li>权限控制<ul>
<li>员工管理</li>
</ul>
</li>
<li>基础模块<ul>
<li>订单管理／物流管理</li>
<li>商品管理／仓库管理</li>
<li>财务管理／采购管理</li>
</ul>
</li>
<li>扩展模块<ul>
<li>售后管理／CRM</li>
<li>报表管理</li>
<li>分销系统</li>
</ul>
</li>
</ul>
<h3 id="具体业务"><a href="#具体业务" class="headerlink" title="具体业务"></a>具体业务</h3><ul>
<li>订单相关<ul>
<li>合并订单， 拆单，发货退货，地址修改</li>
</ul>
</li>
<li>商品相关<ul>
<li>自定义schema，商品映射，库存管理</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>未归档</tag>
      </tags>
  </entry>
  <entry>
    <title>Domians  金融领域</title>
    <url>/2017/01/15/0194-Domians%20%20%E9%87%91%E8%9E%8D%E9%A2%86%E5%9F%9F/</url>
    <content><![CDATA[<h2 id="第三方接口"><a href="#第三方接口" class="headerlink" title="第三方接口"></a>第三方接口</h2><ul>
<li>P2P领域<ul>
<li>网银</li>
<li>第三方支付牌照商</li>
<li>实名认证</li>
</ul>
</li>
</ul>
<h2 id="金融领域系统"><a href="#金融领域系统" class="headerlink" title="金融领域系统"></a>金融领域系统</h2><ul>
<li>支付模块</li>
<li>代发模块</li>
<li>还款模块</li>
<li>对账（会计类，收入=成本-支出）</li>
<li>风控系统／爬虫系统</li>
<li>优惠卷／活动模块</li>
</ul>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>未归档</tag>
      </tags>
  </entry>
  <entry>
    <title>Donains 算法</title>
    <url>/2017/01/15/0195-Donains%20%E7%AE%97%E6%B3%95/</url>
    <content><![CDATA[<h2 id="基本算法"><a href="#基本算法" class="headerlink" title="基本算法"></a>基本算法</h2><ol>
<li>枚举算法</li>
<li>贪心算法</li>
<li>动态规划</li>
<li>递归算法</li>
<li>回朔算法</li>
</ol>
<h2 id="分布式"><a href="#分布式" class="headerlink" title="分布式"></a>分布式</h2><h3 id="CAP"><a href="#CAP" class="headerlink" title="CAP"></a>CAP</h3><ul>
<li>Consistency（一致性）</li>
<li>Availability（可用性）</li>
<li>Partition tolerance（分区容错性）</li>
</ul>
<h3 id="BASE"><a href="#BASE" class="headerlink" title="BASE"></a>BASE</h3><ul>
<li>Basically Available（基本可用）</li>
<li>Soft-state（ 软状态/柔性事务）</li>
<li>Eventual Consistency（最终一致性）</li>
</ul>
<h3 id="Paxos-Raft"><a href="#Paxos-Raft" class="headerlink" title="Paxos/Raft"></a>Paxos/Raft</h3><h2 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h2><p>Btree-</p>
<h2 id="限流算法"><a href="#限流算法" class="headerlink" title="限流算法"></a>限流算法</h2><p>令牌桶<br>节点增加<br>HashedWheelTimer</p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>未归档</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker Oracle</title>
    <url>/2017/02/22/0196-Docker%20Oracle/</url>
    <content><![CDATA[<p><a href="https://hub.docker.com/r/alexeiled/docker-oracle-xe-11g/" target="_blank" rel="noopener">https://hub.docker.com/r/alexeiled/docker-oracle-xe-11g/</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker run -d -p 1022:22 -p 1521:1521 -p 8080:8080 alexeiled/docker-oracle-xe-11g</span><br></pre></td></tr></table></figure>
<h3 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h3><ul>
<li>hostname: localhost</li>
<li>port: 1521</li>
<li>sid: xe</li>
<li>username: system</li>
<li>password: oracle</li>
<li>Password for SYS user</li>
</ul>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>devops</tag>
      </tags>
  </entry>
  <entry>
    <title>Oauth Encrypt</title>
    <url>/2017/02/25/0197-Oauth%20Encrypt/</url>
    <content><![CDATA[<p>核心数学<br>异或运算<br>求散列对数<br>合数求两质数的时间复杂度</p>
<p>SHA256<br>hash算法，单向加密不可逆，用来保证文件不备篡改</p>
<p>AES<br>双向／对称加密算法，保证文件传输过程中不被截取</p>
<p>RSA<br>双向非对称加密算法，保证文件不被截取，不备篡改</p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>未归档</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker ftp</title>
    <url>/2017/03/09/0198-Docker%20ftp/</url>
    <content><![CDATA[<h2 id="快速构建ftp服务"><a href="#快速构建ftp服务" class="headerlink" title="快速构建ftp服务"></a>快速构建ftp服务</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 安装</span><br><span class="line">docker pull stilliard/pure-ftpd:hardened</span><br><span class="line">docker run -d --name ftpd_server -p 21:21 -p 30000-30009:30000-30009 -e &quot;PUBLICHOST=localhost&quot; stilliard/pure-ftpd:hardened</span><br><span class="line"></span><br><span class="line"># 添加用户bob</span><br><span class="line">docker exec -it ftpd_server /bin/bash</span><br><span class="line">pure-pw useradd bob -f /etc/pure-ftpd/passwd/pureftpd.passwd -m -u ftpuser -d /home/ftpusers/bob</span><br><span class="line"></span><br><span class="line"># 测试</span><br><span class="line">ftp -p localhost 21</span><br></pre></td></tr></table></figure>
<ul>
<li><a href="http://mina.apache.org/ftpserver-project/index.html" target="_blank" rel="noopener">http://mina.apache.org/ftpserver-project/index.html</a></li>
<li><a href="https://github.com/stilliard/docker-pure-ftpd#" target="_blank" rel="noopener">https://github.com/stilliard/docker-pure-ftpd#</a> docker-pure-ftpd-server</li>
</ul>
<h2 id="使用JAVA-client"><a href="#使用JAVA-client" class="headerlink" title="使用JAVA client"></a>使用JAVA client</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">  &lt;groupId&gt;commons-net&lt;/groupId&gt;</span><br><span class="line">  &lt;artifactId&gt;commons-net&lt;/artifactId&gt;</span><br><span class="line">  &lt;version&gt;3.6&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure>
<h2 id="基础安装FTP"><a href="#基础安装FTP" class="headerlink" title="基础安装FTP"></a>基础安装FTP</h2>]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>未归档</tag>
      </tags>
  </entry>
  <entry>
    <title>ffmpg</title>
    <url>/2017/03/22/0199-ffmpg/</url>
    <content><![CDATA[<p>ffmpeg -ss 0:0:0 -t 00:10:00 -i in.mp4 -c copy ~/Desktop/out.mp4</p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>未归档</tag>
      </tags>
  </entry>
  <entry>
    <title>Document convert-to</title>
    <url>/2017/04/14/0200-Document%20convert-to/</url>
    <content><![CDATA[<h1 id="文档转换方案"><a href="#文档转换方案" class="headerlink" title="文档转换方案"></a>文档转换方案</h1><h2 id="安装LibreOffice"><a href="#安装LibreOffice" class="headerlink" title="安装LibreOffice"></a>安装LibreOffice</h2><p>可以看到这么一个命令<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">--convert-to output_file_extension[:output_filter_name[:output_filter_options]] [--outdir output_dir] files</span><br><span class="line">      Batch convert files (implies --headless).</span><br><span class="line">      If --outdir is not specified then current working dir is used as output_dir.</span><br><span class="line">      Eg. --convert-to pdf *.doc</span><br><span class="line">          --convert-to pdf:writer_pdf_Export --outdir /home/user *.doc</span><br><span class="line">          --convert-to &quot;html:XHTML Writer File:UTF8&quot; *.doc</span><br><span class="line">          --convert-to &quot;txt:Text (encoded):UTF8&quot; *.doc</span><br></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">./soffice --headless --invisible --convert-to pdf *.*</span><br></pre></td></tr></table></figure>
<h3 id="兼容性测试"><a href="#兼容性测试" class="headerlink" title="兼容性测试"></a>兼容性测试</h3><ul>
<li>pdf转换目前 xls/xlsx/doc/docx</li>
<li>html转换支持 doc/docx</li>
</ul>
<h2 id="web端使用"><a href="#web端使用" class="headerlink" title="web端使用"></a>web端使用</h2><p><a href="https://github.com/mozilla/pdf.js" target="_blank" rel="noopener">https://github.com/mozilla/pdf.js</a><br>使用<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">curl https://sjbglc.ghzq.com.cn/file/web/viewer.html?file=1.pdf</span><br></pre></td></tr></table></figure></p>
<h2 id="pdf处理工具"><a href="#pdf处理工具" class="headerlink" title="pdf处理工具"></a>pdf处理工具</h2><p><a href="https://www.pdflabs.com/docs/pdftk-cli-examples/" target="_blank" rel="noopener">https://www.pdflabs.com/docs/pdftk-cli-examples/</a></p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul>
<li><a href="https://help.libreoffice.org/Common/About_Converting_Microsoft_Office_Documents/zh-CN" target="_blank" rel="noopener">https://help.libreoffice.org/Common/About_Converting_Microsoft_Office_Documents/zh-CN</a></li>
</ul>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>未归档</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux iptables guide</title>
    <url>/2017/05/15/0201-Linux%20iptables%20guide/</url>
    <content><![CDATA[<h3 id="Chains"><a href="#Chains" class="headerlink" title="Chains"></a>Chains</h3><ol>
<li>PREROUTING (路由前)</li>
<li>INPUT (数据包流入口)</li>
<li>FORWARD (转发管卡)</li>
<li>OUTPUT(数据包出口)</li>
<li>POSTROUTING（路由后）<h3 id="策略"><a href="#策略" class="headerlink" title="策略"></a>策略</h3></li>
<li>filter</li>
<li>nat<br>注意这里所有策略都是链式的，即作用域从上到下，被拦截之后的策略无效</li>
</ol>
<p>相关命令<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 启动</span><br><span class="line">service iptables start</span><br><span class="line"># 查看相关配置</span><br><span class="line">iptables -L INPUT --line-numbers</span><br><span class="line"># 更新配置</span><br><span class="line">/etc/sysconfig/iptables </span><br><span class="line"># 增加记录</span><br><span class="line">iptables -I INPUT -s 10.121.121.181 -p tcp --dport 8110 -j ACCEPT</span><br><span class="line"># 保存</span><br><span class="line">service iptables save</span><br><span class="line"># 删除相关配置</span><br><span class="line">iptables -D INPUT 3</span><br><span class="line"># 默认规则设定关闭</span><br><span class="line">iptables -P INPUT DROP    </span><br><span class="line">iptables -P OUTPUT DROP    </span><br><span class="line">iptables -P FORWARD DROP   </span><br><span class="line"></span><br><span class="line"># 封整个段即从123.0.0.1到123.255.255.254的命令   </span><br><span class="line">iptables -I INPUT -s 123.0.0.0/8 -j DROP   </span><br><span class="line"># 封IP段即从123.45.0.1到123.45.255.254的命令   </span><br><span class="line">iptables -I INPUT -s 124.45.0.0/16 -j DROP</span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>未归档</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux Sysstat／Glance／Netdata</title>
    <url>/2017/06/14/0203-Linux%20Sysstat%EF%BC%8FGlance%EF%BC%8FNetdata/</url>
    <content><![CDATA[<h3 id="官网"><a href="#官网" class="headerlink" title="官网"></a>官网</h3><p><a href="http://sebastien.godard.pagesperso-orange.fr/" target="_blank" rel="noopener">http://sebastien.godard.pagesperso-orange.fr/</a></p>
<h3 id="仓库"><a href="#仓库" class="headerlink" title="仓库"></a>仓库</h3><p><a href="https://github.com/sysstat/sysstat" target="_blank" rel="noopener">https://github.com/sysstat/sysstat</a><br>这个项目离线下使用比较好，功能较弱</p>
<h3 id="性能检查命令集"><a href="#性能检查命令集" class="headerlink" title="性能检查命令集"></a>性能检查命令集</h3><ul>
<li>iostat reports CPU statistics and input/output statistics </li>
<li>for devices, partitions and network filesystems.</li>
<li>mpstat reports individual or combined processor related statistics.</li>
<li>pidstat reports statistics for Linux tasks (processes) : I/O, CPU, memory, etc.</li>
<li>tapestat reports statistics for tape drives connected to the system.</li>
<li>cifsiostat reports CIFS statistics.</li>
</ul>
<h3 id="性能监控工具"><a href="#性能监控工具" class="headerlink" title="性能监控工具"></a>性能监控工具</h3><ul>
<li>sar collects, reports and saves system activity information (see below a list of metrics collected by sar).</li>
<li>sadc is the system activity data collector, used as a backend for sar.</li>
<li>sa1 collects and stores binary data in the system activity daily data file. It is a front end to sadc designed to be run from cron or systemd.</li>
<li>sa2 writes a summarized daily activity report. It is a front end to sar designed to be run from cron or systemd.</li>
<li>sadf displays data collected by sar in multiple formats (CSV, XML, JSON, etc.) and can be used for data exchange with other programs. This command can also be used to draw graphs for the various activities collected by sar using SVG (Scalable Vector Graphics) format.</li>
</ul>
<p>安装完成后会生成这些文件</p>
<p>mkdir -p /usr/local/lib64/sa<br>mkdir -p /var/log/sa<br>mkdir -p /usr/local/bin<br>mkdir -p /usr/local/share/doc/sysstat-11.5.6<br>mkdir -p /etc/sysconfig<br>install -m 755 sa1 /usr/local/lib64/sa<br>install -m 755 sa2 /usr/local/lib64/sa<br>install -m 755 sadc /usr/local/lib64/sa<br>install -m 755 sar /usr/local/bin<br>install -m 755 sadf /usr/local/bin<br>install -m 755 iostat /usr/local/bin<br>install -m 755 tapestat /usr/local/bin<br>install -m 755 mpstat /usr/local/bin<br>install -m 755 pidstat /usr/local/bin<br>install -m 755 cifsiostat /usr/local/bin<br>install -m 644 sysstat.ioconf /etc/sysconfig</p>
<h3 id="监控原理"><a href="#监控原理" class="headerlink" title="监控原理"></a>监控原理</h3><p>sadc命令会生成 /usr/local/lib64/saDD的二进制日志文件，<br>sa1命令会生成 当日性能汇总数据<br>sa2命令会生成 当月性能汇总数据<br>sadf 可以读取转义ssDD的日志出报表活着svg图表审计</p>
<h3 id="实践"><a href="#实践" class="headerlink" title="实践"></a>实践</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">安装编译带参数</span><br><span class="line">./configure --enable-install-cron</span><br><span class="line">自动增加systemd脚本</span><br><span class="line">service sysstat start</span><br><span class="line"></span><br><span class="line">nohup /usr/local/lib64/sa/sadc 10 -&gt;/dev/null 2&gt;&amp;1 &amp;</span><br><span class="line">sar -P ALL</span><br><span class="line">sadf -P</span><br><span class="line">sadf -g -T 8 /var/log/sa/sa`date +%d` &gt;/root/project/tomcat8/webapps/dcs.web/output_`date +%d`.svg</span><br></pre></td></tr></table></figure>
<p><img src="http://img.sandseasoft.com/20170615149749348774804.png" alt="20170615149749348774804.png"></p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>devops</tag>
      </tags>
  </entry>
  <entry>
    <title>CI webhook</title>
    <url>/2017/06/22/0204-CI%20webhook/</url>
    <content><![CDATA[<p>一个简单的webhook工具，做自动部署可以考虑。基于go语言编写</p>
<p><a href="https://github.com/adnanh/webhook" target="_blank" rel="noopener">https://github.com/adnanh/webhook</a></p>
<p>hooks.json<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;id&quot;: &quot;init&quot;,</span><br><span class="line">        &quot;execute-command&quot;: &quot;/root/ops/webhook/init.sh&quot;,</span><br><span class="line">        &quot;include-command-output-in-response&quot;: true,</span><br><span class="line">        &quot;pass-arguments-to-command&quot;: [</span><br><span class="line">            &#123;</span><br><span class="line">                &quot;source&quot;: &quot;url&quot;,</span><br><span class="line">                &quot;name&quot;: &quot;key&quot;</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># !/bin/bash</span><br><span class="line">ps -ef | grep webhook | grep -v grep | awk &apos;&#123;print $2&#125;&apos; | xargs kill -9</span><br><span class="line">nohup ./webhook -hooks hooks.json -port 8086 -verbose &gt; hook.log 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure>
<p><a href="http://hs.hook.tech84.com/hooks/init?key=qwetty" target="_blank" rel="noopener">http://hs.hook.tech84.com/hooks/init?key=qwetty</a></p>
<h2 id="备注"><a href="#备注" class="headerlink" title="备注"></a>备注</h2><ul>
<li>hooks.json语法<br><a href="https://github.com/adnanh/webhook/wiki/Hook-Definition" target="_blank" rel="noopener">https://github.com/adnanh/webhook/wiki/Hook-Definition</a></li>
<li>chmod 644 xxx.sh 脚本执行权限</li>
<li>“include-command-output-in-response”:true 返回执行结果</li>
</ul>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>devops</tag>
      </tags>
  </entry>
  <entry>
    <title>Java SpringXD/Spring Data Flow</title>
    <url>/2017/10/17/0205-Java%20SpringXD-Spring%20Data%20Flow/</url>
    <content><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">SpringDataFlow 是 XD的重构版本，相对而言XD是一个平台，DataFlow更像是一个框架，都是对ETL业务处理场景产生的中间件。</span><br></pre></td></tr></table></figure>
<p><a href="https://docs.spring.io/spring-xd/docs/1.3.1.RELEASE/reference/html/" target="_blank" rel="noopener">https://docs.spring.io/spring-xd/docs/1.3.1.RELEASE/reference/html/</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Usage:</span><br><span class="line"> To start XD single node (runs in foreground):</span><br><span class="line">     xd-singlenode</span><br><span class="line"></span><br><span class="line"> To start XD admin and container separately (all run in foreground):</span><br><span class="line">     brew update &amp;&amp; brew install redis</span><br><span class="line">     brew install zookeeper</span><br><span class="line">     redis-server</span><br><span class="line">     hsqldb-server</span><br><span class="line">     zkServer start</span><br><span class="line">     xd-admin</span><br><span class="line">     xd-container</span><br><span class="line"></span><br><span class="line"> Start XD Shell:</span><br><span class="line">     xd-shell</span><br><span class="line"></span><br><span class="line"> Create your first stream by typing following in xd shell:</span><br><span class="line">     xd:&gt; stream create --definition &quot;time | log&quot; --name ticktock</span><br><span class="line"></span><br><span class="line"> Documentation:</span><br><span class="line">    http://docs.spring.io/spring-xd/docs/1.3.1.RELEASE/reference/html/</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>未归档</tag>
      </tags>
  </entry>
  <entry>
    <title>Virtualization Guide OpenStack</title>
    <url>/2017/10/26/0206-Virtualization%20Guide%20OpenStack/</url>
    <content><![CDATA[<h1 id="OneInAll"><a href="#OneInAll" class="headerlink" title="OneInAll"></a>OneInAll</h1><ul>
<li>测试安装版本 <a href="https://docs.openstack.org/devstack/lates" target="_blank" rel="noopener">https://docs.openstack.org/devstack/lates</a></li>
<li>完整版安装 <a href="https://docs.openstack.org/newton/install-guide-ubuntu/#" target="_blank" rel="noopener">https://docs.openstack.org/newton/install-guide-ubuntu/#</a> </li>
</ul>
<h2 id="理解概念"><a href="#理解概念" class="headerlink" title="理解概念"></a>理解概念</h2><p><img src="http://img.sandseasoft.com/image/7/57/11ac48a6bdac83020ae2677064023.jpg" alt></p>
<h2 id="核心组件"><a href="#核心组件" class="headerlink" title="核心组件"></a>核心组件</h2><ul>
<li>keystone授权</li>
<li>glance  镜像管理</li>
<li>nova    计算（基于libvirt控制kvm/qmenu）</li>
<li>cinder  存储</li>
<li>neutron 网络</li>
<li>horizon 总控制UI<br><img src="http://img.sandseasoft.com/image/1/6c/f2e65ba5dca50ebf9f64f1acd0bae.png" alt></li>
</ul>
<h1 id="安装devstack"><a href="#安装devstack" class="headerlink" title="安装devstack"></a>安装devstack</h1><p>安装文档增加stack账户执行.stack.sh之前要对镜像做一些处理。注意虚拟机需要双网卡绑定，内存设置8G以上</p>
<ol>
<li>基于ubuntu17 更换mirror<br>/etc/apt/sources.list<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">deb http://mirrors.aliyun.com/ubuntu/ trusty main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ trusty-security main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ trusty-updates main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ trusty-proposed main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ trusty-backports main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ trusty main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ trusty-security main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ trusty-updates main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ trusty-proposed main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ trusty-backports main restricted universe multiverse</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>2.local.conf脚本可以换成如下镜像<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[[local|localrc]]</span><br><span class="line">GIT_BASE=http://git.trystack.cn</span><br><span class="line">NOVNC_REPO=http://git.trystack.cn/kanaka/noVNC.git</span><br><span class="line">SPICE_REPO=http://git.trystack.cn/git/spice/spice-html5.git</span><br><span class="line">ADMIN_PASSWORD=secret</span><br><span class="line">DATABASE_PASSWORD=$ADMIN_PASSWORD</span><br><span class="line">RABBIT_PASSWORD=$ADMIN_PASSWORD</span><br><span class="line">SERVICE_PASSWORD=$ADMIN_PASSWORD</span><br><span class="line"></span><br><span class="line"># OFFLINE=True</span><br><span class="line">RECLONE=True</span><br></pre></td></tr></table></figure></p>
<p>启动 </p>
<p>最后<br>从安装的脚本来看，是一个非常复杂的大型合作开源项目了，基础编码语言python，有用到memcache、rabbit、mysql这些基础中间件。实际上这个Paas平台应付生产环境远远不够的，毕竟各种扩展可以想象得到的性能不足。</p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>未归档</tag>
      </tags>
  </entry>
  <entry>
    <title>Oauth JWT</title>
    <url>/2017/10/30/0207-Oauth%20JWT/</url>
    <content><![CDATA[<p>JWT是一种轻量的客户端认证授权协议<br>有两篇文章很好的概括</p>
<ul>
<li><a href="http://blog.leapoahead.com/2015/09/06/understanding-jwt/" target="_blank" rel="noopener">http://blog.leapoahead.com/2015/09/06/understanding-jwt/</a></li>
<li><a href="http://blog.leapoahead.com/2015/09/07/user-authentication-with-jwt/" target="_blank" rel="noopener">http://blog.leapoahead.com/2015/09/07/user-authentication-with-jwt/</a></li>
</ul>
<p>基础结构体为<br>Header.Payload.Signature<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">其中</span><br><span class="line">1.Header</span><br><span class="line">base64(&#123;</span><br><span class="line">  &quot;typ&quot;: &quot;JWT&quot;,</span><br><span class="line">  &quot;alg&quot;: &quot;HS256&quot;</span><br><span class="line">&#125;)</span><br><span class="line">2.Payload</span><br><span class="line">base64(&#123;&quot;userId&quot;:&quot;xx&quot;&#125;)</span><br><span class="line">3.Signature</span><br><span class="line">前两者求MAC，类似这样</span><br><span class="line">eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJmcm9tX3VzZXIiOiJCIiwidGFyZ2V0X3VzZXIiOiJBIn0.rSWamyAYwuHCo7IFAgd1oRpSP7nzL7BF5t7ItqpKViM</span><br></pre></td></tr></table></figure></p>
<p>保证授权颁发的token不可篡改，但是将部分用户信息暴露在网络。</p>
<p>对应实现<br><a href="https://github.com/jwtk/jjwt" target="_blank" rel="noopener">https://github.com/jwtk/jjwt</a><br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;io.jsonwebtoken&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;jjwt&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;0.9.0&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public class JsonWebTokenUtility &#123;</span><br><span class="line"></span><br><span class="line">  private SignatureAlgorithm signatureAlgorithm;</span><br><span class="line">  private Key                secretKey;</span><br><span class="line"></span><br><span class="line">  public JsonWebTokenUtility() &#123;</span><br><span class="line">    signatureAlgorithm = SignatureAlgorithm.HS512;</span><br><span class="line">    String encodedKey = &quot;demo&quot;;</span><br><span class="line">    secretKey = deserializeKey(encodedKey);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  public String createJsonWebToken() &#123;</span><br><span class="line">    return Jwts</span><br><span class="line">        .builder()</span><br><span class="line">        .setSubject(&quot;jik1992&quot;)</span><br><span class="line">        .claim(&quot;email&quot;, &quot;zuo.zhong@163.com&quot;)</span><br><span class="line">        .claim(&quot;roles&quot;, Lists.newArrayList(&quot;admin&quot;))</span><br><span class="line">//        .setExpiration(new Date())</span><br><span class="line">        .signWith(getSignatureAlgorithm(), getSecretKey()).compact();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  public Object parseAndValidate(String token) &#123;</span><br><span class="line">    try &#123;</span><br><span class="line">      User user = new User();</span><br><span class="line">      Claims claims = Jwts.parser().setSigningKey(getSecretKey()).parseClaimsJws(token).getBody();</span><br><span class="line">      String userId = claims.getSubject();</span><br><span class="line">      String email = (String) claims.get(&quot;email&quot;);</span><br><span class="line">      List roleNames = (List) claims.get(&quot;roles&quot;);</span><br><span class="line">      Date expirationDate = claims.getExpiration();</span><br><span class="line">      return user</span><br><span class="line">          .setUsername(userId)</span><br><span class="line">          .setEmail(email)</span><br><span class="line">          .setRoles(roleNames);</span><br><span class="line">    &#125; catch (JwtException ex) &#123;</span><br><span class="line">      System.out.println(ex.getMessage());</span><br><span class="line">      return null;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  private Key deserializeKey(String encodedKey) &#123;</span><br><span class="line">    byte[] decodedKey = Base64.getDecoder().decode(encodedKey);</span><br><span class="line">    return new SecretKeySpec(decodedKey, getSignatureAlgorithm().getJcaName());</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  private String serializeKey(Key key) &#123;</span><br><span class="line">    return Base64.getEncoder().encodeToString(key.getEncoded());</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  private SignatureAlgorithm getSignatureAlgorithm() &#123;</span><br><span class="line">    return signatureAlgorithm;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  private Key getSecretKey() &#123;</span><br><span class="line">    return secretKey;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  public static void main(String[] args) &#123;</span><br><span class="line">    JsonWebTokenUtility utility = new JsonWebTokenUtility();</span><br><span class="line">    //密钥存储</span><br><span class="line">    String token = utility.createJsonWebToken();</span><br><span class="line">    System.out.println(token);</span><br><span class="line">    System.out.println(JSON.toJSONString(utility.parseAndValidate(token)));</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><ul>
<li><a href="https://keyholesoftware.com/2016/06/20/json-web-tokens-with-spring-cloud-microservices/" target="_blank" rel="noopener">https://keyholesoftware.com/2016/06/20/json-web-tokens-with-spring-cloud-microservices/</a></li>
<li><a href="https://juejin.im/post/59f849316fb9a0450f213cbf" target="_blank" rel="noopener">https://juejin.im/post/59f849316fb9a0450f213cbf</a></li>
<li><a href="https://segmentfault.com/a/1190000009164779" target="_blank" rel="noopener">https://segmentfault.com/a/1190000009164779</a></li>
</ul>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>未归档</tag>
      </tags>
  </entry>
  <entry>
    <title>Oauth 2FA</title>
    <url>/2017/10/30/0208-Oauth%202FA/</url>
    <content><![CDATA[<h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><p><a href="https://garbagecollected.org/2014/09/14/how-google-authenticator-works/" target="_blank" rel="noopener">https://garbagecollected.org/2014/09/14/how-google-authenticator-works/</a></p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>未归档</tag>
      </tags>
  </entry>
  <entry>
    <title>Tools  PlantUML</title>
    <url>/2017/10/30/0209-Tools%20%20PlantUML/</url>
    <content><![CDATA[<p>平常画架构图可以使用<br><code>@startuml
Alice -&gt; Bob: Authentication Request
Bob --&gt; Alice: Authentication Response
Alice -&gt; Bob: Another authentication Request
Alice &lt;-- Bob: another authentication Response
@enduml</code></p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>未归档</tag>
      </tags>
  </entry>
  <entry>
    <title>2.0 Springboot JPA/Rest Data/Flydata</title>
    <url>/2017/10/30/0210-2.0%20Springboot%20JPA-Rest%20Data-Flydata/</url>
    <content><![CDATA[<h3 id="ORM框架"><a href="#ORM框架" class="headerlink" title="ORM框架"></a>ORM框架</h3><p>spring整合hibernate的产物。</p>
<p>pom.xml<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-boot-starter-jdbc&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;1.4.2.RELEASE&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-boot-starter-data-jpa&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;1.4.2.RELEASE&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;mysql&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;5.1.20&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure></p>
<p>application.properties<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">spring.datasource.url=jdbc:mysql://localhost:3306/test</span><br><span class="line">spring.datasource.username=root</span><br><span class="line">spring.datasource.password=jik920717</span><br><span class="line">spring.datasource.driver-class-name=com.mysql.jdbc.Driver</span><br><span class="line"></span><br><span class="line"># spring.jpa.hibernate.ddl-auto= create |create-drop| update| validate</span><br><span class="line"># spring.jpa.show-sql=true</span><br></pre></td></tr></table></figure></p>
<p>model<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@Entity</span><br><span class="line">public class TPic &#123;</span><br><span class="line"></span><br><span class="line">  @Id</span><br><span class="line">  @GeneratedValue</span><br><span class="line">  private Integer id;</span><br><span class="line"> @Column(nullable = false)</span><br><span class="line">  private byte[]  pic;</span><br><span class="line"> @Column(nullable = false)</span><br><span class="line">  private String  name;</span><br><span class="line">  @JsonIgnore</span><br><span class="line">  @Transient</span><br><span class="line">  private String sercet;</span><br></pre></td></tr></table></figure></p>
<p>repo<br>相对的会有一些复杂的实现<br>比如</p>
<blockquote>
<p>findByTypeAndDeleteFlagAndIdInOrderByCategoryTypeAscShowOrderAsc</p>
</blockquote>
<p>对于查询的写法有两种语法糖，基于原声SQL和基于JPSQL，默认的开启了JPQL的语法。如需关闭只需要加上注解属性 </p>
<blockquote>
<p>@Query(“”,nativeQuery = true)</p>
</blockquote>
<p>更多语法糖参阅</p>
<ul>
<li><a href="https://www.w3cschool.cn/java/jpa-entitymanager.html" target="_blank" rel="noopener">https://www.w3cschool.cn/java/jpa-entitymanager.html</a></li>
<li><a href="http://docs.spring.io/spring-data/jpa/docs/current/reference/html/" target="_blank" rel="noopener">http://docs.spring.io/spring-data/jpa/docs/current/reference/html/</a></li>
<li><a href="http://www.ibm.com/developerworks/cn/opensource/os-cn-spring-jpa/" target="_blank" rel="noopener">http://www.ibm.com/developerworks/cn/opensource/os-cn-spring-jpa/</a></li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">public interface TPicRepository extends JpaRepository&lt;TPic, Integer&gt; &#123;</span><br><span class="line"></span><br><span class="line">  @Transactional</span><br><span class="line">  @Modifying</span><br><span class="line">  @Query(&quot;update UserFavoriteCategory u set u.isDeleted = &apos;true&apos; where u.userId = ?1 and u.categoryId=?2&quot;)</span><br><span class="line">  int modifyByUserIdAndCategoryId(String userId, String categoryId);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>customer jpa<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@Repository</span><br><span class="line">class JpaCustomerRepository implements CustomerRepository &#123;</span><br><span class="line"></span><br><span class="line">	@PersistenceContext</span><br><span class="line">	private EntityManager em;</span><br><span class="line"></span><br><span class="line">	@Override</span><br><span class="line">	public Customer findOne(Long id) &#123;</span><br><span class="line">		return em.find(Customer.class, id);</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure></p>
<p>use<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@Resource</span><br><span class="line">private TPicRepository repository;</span><br><span class="line"></span><br><span class="line"> TPic one = repository.findOne(Example.of(new TPic().setName(name)));</span><br></pre></td></tr></table></figure></p>
<h2 id="RestData"><a href="#RestData" class="headerlink" title="RestData"></a>RestData</h2><p>把jpa接口暴露成restful接口</p>
<blockquote>
<p>@Projections</p>
</blockquote>
<p>  @RestResource(exported = false)</p>
<blockquote>
<p><a href="https://docs.spring.io/spring-data/rest/docs/current/reference/html/" target="_blank" rel="noopener">https://docs.spring.io/spring-data/rest/docs/current/reference/html/</a></p>
</blockquote>
<p>conf.java<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@Configuration</span><br><span class="line">class CustomRestMvcConfiguration &#123;</span><br><span class="line"></span><br><span class="line">  @Bean</span><br><span class="line">  public RepositoryRestConfigurer repositoryRestConfigurer() &#123;</span><br><span class="line"></span><br><span class="line">    return new RepositoryRestConfigurerAdapter() &#123;</span><br><span class="line"></span><br><span class="line">      @Override</span><br><span class="line">      public void configureRepositoryRestConfiguration(RepositoryRestConfiguration config) &#123;</span><br><span class="line">        config.setBasePath(&quot;/api&quot;);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>use<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@RepositoryRestResource(collectionResourceRel = &quot;people&quot;, path = &quot;people&quot;)</span><br><span class="line">public interface PersonRepository extends PagingAndSortingRepository&lt;Person, Long&gt; &#123;</span><br><span class="line"></span><br><span class="line">@RestResource(path = &quot;names&quot;, rel = &quot;names&quot;)</span><br><span class="line">	List&lt;Person&gt; findByLastName(@Param(&quot;name&quot;) String name);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="Flydata"><a href="#Flydata" class="headerlink" title="Flydata"></a>Flydata</h2><p>数据库变更审计<br>pom.xml<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.flywaydb&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;flyway-core&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;4.2.0&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure></p>
<p>application.properties<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">spring.jpa.hibernate.ddl-auto=none</span><br><span class="line">flyway.baselineOnMigrate=true</span><br></pre></td></tr></table></figure></p>
<p>编写sql<br><img src="http://img.sandseasoft.com/20171128151185951222400.png" alt="20171128151185951222400.png"></p>
<blockquote>
<p>每次执行一旦有新版本的sql都会执行并记录schema_version，如果当前历史脚本被篡改或者执行失败会启动报错</p>
</blockquote>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>未归档</tag>
      </tags>
  </entry>
  <entry>
    <title>3.0 Springboot Cache</title>
    <url>/2017/10/30/0211-3.0%20Springboot%20Cache/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>spring-boot-cache是springboot的缓存接口的快速实现</p>
<h2 id="使用以Guava为例"><a href="#使用以Guava为例" class="headerlink" title="使用以Guava为例"></a>使用以Guava为例</h2><p>pom.xml<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">           &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">           &lt;artifactId&gt;spring-boot-starter-cache&lt;/artifactId&gt;</span><br><span class="line">       &lt;/dependency&gt;</span><br><span class="line">       &lt;dependency&gt;</span><br><span class="line">           &lt;groupId&gt;com.google.guava&lt;/groupId&gt;</span><br><span class="line">           &lt;artifactId&gt;guava&lt;/artifactId&gt;</span><br><span class="line">           &lt;version&gt;22.0&lt;/version&gt;</span><br><span class="line">       &lt;/dependency&gt;</span><br></pre></td></tr></table></figure></p>
<p>config.java<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@Configuration</span><br><span class="line">@EnableCaching</span><br><span class="line">public class CacheConfig &#123;</span><br><span class="line">  @Bean</span><br><span class="line">  public CacheManager getCacheManager() &#123;</span><br><span class="line">    GuavaCacheManager cacheManager = new GuavaCacheManager();</span><br><span class="line">    //最多缓存500 条，失效时间30分钟</span><br><span class="line">    cacheManager.setCacheSpecification(&quot;maximumSize=500,expireAfterWrite=30m&quot;);</span><br><span class="line">    return cacheManager;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>use<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">//设置对象</span><br><span class="line">@CacheConfig(cacheNames = &quot;pic&quot;)</span><br><span class="line">public interface TPicRepository extends JpaRepository&lt;TPic, Integer&gt; &#123;</span><br><span class="line"></span><br><span class="line">//可以显式调用</span><br><span class="line">  @Resource</span><br><span class="line">  private CacheManager   cacheManager;</span><br><span class="line"></span><br><span class="line">  @Override</span><br><span class="line">  @Cacheable</span><br><span class="line">  List&lt;TPic&gt; findAll();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h2><ul>
<li>@Cacheable 可以使用Spel表达式，适用于查询方法</li>
<li>@CachePut 会调用函数，同时更新缓存，适用于更新，增加方法</li>
<li>@CacheEvict 移除缓存</li>
</ul>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul>
<li><a href="http://www.jianshu.com/p/64f684bd0ce9" target="_blank" rel="noopener">http://www.jianshu.com/p/64f684bd0ce9</a></li>
<li><a href="https://docs.spring.io/spring-boot/docs/1.4.2.RELEASE/reference/pdf/spring-boot-reference.pdf" target="_blank" rel="noopener">https://docs.spring.io/spring-boot/docs/1.4.2.RELEASE/reference/pdf/spring-boot-reference.pdf</a></li>
</ul>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>未归档</tag>
      </tags>
  </entry>
  <entry>
    <title>6.0 springboot Security</title>
    <url>/2017/10/30/0212-6.0%20springboot%20Security/</url>
    <content><![CDATA[<h2 id="官网"><a href="#官网" class="headerlink" title="官网"></a>官网</h2><p><a href="https://docs.spring.io/spring-security/site/docs/5.0.0.RC1/reference/htmlsingle/" target="_blank" rel="noopener">https://docs.spring.io/spring-security/site/docs/5.0.0.RC1/reference/htmlsingle/</a><br><a href="https://www.cnblogs.com/linhp/p/5817054.html" target="_blank" rel="noopener">https://www.cnblogs.com/linhp/p/5817054.html</a></p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>已经被浓缩的非常简单了，以下基于restful实现接口<br>注意：</p>
<ol>
<li>login请求参数必须是username/password</li>
<li>实现WebSecurityConfigurerAdapter／UserDetails／UserDetailsService方法</li>
<li>当开启 @EnableGlobalMethodSecurity(securedEnabled = true) 之后，可以设置基于service级别的安全。注解的授权DSL比shiro更加丰富，适合复杂的授权模型设计</li>
</ol>
<p>基本的RBAC3授权模型<br><img src="http://img.sandseasoft.com/20171031150943517511248.png" alt="20171031150943517511248.png"></p>
<p>WebSecurityConfig.java<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@Configuration</span><br><span class="line">@EnableWebSecurity</span><br><span class="line">@EnableGlobalMethodSecurity(securedEnabled = true)// 控制权限注解</span><br><span class="line">public class WebSecurityConfig extends WebSecurityConfigurerAdapter &#123;</span><br><span class="line"></span><br><span class="line">  @Autowired</span><br><span class="line">  private CustomUserService customUserService;</span><br><span class="line"></span><br><span class="line">  @Autowired</span><br><span class="line">  public void configureGlobal(AuthenticationManagerBuilder auth) throws Exception &#123;</span><br><span class="line">//    auth</span><br><span class="line">//        .inMemoryAuthentication()</span><br><span class="line">//        .withUser(&quot;admin&quot;).password(&quot;admin&quot;).roles(&quot;USER&quot;);</span><br><span class="line">//</span><br><span class="line">    auth.userDetailsService(customUserService).passwordEncoder(</span><br><span class="line">        new PasswordEncoder() &#123;</span><br><span class="line">          @Override</span><br><span class="line">          public String encode(CharSequence rawPassword) &#123;</span><br><span class="line">            System.out.println(&quot;密码 &quot; + rawPassword);</span><br><span class="line">            return ((String) rawPassword);</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">          @Override</span><br><span class="line">          public boolean matches(CharSequence rawPassword, String encodedPassword) &#123;</span><br><span class="line">            System.out.println(&quot;比较密码 &quot; + rawPassword + &quot;比较之后&quot; + encodedPassword);</span><br><span class="line">            return encodedPassword.equals(rawPassword);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  @Override</span><br><span class="line">  protected void configure(HttpSecurity http) throws Exception &#123;</span><br><span class="line">    http</span><br><span class="line">        .csrf().disable()</span><br><span class="line">        .authorizeRequests()</span><br><span class="line">        .antMatchers(&quot;/demo&quot;).permitAll()</span><br><span class="line">        .anyRequest().authenticated()</span><br><span class="line">        //配置那些路径可以不用权限访问</span><br><span class="line">        .mvcMatchers(&quot;/login&quot;).permitAll()</span><br><span class="line">        .and()</span><br><span class="line">        .formLogin()</span><br><span class="line">        //登陆成功后的处理，因为是API的形式所以不用跳转页面</span><br><span class="line">        .successHandler(new AuthenticationSuccessHandler() &#123;</span><br><span class="line">          @Override</span><br><span class="line">          public void onAuthenticationSuccess(HttpServletRequest httpServletRequest,</span><br><span class="line">                                              HttpServletResponse httpServletResponse,</span><br><span class="line">                                              Authentication authentication) throws IOException, ServletException &#123;</span><br><span class="line">            httpServletResponse.setContentType(&quot;text/html;charset=utf-8&quot;);</span><br><span class="line">            httpServletResponse.getWriter().append(&quot;success!&quot;);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">        //登陆失败后的处理</span><br><span class="line">        .failureHandler(new SimpleUrlAuthenticationFailureHandler())</span><br><span class="line">        .and()</span><br><span class="line">        //登出后的处理</span><br><span class="line">        .logout()</span><br><span class="line">        .logoutSuccessHandler(new LogoutSuccessHandler() &#123;</span><br><span class="line">          @Override</span><br><span class="line">          public void onLogoutSuccess(HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse,</span><br><span class="line">                                      Authentication authentication) throws IOException, ServletException &#123;</span><br><span class="line">            httpServletResponse.setContentType(&quot;text/html;charset=utf-8&quot;);</span><br><span class="line">            httpServletResponse.getWriter().append(&quot;登出成功！&quot;);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">        .and()</span><br><span class="line">        //认证不通过后的处理</span><br><span class="line">        .exceptionHandling()</span><br><span class="line">        .authenticationEntryPoint(new AuthenticationEntryPoint() &#123;</span><br><span class="line">          @Override</span><br><span class="line">          public void commence(HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse,</span><br><span class="line">                               AuthenticationException e) throws IOException, ServletException &#123;</span><br><span class="line">            httpServletResponse.setContentType(&quot;text/html;charset=utf-8&quot;);</span><br><span class="line">            httpServletResponse.getWriter().append(&quot;认证不通过&quot;);</span><br><span class="line"></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>SysUser.java<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public class SysUser implements UserDetails &#123;</span><br><span class="line"></span><br><span class="line">  final static Logger logger = LoggerFactory.getLogger(SysUser.class);</span><br><span class="line">  private Integer id;</span><br><span class="line">  private String  username;</span><br><span class="line">  @JsonIgnore</span><br><span class="line">  private String  password;</span><br><span class="line">  private List&lt;? extends GrantedAuthority&gt; authorities;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  @Override</span><br><span class="line">  public Collection&lt;? extends GrantedAuthority&gt; getAuthorities() &#123;</span><br><span class="line">    return authorities;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  @Override</span><br><span class="line">  public String getPassword() &#123;</span><br><span class="line">    return password;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  @Override</span><br><span class="line">  public String getUsername() &#123;</span><br><span class="line">    return username;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  @Override</span><br><span class="line">  public boolean isAccountNonExpired() &#123;</span><br><span class="line">    return true;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  @Override</span><br><span class="line">  public boolean isAccountNonLocked() &#123;</span><br><span class="line">    return true;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  @Override</span><br><span class="line">  public boolean isCredentialsNonExpired() &#123;</span><br><span class="line">    return true;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  @Override</span><br><span class="line">  public boolean isEnabled() &#123;</span><br><span class="line">    return true;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  public void setId(Integer id) &#123;this.id = id;&#125;</span><br><span class="line">  public void setUsername(String username) &#123;</span><br><span class="line">    this.username = username;</span><br><span class="line">  &#125;</span><br><span class="line">  public void setPassword(String password) &#123;</span><br><span class="line">    this.password = password;</span><br><span class="line">  &#125;</span><br><span class="line">  public void setGrantedAuthorities(List&lt;? extends GrantedAuthority&gt; authorities) &#123;</span><br><span class="line">    this.authorities = authorities;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>CustomUserService.java<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@Component</span><br><span class="line">public class CustomUserService implements UserDetailsService &#123;</span><br><span class="line"></span><br><span class="line">  @Override</span><br><span class="line">  public UserDetails loadUserByUsername(String s) throws UsernameNotFoundException &#123;</span><br><span class="line">//    SysUser user = userDao.findByUserName(username);</span><br><span class="line">    SysUser user = new SysUser();</span><br><span class="line">//    if(user == null)&#123;</span><br><span class="line">//      throw new UsernameNotFoundException(&quot;用户名不存在&quot;);</span><br><span class="line">//    &#125;</span><br><span class="line">    List&lt;SimpleGrantedAuthority&gt; authorities = new ArrayList&lt;SimpleGrantedAuthority&gt;();</span><br><span class="line">    //用于添加用户的权限。只要把用户权限添加到authorities 就万事大吉。</span><br><span class="line">//    for(SysRole role:user.getRoles())</span><br><span class="line">//    &#123;</span><br><span class="line">    authorities.add(new SimpleGrantedAuthority(&quot;ROLE_USER&quot;));</span><br><span class="line">    authorities.add(new SimpleGrantedAuthority(&quot;some_permission&quot;));</span><br><span class="line">//    &#125;</span><br><span class="line">    user.setGrantedAuthorities(authorities); //用于登录时 @AuthenticationPrincipal 标签取值</span><br><span class="line">    user.setId(1);</span><br><span class="line">    user.setPassword(&quot;admin&quot;);</span><br><span class="line">    user.setUsername(&quot;admin&quot;);</span><br><span class="line">    return user;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>App.java<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@RestController</span><br><span class="line">public class SpringSecurityController &#123;</span><br><span class="line"></span><br><span class="line">  final static Logger logger = LoggerFactory.getLogger(SpringSecurityController.class);</span><br><span class="line"></span><br><span class="line">  @RequestMapping(&quot;/demo&quot;)</span><br><span class="line">  @Secured(&#123;&quot;ROLE_USER&quot;&#125;)</span><br><span class="line">  public Object demo() &#123;</span><br><span class="line">    return &quot;测试页面&quot;;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  @RequestMapping(&quot;/logout&quot;)</span><br><span class="line">  public Object logout() &#123;</span><br><span class="line">    return &quot;logout&quot;;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  /**</span><br><span class="line">   * spring security</span><br><span class="line">   */</span><br><span class="line">  @RequestMapping(value = &quot;/login&quot;)</span><br><span class="line">  @ResponseBody</span><br><span class="line">  public Object login(@AuthenticationPrincipal User user</span><br><span class="line">      , @RequestParam(name = &quot;logout&quot;, required = false) String logout) &#123;</span><br><span class="line">    if (logout != null) &#123;</span><br><span class="line">      return null;</span><br><span class="line">    &#125;</span><br><span class="line">    if (user != null) &#123;</span><br><span class="line">      return user;</span><br><span class="line">    &#125;</span><br><span class="line">    return null;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>7.0 springboot actuator and jmx</title>
    <url>/2017/10/30/0213-7.0%20springboot%20actuator%20and%20jmx/</url>
    <content><![CDATA[<p>主要内容<br>JMX（JSR-3）：介绍 Java 标准管理规范，着重说明 MBean、MXBean、属性（Attribute）、操作（Operation）等相关概念<br>核心API：实战的方式深入探讨服务端和客户端核心API的使用，加深理解<br>客户端：讲解主流客户端（JConsole、JVisualVM）以及 HTTP 桥接框架 Jolokia<br>Spring Boot 整合：介绍 Spring 对 JMX 的扩展支持，随后再深入探讨自动装配模块</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-boot-starter-actuator&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-boot-starter-security&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure>
<p>application.properties</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">security.basic.enabled=true</span><br><span class="line">security.basic.path=/admin</span><br><span class="line">security.user.name=admin</span><br><span class="line">security.user.password=admin</span><br><span class="line"></span><br><span class="line">management.security.enabled=true</span><br><span class="line">management.context-path=/admin</span><br><span class="line">management.security.roles=SUPERUSER</span><br><span class="line">management.port=11111</span><br><span class="line"></span><br><span class="line">endpoints.health.sensitive=false</span><br><span class="line">endpoints.health.enabled=true</span><br></pre></td></tr></table></figure>
<p><img src="http://img.sandseasoft.com/20171125151158746758456.png" alt="20171125151158746758456.png"></p>
<h3 id="shutdown"><a href="#shutdown" class="headerlink" title="/shutdown"></a>/shutdown</h3><blockquote>
<p>endpoints.shutdown.enabled: true</p>
</blockquote>
<h3 id="health"><a href="#health" class="headerlink" title="/health"></a>/health</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@Configuration</span><br><span class="line">public class Info implements HealthIndicator &#123;</span><br><span class="line">  @Override</span><br><span class="line">  public Health health() &#123;</span><br><span class="line">    return Health.up().withDetail(&quot;key&quot;, &quot;value&quot;).build();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>访问 <a href="http://127.0.0.1:8080/health" target="_blank" rel="noopener">http://127.0.0.1:8080/health</a></p>
<h3 id="info"><a href="#info" class="headerlink" title="/info"></a>/info</h3><p>application.properties<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">info.app.name= @project.name@</span><br><span class="line">info.app.description= @project.description@</span><br><span class="line">info.app.version= @project.version@</span><br><span class="line">info.app.spring-boot-version= @project.parent.version@</span><br></pre></td></tr></table></figure></p>
<h3 id="metrics"><a href="#metrics" class="headerlink" title="/metrics"></a>/metrics</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@Autowired</span><br><span class="line">GaugeService   gaugeService;</span><br><span class="line">@Autowired</span><br><span class="line">CounterService counterService;</span><br><span class="line"></span><br><span class="line">  counterService.increment(&quot;xxx&quot;);</span><br><span class="line">  gaugeService.submit(&quot;demo&quot;,80.0);</span><br></pre></td></tr></table></figure>
<h3 id="JMX"><a href="#JMX" class="headerlink" title="JMX"></a>JMX</h3><p>配置<br>application.properties<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">jolokia.config.debug=true</span><br><span class="line"># endpoints.jmx.domain=jmx</span><br><span class="line"># endpoints.jmx.unique-names=true</span><br><span class="line">endpoints.jmx.enabled=true</span><br></pre></td></tr></table></figure></p>
<p>pom.xml<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.jolokia&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;jolokia-core&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure></p>
<p>use 1<br><a href="http://localhost:8080/jolokia/read/Tomcat:type=ThreadPool,name=%22http-nio-8080%22/maxThreads?spm=5176.100239.blogcont54070.4.pmHQcM" target="_blank" rel="noopener">http://localhost:8080/jolokia/read/Tomcat:type=ThreadPool,name=%22http-nio-8080%22/maxThreads?spm=5176.100239.blogcont54070.4.pmHQcM</a></p>
<p>use 2<br>./jconsole </p>
<h3 id="注册自定义的JMX"><a href="#注册自定义的JMX" class="headerlink" title="注册自定义的JMX"></a>注册自定义的JMX</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@Component</span><br><span class="line">@ManagedResource(objectName = &quot;bean:name=lionbuleTest&quot;, description = &quot;My Managed Bean&quot;)</span><br><span class="line">public class TestMBean &#123;</span><br><span class="line"></span><br><span class="line">  private String name;</span><br><span class="line">  private int    age;</span><br><span class="line"></span><br><span class="line">  @ManagedAttribute(description = &quot;The Name Attribute&quot;)</span><br><span class="line">  public String getName() &#123;</span><br><span class="line">    return name;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<p>调用</p>
<blockquote>
<p><a href="http://localhost:8080/jolokia/read/bean:name=lionbuleTest" target="_blank" rel="noopener">http://localhost:8080/jolokia/read/bean:name=lionbuleTest</a><br><img src="http://img.sandseasoft.com/20171125151159431297799.png" alt="20171125151159431297799.png"></p>
</blockquote>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>未归档</tag>
      </tags>
  </entry>
  <entry>
    <title>8.0 springboot Configuration</title>
    <url>/2017/10/30/0214-8.0%20springboot%20Configuration/</url>
    <content><![CDATA[<h2 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h2><ul>
<li>核心注解<br>@Configuration<br>@Bean</li>
<li>兼容注解<br>@PropertySource(“classpath*:application.properties”)<br>@ImportResource(locations = “xxx.xml”)</li>
</ul>
<blockquote>
<p>默认的 application.properties 为默认配置文件<br>，如果要实现动态配置加载，可以考虑PropertyPlaceholderConfigurer实现</p>
</blockquote>
<h2 id="使用profile"><a href="#使用profile" class="headerlink" title="使用profile"></a>使用profile</h2><p>spring.profiles.active=dev</p>
<p><img src="http://img.sandseasoft.com/20171122151133167425778.png" alt="20171122151133167425778.png"><br>命令行启动<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nohup java   -Dspring.profiles.active=test -Dserver.port=8008 -jar guohai-report-server-1.0-SNAPSHOT.jar  &gt;guohai-report-server.log 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure></p>
<h2 id="常用的几个配置"><a href="#常用的几个配置" class="headerlink" title="常用的几个配置"></a>常用的几个配置</h2><ul>
<li><p>修改tomcat端口地址 </p>
<blockquote>
<p>server.port=8008</p>
</blockquote>
</li>
<li><p>修改静态文件存储地址</p>
<blockquote>
<p>web.upload-path=/root/project/guohai-report-mobile/<br>spring.mvc.static-path-pattern=/**<br>spring.resources.static-locations=classpath:/META-INF/resources/,classpath:/resources/,classpath:/static/,classpath:/public/,file:${web.upload-path}</p>
</blockquote>
</li>
</ul>
<h2 id="PropertyPlaceholderConfigurer自定义"><a href="#PropertyPlaceholderConfigurer自定义" class="headerlink" title="PropertyPlaceholderConfigurer自定义"></a>PropertyPlaceholderConfigurer自定义</h2><p>基本的注入值 使用 @Value(“${user.name}”)<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@Configuration</span><br><span class="line">public class PropertiesConfig &#123;</span><br><span class="line"></span><br><span class="line">  @Bean</span><br><span class="line">  public PropertySourcesPlaceholderConfigurer createPropertySourcesPlaceholderConfigurer() &#123;</span><br><span class="line">    ClassPathResource resource = new ClassPathResource(&quot;application.properties&quot;);</span><br><span class="line">    PropertySourcesPlaceholderConfigurer conf = new PropertySourcesPlaceholderConfigurer();</span><br><span class="line">    conf.setLocations(resource);</span><br><span class="line">    Properties properties = new Properties();</span><br><span class="line">    properties.setProperty(&quot;value&quot;, &quot;xxxxx&quot;);</span><br><span class="line">    conf.setProperties(properties);</span><br><span class="line">    return conf;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>未归档</tag>
      </tags>
  </entry>
  <entry>
    <title>Service Discovery Consul</title>
    <url>/2017/10/30/0215-Service%20Discovery%20Consul/</url>
    <content><![CDATA[<h2 id="官网"><a href="#官网" class="headerlink" title="官网"></a>官网</h2><p><a href="https://www.consul.io/" target="_blank" rel="noopener">https://www.consul.io/</a><br>基于raft实现的服务子发现系统，Consul是强一致性的数据存储，使用gossip形成动态集群。Consul 支持健康检查,并允许 HTTP 和 DNS 协议调用 API 存储键值对，以及ACL授权访问控制</p>
<h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><ul>
<li>Service Discovery</li>
<li>Health Checking</li>
<li>KV Store</li>
<li>Multi Datacenter</li>
</ul>
<h2 id="官网工具"><a href="#官网工具" class="headerlink" title="官网工具"></a>官网工具</h2><p>These Consul tools are created and managed by the dedicated engineers at HashiCorp:</p>
<ul>
<li>Envconsul - Read and set environmental variables for processes from Consul.</li>
<li>Consul Replicate - Consul cross-DC KV replication daemon.</li>
<li>Consul Template - Generic template rendering and notifications with Consul</li>
<li>Consul Migrate - Data migration tool to handle Consul upgrades to 0.5.1+</li>
</ul>
<p>fabio</p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Usage: consul [--version] [--help] &lt;command&gt; [&lt;args&gt;]</span><br><span class="line"></span><br><span class="line">Available commands are:</span><br><span class="line">    agent          Runs a Consul agent</span><br><span class="line">    catalog        Interact with the catalog</span><br><span class="line">    event          Fire a new event</span><br><span class="line">    exec           Executes a command on Consul nodes</span><br><span class="line">    force-leave    Forces a member of the cluster to enter the &quot;left&quot; state</span><br><span class="line">    info           Provides debugging information for operators.</span><br><span class="line">    join           Tell Consul agent to join cluster</span><br><span class="line">    keygen         Generates a new encryption key</span><br><span class="line">    keyring        Manages gossip layer encryption keys</span><br><span class="line">    kv             Interact with the key-value store</span><br><span class="line">    leave          Gracefully leaves the Consul cluster and shuts down</span><br><span class="line">    lock           Execute a command holding a lock</span><br><span class="line">    maint          Controls node or service maintenance mode</span><br><span class="line">    members        Lists the members of a Consul cluster</span><br><span class="line">    monitor        Stream logs from a Consul agent</span><br><span class="line">    operator       Provides cluster-level tools for Consul operators</span><br><span class="line">    reload         Triggers the agent to reload configuration files</span><br><span class="line">    rtt            Estimates network round trip time between nodes</span><br><span class="line">    snapshot       Saves, restores and inspects snapshots of Consul server state</span><br><span class="line">    validate       Validate config files/directories</span><br><span class="line">    version        Prints the Consul version</span><br><span class="line">    watch          Watch for changes in Consul</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 单节点</span><br><span class="line">consul agent -server -bootstrap-expect 1 -data-dir /tmp/consul -node demo -ui</span><br><span class="line"># 查看成员</span><br><span class="line">consul members</span><br><span class="line"># 查看节点</span><br><span class="line">curl 127.0.0.1:8500/v1/catalog/nodes</span><br><span class="line">dig @127.0.0.1 -p 8600 demo</span><br><span class="line"># 注册服务</span><br><span class="line">curl -X PUT \</span><br><span class="line">  http://127.0.0.1:8500/v1/catalog/register \</span><br><span class="line">  -H &apos;content-type: application/json&apos; \</span><br><span class="line">  -d &apos;&#123;</span><br><span class="line">	&quot;Datacenter&quot;: &quot;dc1&quot;, </span><br><span class="line">	&quot;Node&quot;: &quot;demo&quot;,</span><br><span class="line">	&quot;Address&quot;: &quot;127.0.0.1&quot;,</span><br><span class="line">	&quot;Service&quot;: </span><br><span class="line">	&#123;</span><br><span class="line">		&quot;Service&quot;: &quot;python&quot;, </span><br><span class="line">		&quot;tags&quot;: [&quot;master&quot;,&quot;v1&quot;], </span><br><span class="line">		&quot;Port&quot;: 8000</span><br><span class="line">	&#125;</span><br><span class="line">&#125;&apos;</span><br><span class="line"># 查看节点</span><br><span class="line"># 标准服务查询，不但支持A record，还支持SRV record, SRV reconds提供服务注册的端口.</span><br><span class="line">dig @127.0.0.1 -p 8600 [tag.]&lt;service&gt;.service[.datacenter].&lt;domain&gt; [ANY|SRV]</span><br><span class="line"> </span><br><span class="line"># kv使用</span><br><span class="line">curl -X PUT -d &apos;bar&apos; http://localhost:8500/v1/kv/foo</span><br><span class="line"># 集群</span><br><span class="line">consul agent -data-dir /tmp/consul2 -node=demo2  -join 192.168.31.172</span><br></pre></td></tr></table></figure>
<h2 id="java-client"><a href="#java-client" class="headerlink" title="java client"></a>java client</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;com.orbitz.consul&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;consul-client&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;0.16.5&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public class ConsulDemo &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  static Consul consul = Consul.builder().withUrl(&quot;http://127.0.0.1:8500&quot;).build();</span><br><span class="line"></span><br><span class="line">  /**</span><br><span class="line">   * 服务注册</span><br><span class="line">   */</span><br><span class="line">  public static void serviceRegister() &#123;</span><br><span class="line">    AgentClient agent = consul.agentClient();</span><br><span class="line"></span><br><span class="line">    //健康检测</span><br><span class="line">    ImmutableRegCheck</span><br><span class="line">        check =</span><br><span class="line">        ImmutableRegCheck.builder().http(&quot;http://127.0.0.1:8000&quot;).interval(&quot;5s&quot;).build();</span><br><span class="line"></span><br><span class="line">    ImmutableRegistration.Builder builder = ImmutableRegistration.builder();</span><br><span class="line">    builder.id(&quot;1&quot;).name(&quot;http&quot;).addTags(&quot;v1&quot;).address(&quot;127.0.0.1&quot;).port(8000).addChecks(check);</span><br><span class="line"></span><br><span class="line">    agent.register(builder.build());</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  /**</span><br><span class="line">   * 服务获取</span><br><span class="line">   */</span><br><span class="line">  public static void serviceGet() &#123;</span><br><span class="line">    HealthClient client = consul.healthClient();</span><br><span class="line">    String name = &quot;http&quot;;</span><br><span class="line">    //获取所有服务</span><br><span class="line">    System.out.println(client.getAllServiceInstances(name).getResponse().size());</span><br><span class="line"></span><br><span class="line">    //获取所有正常的服务（健康检测通过的）</span><br><span class="line">    for (ServiceHealth serviceHealth : client.getHealthyServiceInstances(name).getResponse()) &#123;</span><br><span class="line">      System.out.println(JSON.toJSONString(serviceHealth));</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  public static void main(String[] args) &#123;</span><br><span class="line">    serviceRegister();</span><br><span class="line">    serviceGet();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="nginx基于dns使用"><a href="#nginx基于dns使用" class="headerlink" title="nginx基于dns使用"></a>nginx基于dns使用</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">server&#123;</span><br><span class="line">   name www.baidu.com</span><br><span class="line">   resolver 127.0.0.1:8600;</span><br><span class="line">   set $backend &quot;nginx.service.consul&quot;;</span><br><span class="line">   location / &#123;</span><br><span class="line">          proxy_pass  http://$backend;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><ul>
<li><a href="http://www.jianshu.com/p/28c6bd590ca0" target="_blank" rel="noopener">http://www.jianshu.com/p/28c6bd590ca0</a></li>
<li><a href="http://www.liangxiansen.cn/2017/04/06/consul/" target="_blank" rel="noopener">http://www.liangxiansen.cn/2017/04/06/consul/</a></li>
</ul>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>未归档</tag>
      </tags>
  </entry>
  <entry>
    <title>Cache Redis-cluster</title>
    <url>/2017/10/30/0216-Cache%20Redis-cluster/</url>
    <content><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p><a href="http://www.redis.cn/" target="_blank" rel="noopener">http://www.redis.cn/</a><br><a href="http://www.redis.cn/topics/cluster-tutorial.html" target="_blank" rel="noopener">http://www.redis.cn/topics/cluster-tutorial.html</a></p>
<h1 id="Redis集群方案"><a href="#Redis集群方案" class="headerlink" title="Redis集群方案"></a>Redis集群方案</h1><ul>
<li>除了官方的cluster以外，还有Twemproxy／Codis</li>
</ul>
<p>推荐使用couchbase</p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>devops</tag>
      </tags>
  </entry>
  <entry>
    <title>理论基础</title>
    <url>/2017/11/01/0217-%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<p><i class="em em-frowning"></i><i class="em em-frowning"></i><i class="em em-frowning"></i></p>
<ul>
<li>ApiGateway Pattern<br><a href="http://microservices.io/patterns/apigateway.html" target="_blank" rel="noopener">http://microservices.io/patterns/apigateway.html</a></li>
<li>12factor<br><a href="https://12factor.net/" target="_blank" rel="noopener">https://12factor.net/</a></li>
<li>dapper tracing<br><a href="https://research.google.com/pubs/pub36356.html" target="_blank" rel="noopener">https://research.google.com/pubs/pub36356.html</a></li>
<li>F1<br><a href="https://research.google.com/pubs/pub41344.html" target="_blank" rel="noopener">https://research.google.com/pubs/pub41344.html</a></li>
<li>Borg Large-scale cluster<br><a href="https://research.google.com/pubs/pub43438.html" target="_blank" rel="noopener">https://research.google.com/pubs/pub43438.html</a></li>
<li>raft<br><a href="https://github.com/maemual/raft-zh_cn" target="_blank" rel="noopener">https://github.com/maemual/raft-zh_cn</a></li>
</ul>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>tools</tag>
      </tags>
  </entry>
  <entry>
    <title>OAuth SSO</title>
    <url>/2017/11/01/0218-OAuth%20SSO/</url>
    <content><![CDATA[<p><a href="https://oauth.net/2/" target="_blank" rel="noopener">https://oauth.net/2/</a><br><a href="http://ifeve.com/oauth2-tutorial-all/" target="_blank" rel="noopener">http://ifeve.com/oauth2-tutorial-all/</a><br><a href="http://blog.csdn.net/small_love/article/details/6664831" target="_blank" rel="noopener">http://blog.csdn.net/small_love/article/details/6664831</a></p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>未归档</tag>
      </tags>
  </entry>
  <entry>
    <title>JavaLib hutool</title>
    <url>/2017/11/01/0219-JavaLib%20hutool/</url>
    <content><![CDATA[<h2 id="官网"><a href="#官网" class="headerlink" title="官网"></a>官网<i class="em em-gift"></i></h2><p><a href="http://hutool.mydoc.io/" target="_blank" rel="noopener">http://hutool.mydoc.io/</a> </p>
<h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><ul>
<li>布隆过滤</li>
<li>克隆接口</li>
<li>类型转换</li>
<li>基于DFA有限自动机的多个关键字查找</li>
<li>HTTP客户端</li>
<li>IO和文件</li>
<li>反射代理类的简化（AOP切面实现）</li>
<li>Setting（一种扩展Properties的配置文件）</li>
<li>System（JVM和系统信息等）</li>
<li>WatchService的封装（文件变动监控）</li>
</ul>
<h2 id="比较有意思的几个用法"><a href="#比较有意思的几个用法" class="headerlink" title="比较有意思的几个用法"></a>比较有意思的几个用法</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">IdcardUtil.isValidCard(&quot;430104199207173518&quot;);</span><br><span class="line">NetUtil.localIpv4s();</span><br><span class="line">NetUtil.isUsableLocalPort(6379);</span><br><span class="line">NetUtil.isValidPort(6379);</span><br><span class="line">ReUtil.extractMulti(&quot;(\\w)aa(\\w)&quot;, content, &quot;$1-$2&quot;);</span><br><span class="line">XmlUtil.readXML();</span><br><span class="line">ZipUtil.gzip();</span><br><span class="line">Singleton.get(Dog.class);</span><br><span class="line"># 优先有限队列，大数据排序算法</span><br><span class="line">BoundedPriorityQueue&lt;Integer&gt; queue = new BoundedPriorityQueue&lt;Integer&gt;(5);</span><br><span class="line">Validator.validateChinese(&quot;我是一段zhongwen&quot;, &quot;内容中包含非中文&quot;);</span><br><span class="line"># 反射相关</span><br><span class="line">Demo cat = ProxyUtil.proxy(new DemoImpl(), TimeIntervalAspect.class);</span><br><span class="line">cat.demo();</span><br><span class="line"></span><br><span class="line">User user = new User();</span><br><span class="line">DynaBean bean = DynaBean.create(user);</span><br><span class="line">bean.set(&quot;name&quot;, &quot;李华&quot;);</span><br><span class="line">bean.set(&quot;age&quot;, 12);</span><br><span class="line">String name = bean.get(&quot;name&quot;);</span><br><span class="line">//执行指定方法</span><br><span class="line">bean.invoke(&quot;testMethod&quot;);</span><br><span class="line"></span><br><span class="line"># 加密算法相关</span><br><span class="line">//AES</span><br><span class="line">    String content = &quot;test中文&quot;;</span><br><span class="line">    byte[] key = SecureUtil.generateKey(SymmetricAlgorithm.AES.getValue()).getEncoded();</span><br><span class="line">    SymmetricCrypto aes = new SymmetricCrypto(SymmetricAlgorithm.AES, key);</span><br><span class="line">    byte[] encrypt = aes.encrypt(content);</span><br><span class="line">    byte[] decrypt = aes.decrypt(encrypt);</span><br><span class="line">    System.out.println(new String(decrypt));</span><br><span class="line">//RSA</span><br><span class="line">    RSA rsa = new RSA();</span><br><span class="line">    rsa.getPrivateKey();</span><br><span class="line">    rsa.getPrivateKeyBase64();</span><br><span class="line">    rsa.getPublicKey();</span><br><span class="line">    rsa.getPublicKeyBase64();</span><br><span class="line">    byte[] encrypt = rsa.encrypt(StrUtil.bytes(&quot;我是一段测试aaaa&quot;, CharsetUtil.CHARSET_UTF_8), KeyType.PublicKey);</span><br><span class="line">    byte[] decrypt = rsa.decrypt(encrypt, KeyType.PrivateKey);</span><br><span class="line">    System.out.println(new String(decrypt));</span><br><span class="line"></span><br><span class="line"># DFA算法，多次匹配正则</span><br><span class="line">WordTree tree = new WordTree();</span><br><span class="line">tree.add(&quot;xxx&quot;);</span><br><span class="line">tree.add(&quot;ss&quot;);</span><br><span class="line">tree.add(&quot;11&quot;);</span><br><span class="line">List&lt;String&gt; matchAll = tree.matchAll(&quot;xxx11ss&quot;, -1, false, false);</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>Reflaction gclib/reflectasm</title>
    <url>/2017/11/01/0220-Reflaction%20gclib-reflectasm/</url>
    <content><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">//最常见的反射使用</span><br><span class="line">    DemoImpl demo=new DemoImpl();</span><br><span class="line">    demo.setPassword(&quot;xxx&quot;);</span><br><span class="line">    demo.setUsername(&quot;xxx&quot;);</span><br><span class="line">    DemoImpl empty=new DemoImpl();</span><br><span class="line">    BeanUtils.copyProperties(empty,demo);</span><br><span class="line">    System.out.println(JSON.toJSONString(empty));</span><br></pre></td></tr></table></figure>
<h3 id="reflectasm"><a href="#reflectasm" class="headerlink" title="reflectasm"></a>reflectasm</h3><p>基于asm的封装，反射增加缓存，增强性能</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;com.esotericsoftware&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;reflectasm&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;1.11.3&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">User user=new User();</span><br><span class="line">MethodAccess access = MethodAccess.get(User.class);</span><br><span class="line">access.invoke(user,&quot;setUsername&quot;,&quot;demo&quot;);</span><br><span class="line">System.out.println(user.getUsername());</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>未归档</tag>
      </tags>
  </entry>
  <entry>
    <title>Funny Scratch</title>
    <url>/2017/11/02/0221-Funny%20Scratch/</url>
    <content><![CDATA[<h1 id="Scratch"><a href="#Scratch" class="headerlink" title="Scratch"></a>Scratch</h1><blockquote>
<p>MIT出的儿童教育语言挺有意思</p>
</blockquote>
<p><img src="http://img.sandseasoft.com/20171102150958797868976.png" alt="20171102150958797868976.png"></p>
<h1 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h1><ul>
<li><a href="https://scratch.mit.edu/projects/editor/?tip_bar=getStarted" target="_blank" rel="noopener">https://scratch.mit.edu/projects/editor/?tip_bar=getStarted</a></li>
<li><a href="https://scratch.mit.edu/projects/163680501/" target="_blank" rel="noopener">https://scratch.mit.edu/projects/163680501/</a></li>
</ul>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>devops</tag>
        <tag>about</tag>
      </tags>
  </entry>
  <entry>
    <title>ProGuard</title>
    <url>/2017/11/02/0222-ProGuard/</url>
    <content><![CDATA[<p><a href="https://www.guardsquare.com/en/products" target="_blank" rel="noopener">https://www.guardsquare.com/en/products</a></p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>未归档</tag>
      </tags>
  </entry>
  <entry>
    <title>Virtualization Cloud Foundry</title>
    <url>/2017/11/10/0227-Virtualization%20Cloud%20Foundry/</url>
    <content><![CDATA[<p><a href="https://www.cloudfoundry.org/" target="_blank" rel="noopener">https://www.cloudfoundry.org/</a></p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>未归档</tag>
      </tags>
  </entry>
  <entry>
    <title>Distributed Kubernetes</title>
    <url>/2017/11/10/0228-Distributed%20Kubernetes/</url>
    <content><![CDATA[<h2 id="入门学习"><a href="#入门学习" class="headerlink" title="入门学习"></a>入门学习</h2><p><a href="https://kubernetes.io/" target="_blank" rel="noopener">https://kubernetes.io/</a></p>
<h3 id="安装-minikube"><a href="#安装-minikube" class="headerlink" title="安装 minikube"></a>安装 minikube</h3><ul>
<li><p>参阅<br><a href="https://kubernetes.io/docs/tasks/tools/install-kubectl/#" target="_blank" rel="noopener">https://kubernetes.io/docs/tasks/tools/install-kubectl/#</a> install-with-homebrew-on-macos</p>
<ol>
<li>本机安装virtualbox</li>
<li><p>本机安装 kubectl  <figure class="highlight plain"><figcaption><span>install kubectl```</span></figcaption><table><tr><td class="code"><pre><span class="line">3. 本机安装 adsf ```brew install asdf/asdf plugin-add minikube/asdf install minikube xxxxx</span><br></pre></td></tr></table></figure></p>
</li>
<li><p>本机安装 <a href="https://github.com/kubernetes/minikube/releases" target="_blank" rel="noopener">minikube</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">asdf install minikube &lt;version&gt;</span><br></pre></td></tr></table></figure>
</li>
</ol>
</li>
</ul>
<p>启动<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">minikube start</span><br></pre></td></tr></table></figure></p>
<p>安装方法</p>
<ul>
<li>手动编译安装</li>
<li>kubectl</li>
<li>kubeadm</li>
<li></li>
</ul>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>未归档</tag>
      </tags>
  </entry>
  <entry>
    <title>API Gateway Caddy</title>
    <url>/2017/11/20/0229-API%20Gateway%20Caddy/</url>
    <content><![CDATA[<h1 id="Officer-Index"><a href="#Officer-Index" class="headerlink" title="Officer Index"></a>Officer Index</h1><ul>
<li><a href="https://caddyserver.com/docs/" target="_blank" rel="noopener">https://caddyserver.com/docs/</a></li>
</ul>
<h1 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h1><p>已经出caddy2了，更好用。</p>
<ol>
<li><p>直接复制binary到/usr/bin</p>
</li>
<li><p>提权 chmod 774 /usr/bin/caddy</p>
</li>
<li><p>sudo caddy run </p>
</li>
<li><p>编写Caddyfile</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">appnode.sandseasoft.com &#123;</span><br><span class="line">    respond &quot;Hello, world!&quot;</span><br><span class="line">&#125;</span><br><span class="line">www.sandseasoft.com &#123;</span><br><span class="line">    respond &quot;Hello, world!&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>sudo caddy start </p>
</li>
<li><p>sudo caddy reload</p>
</li>
</ol>
]]></content>
      <categories>
        <category>ops</category>
      </categories>
      <tags>
        <tag>caddy</tag>
      </tags>
  </entry>
  <entry>
    <title>高效沟通技巧</title>
    <url>/2017/11/25/0230-%E9%AB%98%E6%95%88%E6%B2%9F%E9%80%9A%E6%8A%80%E5%B7%A7/</url>
    <content><![CDATA[<h3 id="演讲技巧"><a href="#演讲技巧" class="headerlink" title="演讲技巧"></a>演讲技巧</h3><ul>
<li>自黑</li>
<li>讲故事</li>
<li>讲笑话<h3 id="高效沟通"><a href="#高效沟通" class="headerlink" title="高效沟通"></a>高效沟通</h3><h4 id="概念-乔哈里窗"><a href="#概念-乔哈里窗" class="headerlink" title="概念.乔哈里窗"></a>概念.乔哈里窗</h4></li>
</ul>
<p><table></table></p>
<p><tr></tr></p>
<p><td></td></p>
<p><td>自己知道</td></p>
<p><td>自己不知道</td><br></p>
<p><tr></tr></p>
<p><td>他人知道</td></p>
<p><td>公开区</td></p>
<p><td>盲区</td><br></p>
<p><tr></tr></p>
<p><td>他人不知道</td></p>
<p><td>隐藏区</td></p>
<p><td>封闭区</td><br><br></p>
<ol>
<li>常用谦逊的态度</li>
<li>注意控制自己情绪</li>
<li>时刻尊重他人<h4 id="概念-沟通"><a href="#概念-沟通" class="headerlink" title="概念.沟通"></a>概念.沟通</h4></li>
<li>要有明确的目标</li>
<li>达成共同的协议</li>
<li>沟通思想和感情</li>
</ol>
<p>沟通效果：8% 语言/55% 非语言/37% 声音音调</p>
<p>1.完整的倾听，专注<br>2.听取信息不打断<br>3.把对方重要的事情表达出来，确认一下<br>4.不做任何负面评论，不评价</p>
<ol>
<li>切记无用刻薄，反对性语调</li>
<li>切记尖锐讽刺</li>
<li><p>切记单调的回应</p>
</li>
<li><p>心态</p>
</li>
<li>关心</li>
<li>主动<h4 id="讲话的结构"><a href="#讲话的结构" class="headerlink" title="讲话的结构"></a>讲话的结构</h4></li>
</ol>
<ul>
<li>时钟计划（在之前，现在，之后）</li>
<li>环球计划（从头脑，心灵到双手）</li>
<li>三角计划（从韦小宝，乔峰，到杨过）</li>
</ul>
<p>1.技术战略与沟通/企业航母的领航者<br>2.专业建议/企业发展的规划者<br>3.技术管理/技术水平的打磨者 </p>
<h4 id="概念-DISC"><a href="#概念-DISC" class="headerlink" title="概念.DISC"></a>概念.DISC</h4><ul>
<li>Dominance 帝 主动果断大胆灵活 孙悟空  缓和下来</li>
<li>Influence 爱 热情激情乐观 猪八戒 统筹起来</li>
<li>Steadiness 思 提问谨慎客观质疑冷静 沙和尚 振奋起来</li>
<li>Conscientiousness 士 接受温和体恤容纳 唐僧 快乐起来</li>
</ul>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>manage</tag>
        <tag>about</tag>
      </tags>
  </entry>
  <entry>
    <title>Info Quant</title>
    <url>/2017/11/29/0231-Info%20Quant/</url>
    <content><![CDATA[<p>知乎简介<br><a href="https://www.zhihu.com/question/37745951" target="_blank" rel="noopener">https://www.zhihu.com/question/37745951</a><br><a href="https://www.zhihu.com/question/28354642" target="_blank" rel="noopener">https://www.zhihu.com/question/28354642</a><br>工具<br><a href="http://tushare.waditu.com/" target="_blank" rel="noopener">http://tushare.waditu.com/</a><br><a href="http://scikit-learn.org/stable/" target="_blank" rel="noopener">http://scikit-learn.org/stable/</a><br>参考平台<br><a href="http://quant.10jqka.com.cn/platform/html/home.html" target="_blank" rel="noopener">http://quant.10jqka.com.cn/platform/html/home.html</a><br><a href="https://uqer.io/home/" target="_blank" rel="noopener">https://uqer.io/home/</a><br><a href="http://quant.jd.com/" target="_blank" rel="noopener">http://quant.jd.com/</a><br><a href="https://www.joinquant.com/?f=home&amp;m=memu" target="_blank" rel="noopener">https://www.joinquant.com/?f=home&amp;m=memu</a><br><a href="https://guorn.com/" target="_blank" rel="noopener">https://guorn.com/</a><br><a href="https://www.ricequant.com/" target="_blank" rel="noopener">https://www.ricequant.com/</a><br><a href="http://www.tradeblazer.net/" target="_blank" rel="noopener">http://www.tradeblazer.net/</a><br>开源平台<br><a href="http://www.vnpy.org/pages/tutorial.html" target="_blank" rel="noopener">http://www.vnpy.org/pages/tutorial.html</a></p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>未归档</tag>
      </tags>
  </entry>
  <entry>
    <title>开源协同工具</title>
    <url>/2017/11/29/0232-%E5%BC%80%E6%BA%90%E5%8D%8F%E5%90%8C%E5%B7%A5%E5%85%B7/</url>
    <content><![CDATA[<p>CMS<br><a href="http://keystonejs.com/zh/" target="_blank" rel="noopener">http://keystonejs.com/zh/</a><br><a href="https://themes.gohugo.io/" target="_blank" rel="noopener">https://themes.gohugo.io/</a><br>Forum<br><a href="https://github.com/NodeBB/NodeBB" target="_blank" rel="noopener">https://github.com/NodeBB/NodeBB</a><br><a href="https://github.com/flarum/flarum" target="_blank" rel="noopener">https://github.com/flarum/flarum</a><br>Chat<br><a href="https://github.com/RocketChat/Rocket.Chat" target="_blank" rel="noopener">https://github.com/RocketChat/Rocket.Chat</a><br><a href="https://wekan.github.io/" target="_blank" rel="noopener">https://wekan.github.io/</a><br>Develop<br><a href="https://gogs.io" target="_blank" rel="noopener">https://gogs.io</a><br><a href="https://jenkins.io/2.0/" target="_blank" rel="noopener">https://jenkins.io/2.0/</a><br><a href="https://atlassian.net" target="_blank" rel="noopener">https://atlassian.net</a></p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>未归档</tag>
      </tags>
  </entry>
  <entry>
    <title>profile Btrace/Greys/Javosize</title>
    <url>/2017/11/29/0233-profile%20Btrace-Greys-Javosize/</url>
    <content><![CDATA[<h1 id="线上排查工具使用"><a href="#线上排查工具使用" class="headerlink" title="线上排查工具使用"></a>线上排查工具使用</h1><h2 id="Btrace"><a href="#Btrace" class="headerlink" title="Btrace"></a>Btrace</h2><p><a href="https://github.com/btraceio/btrace" target="_blank" rel="noopener">https://github.com/btraceio/btrace</a></p>
<h2 id="Greys"><a href="#Greys" class="headerlink" title="Greys"></a>Greys</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 连接greys ，默认开启远程3658端口</span><br><span class="line">sh greys.sh 19420@127.0.0.1:3658</span><br><span class="line"># 获取当前类的实例</span><br><span class="line">sc com.tech84.conf.Info</span><br><span class="line"># 获取当前类的方法</span><br><span class="line">sm com.tech84.conf.Info</span><br><span class="line"># 监控某个方法的调用</span><br><span class="line">monitor -c 5 com.tech84.Run list</span><br><span class="line"># 获取请求链路信息</span><br><span class="line">trace com.tech84.Run list</span><br><span class="line"># 获取请求链路信息 带过滤器</span><br><span class="line">ptrace com.tech84.Run list</span><br><span class="line"># 查看某个方法的调用栈</span><br><span class="line">stack com.tech84.Run list</span><br><span class="line"># 查看某个方法调用的数据</span><br><span class="line">watch -s com.tech84.Run list params[0]|returnObj</span><br><span class="line"># 获取jvm信息</span><br><span class="line">jvm</span><br><span class="line"># 获取cpu占用最高的线程</span><br><span class="line">top</span><br><span class="line"># 重置所有被asm改变的类</span><br><span class="line">reset</span><br></pre></td></tr></table></figure>
<p><img src="http://img.sandseasoft.com/20171129151195349134768.png" alt="20171129151195349134768.png"></p>
<h2 id="Javosize"><a href="#Javosize" class="headerlink" title="Javosize"></a>Javosize</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">## 可以查询所有接口请求的性能状况</span><br><span class="line">cd apps &amp;&amp; cat application</span><br><span class="line">## 查询内存状况</span><br><span class="line">cd memory &amp;&amp; ls</span><br><span class="line">## 查询死锁 和 full gc</span><br><span class="line">cd problems &amp;&amp; ls</span><br><span class="line">## 查询内存消耗</span><br><span class="line">cd repository &amp;&amp; exec TOP_MEMORY_CONSUMERS 5 com.tech84.* false</span><br><span class="line">## 查询执行最慢的方法</span><br><span class="line">cd repository &amp;&amp; exec FIND_SLOW_METHODS_EXECUTING_CLASS  com.tech84.* 10 10000</span><br><span class="line">## 查询thread dumpp</span><br><span class="line">cd threads &amp;&amp; help</span><br></pre></td></tr></table></figure>
<h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><p><a href="https://yq.aliyun.com/articles/69520?utm_content=m_10360" target="_blank" rel="noopener">https://yq.aliyun.com/articles/69520?utm_content=m_10360</a></p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>未归档</tag>
      </tags>
  </entry>
  <entry>
    <title>spring-integration</title>
    <url>/2017/11/30/0234-spring-integration/</url>
    <content><![CDATA[<p><a href="http://blog.csdn.net/w_x_z_/article/details/53316618" target="_blank" rel="noopener">http://blog.csdn.net/w_x_z_/article/details/53316618</a><br><a href="http://projects.spring.io/spring-integration/" target="_blank" rel="noopener">http://projects.spring.io/spring-integration/</a><br><a href="https://spring.io/guides/gs/integration/" target="_blank" rel="noopener">https://spring.io/guides/gs/integration/</a><br><a href="https://docs.spring.io/spring-integration/reference/htmlsingle/#" target="_blank" rel="noopener">https://docs.spring.io/spring-integration/reference/htmlsingle/#</a> amqp-delay</p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>未归档</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringCloud Dataflow</title>
    <url>/2017/11/30/0235-SpringCloud%20Dataflow/</url>
    <content><![CDATA[<p><a href="https://docs.spring.io/spring-cloud-dataflow/docs/current/reference/htmlsingle/#" target="_blank" rel="noopener">https://docs.spring.io/spring-cloud-dataflow/docs/current/reference/htmlsingle/#</a> configuration</p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>未归档</tag>
      </tags>
  </entry>
  <entry>
    <title>LogAnalyize ElasticSearch</title>
    <url>/2017/12/01/0237-LogAnalyize%20ElasticSearch/</url>
    <content><![CDATA[<p>安装条件<br>增加一个新账户 no root<br>安装完成后报错<br>[1]: max number of threads [2048] for user [elsearch] is too low, increase to at least [4096]<br>[2]: system call filters failed to install; check the logs and fix your configuration or disable system call filters at your own risk</p>
<p>解决1<br><a href="https://www.elastic.co/guide/en/elasticsearch/reference/6.0/max-number-of-threads.html" target="_blank" rel="noopener">https://www.elastic.co/guide/en/elasticsearch/reference/6.0/max-number-of-threads.html</a><br>ulimit -u 4096<br>解决2<br>elasticsearch.yml 增加<br>bootstrap.memory_lock: false<br>bootstrap.system_call_filter: false<br>解决<br>groupadd elsearch<br>useradd elsearch -g elsearch -p elasticsearch<br>解决<br>/etc/security/limits.d/90-nproc.conf </p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>未归档</tag>
      </tags>
  </entry>
  <entry>
    <title>量化系统 架构漫游</title>
    <url>/2017/12/25/0238-%E9%87%8F%E5%8C%96%E7%B3%BB%E7%BB%9F%20%E6%9E%B6%E6%9E%84%E6%BC%AB%E6%B8%B8/</url>
    <content><![CDATA[<h1 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h1><p>通过对历史数据的回测验证 算法本身的可行性。<br>执行量化交易模型引擎<br>可以扩展为 智能选股，投顾其他业务模型伸展。</p>
<h1 id="场景"><a href="#场景" class="headerlink" title="场景"></a>场景</h1><ul>
<li>数据接口<ul>
<li>开源数据tushare</li>
<li>恒生指数数据</li>
<li>新闻消息数据</li>
</ul>
</li>
<li>选股接口</li>
<li>算法库接口</li>
<li>算法编辑平台</li>
<li>回测接口</li>
<li>实盘接口<ul>
<li>开户下单</li>
</ul>
</li>
<li>绩效指标</li>
<li>智能投顾</li>
<li>培训课程<h1 id="业务价值"><a href="#业务价值" class="headerlink" title="业务价值"></a>业务价值</h1><img src="http://img.sandseasoft.com/20171226151427117655440.png" alt="20171226151427117655440.png"></li>
</ul>
<h1 id="架构"><a href="#架构" class="headerlink" title="架构"></a>架构</h1><ul>
<li>event</li>
<li>trader</li>
<li>notebook</li>
</ul>
<h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><ul>
<li>SpringCloud</li>
<li>python jupyter</li>
<li><p>nodejs 代码混编</p>
</li>
<li><p>高可用/高并发</p>
</li>
<li>一人一条业务线，基于大平台下的devops</li>
</ul>
<h1 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h1><ul>
<li><a href="https://zhuanlan.zhihu.com/p/26179943" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/26179943</a></li>
<li><a href="https://www.ricequant.com/#" target="_blank" rel="noopener">https://www.ricequant.com/#</a> solution</li>
<li><a href="https://www.joinquant.net" target="_blank" rel="noopener">https://www.joinquant.net</a></li>
<li><a href="http://www.tradeblazer.net/" target="_blank" rel="noopener">http://www.tradeblazer.net/</a></li>
</ul>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>Quants Demo</title>
    <url>/2017/12/27/0239-Quants%20Demo/</url>
    <content><![CDATA[<h1 id="炒股"><a href="#炒股" class="headerlink" title="炒股"></a>炒股</h1><p>基本理解</p>
<p>FIX接口 CTP接口<br>Web版实盘交易</p>
<h1 id="量化流程"><a href="#量化流程" class="headerlink" title="量化流程"></a>量化流程</h1><p>数据源-&gt; 筛选-&gt; 公式-&gt; 回测-&gt; 实盘交易</p>
<h1 id="工具使用"><a href="#工具使用" class="headerlink" title="工具使用"></a>工具使用</h1><ul>
<li>Anaconda3、tushare</li>
<li>Numpy/Scipy/Matplotlib/Pandas</li>
<li>jupter/pyspider</li>
<li>Zipline</li>
<li>easytrader</li>
</ul>
<h1 id="其他相关"><a href="#其他相关" class="headerlink" title="其他相关"></a>其他相关</h1><ul>
<li>level1、level2 数据</li>
<li>vwap、twap 交易</li>
<li>对冲</li>
</ul>
<h1 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h1><ul>
<li><a href="https://www.zhihu.com/question/53916316" target="_blank" rel="noopener">https://www.zhihu.com/question/53916316</a></li>
<li><a href="http://blog.sina.com.cn/s/blog_163a2b9700102wdy0.html" target="_blank" rel="noopener">http://blog.sina.com.cn/s/blog_163a2b9700102wdy0.html</a></li>
<li><a href="http://www.ql18.com.cn/" target="_blank" rel="noopener">http://www.ql18.com.cn/</a></li>
<li><a href="https://www.zhihu.com/question/26730184" target="_blank" rel="noopener">https://www.zhihu.com/question/26730184</a></li>
<li><a href="https://github.com/shidenggui/easytrader" target="_blank" rel="noopener">https://github.com/shidenggui/easytrader</a></li>
</ul>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>未归档</tag>
      </tags>
  </entry>
  <entry>
    <title>SteanLink+XboxOneS Wireless Controller  Guide</title>
    <url>/2018/01/10/0240-SteanLink+XboxOneS%20Wireless%20Controller%20%20Guide/</url>
    <content><![CDATA[<p>SteanLink 盒子在国内的自动更新被墙了，老版本的固件不兼容 S版本的蓝牙手柄，都需要更新到最新。</p>
<h2 id="SteamLink更新方法"><a href="#SteamLink更新方法" class="headerlink" title="SteamLink更新方法"></a>SteamLink更新方法</h2><blockquote>
<p><a href="https://steamcommunity.com/app/353380/discussions/0/451852225140671817/?ctp=2" target="_blank" rel="noopener">https://steamcommunity.com/app/353380/discussions/0/451852225140671817/?ctp=2</a></p>
</blockquote>
<ol>
<li>大意就是到 <a href="http://media.steampowered.com/steamlink/06_2015/public_builds.txt" target="_blank" rel="noopener">链接</a>请求里面找最新的固件号，拼接下载最新的固件</li>
<li>做u盘启动盘</li>
<li>插入steam link通电重启</li>
</ol>
<h2 id="xboxones手柄更新"><a href="#xboxones手柄更新" class="headerlink" title="xboxones手柄更新"></a>xboxones手柄更新</h2><ol>
<li>win10 store下载xbox附件，打开插上有线手柄，更新驱动</li>
</ol>
<p>PS：更新完成后就可以使用了，如果需要老版本的xboxone 需要使用官方支持 virtualhere for steamlink</p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>tools</tag>
      </tags>
  </entry>
  <entry>
    <title>项目管理</title>
    <url>/2018/01/11/0241-%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/</url>
    <content><![CDATA[<p>协议 caldav  carddav  具体实现 radicale<br>软件 omniplan  fantiscal  wunderlist webcal-sync</p>
<p>可以全平台日历，通讯录，计划同步</p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>未归档</tag>
      </tags>
  </entry>
  <entry>
    <title>Using Mariadb For Docker</title>
    <url>/2018/03/01/0243-Using%20Mariadb%20For%20Docker/</url>
    <content><![CDATA[<ol>
<li>daocloud 安装 docker/docker-compose</li>
<li>docker-compose.yml<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#  Use root/example as user/password credentials</span><br><span class="line">version: &apos;3.1&apos;</span><br><span class="line"></span><br><span class="line">services:</span><br><span class="line"></span><br><span class="line">  db:</span><br><span class="line">    image: mariadb</span><br><span class="line">    restart: always</span><br><span class="line">    environment:</span><br><span class="line">      MYSQL_ROOT_PASSWORD: xxxx </span><br><span class="line">    ports:</span><br><span class="line">      - 3306:3306</span><br><span class="line"></span><br><span class="line">  adminer:</span><br><span class="line">    image: adminer</span><br><span class="line">    restart: always</span><br><span class="line">    ports:</span><br><span class="line">      - 8080:8080</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>3.docker-compose up -d</p>
<ol start="4">
<li>docker exec -it xxxxx bash</li>
<li>nano /etc/my.cnf<br>add<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#  在[mysqld]标签下添加下面内容</span><br><span class="line">character-set-server = utf8</span><br><span class="line">#  在[client]标签下添加下面内容</span><br><span class="line">default-character-set=utf8</span><br><span class="line">#  在[mysql]标签下添加下面内容</span><br><span class="line">default-character-set=utf8</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>6.sql commond<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">SHOW VARIABLES LIKE &apos;character%&apos;</span><br></pre></td></tr></table></figure></p>
<p>全部都是 utf8  finish</p>
]]></content>
      <categories>
        <category>ops</category>
      </categories>
      <tags>
        <tag>mariadb</tag>
      </tags>
  </entry>
  <entry>
    <title>面试入场-锦囊</title>
    <url>/2018/03/29/0244-%E9%9D%A2%E8%AF%95%E5%85%A5%E5%9C%BA-%E9%94%A6%E5%9B%8A/</url>
    <content><![CDATA[<p>Q: Java线程池介绍<br><img src="http://img.sandseasoft.com/20180329152228342770645.png" alt="20180329152228342770645.png"><br>Q: Threadlocal 介绍<br>ThreadLocal的作用是提供线程内的局部变量，这种变量在线程的生命周期内起作用，减少同一个线程内多个函数或者组件之间一些公共变量的传递的复杂度。<br>Q: 分布式事务<br>事务特性ACID<br>由于 CAP 理论(一致性,可用性,分区容错性), 我们提出BASE理论理论保证数据的最终一致性.<br>有两种方案: 2PC,TCC,事务消息 重点讲 TCC<br><img src="http://img.sandseasoft.com/20180329152228388219938.png" alt="20180329152228388219938.png"><br>Q:MQ队列 </p>
<ul>
<li>Redis</li>
<li>ActiveMQ</li>
<li>RabbitMQ </li>
<li>kafka(RocketMQ)</li>
</ul>
<p>Q:Redis<br> 常用的数据结构 List、Map、Set 支持 queue,message</p>
<p>高可用的方法</p>
<ul>
<li>Sentinel (主从同步)</li>
<li>Cluster (主从同步)<br>高并发</li>
<li>Redis Sharding (客户端分片)</li>
<li>twemproxy(twtter 的方案</li>
<li>codis(</li>
</ul>
<p>Q: JVM 调优<br>内存模型<br><img src="http://img.sandseasoft.com/2018032915222848999510.png" alt="2018032915222848999510.png"></p>
<ul>
<li>jstack jstat </li>
<li>jprofiler</li>
<li>slow sql<br>主要是永久带内存调整, 一般线上 crash 是 perm 区默认128mb,因为 spring 启动占用大量, cglib 字节码生成占用大量, 字符串占用大量.</li>
</ul>
<p>Q:设计模式</p>
<ul>
<li>单例模式</li>
<li>工厂模式</li>
<li>责任链模式</li>
</ul>
<p>Q:数据库优化经验</p>
<ul>
<li>slowsql 查询</li>
<li>尽可能不要使用子查询</li>
<li>尽可能不要使用运算符</li>
<li>联表查询注意使用使用索引, 如果没 explian 检查追加索引</li>
<li>insert 编程 batch insert( 开启事务</li>
<li>不要再循环里面写查sql 方法, 批量获取结果</li>
<li>尽可能不要使用delete ,可以用逻辑删除</li>
<li>分表分库</li>
<li>物理性能加强(买更好的机器!!</li>
<li>上线安全, 上线 table 更新注意审查</li>
</ul>
<p>Q:Session共享</p>
<ul>
<li>redis</li>
<li>jwt</li>
<li>oauth2.0</li>
<li>sso</li>
</ul>
<p>Q:抢购的解决方案</p>
<ul>
<li>使用排队模型</li>
<li>使用分布式锁( redis 可以实现原子锁<br>Q:单一系统 拆分为 微服务的过程 经验</li>
</ul>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>未归档</tag>
      </tags>
  </entry>
  <entry>
    <title>SDR</title>
    <url>/2018/04/03/0245-SDR/</url>
    <content><![CDATA[<p><a href="https://airspy.com/download/" target="_blank" rel="noopener">https://airspy.com/download/</a><br><a href="https://www.rtl-sdr.com/rtl-sdr-quick-start-guide/" target="_blank" rel="noopener">https://www.rtl-sdr.com/rtl-sdr-quick-start-guide/</a></p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>未归档</tag>
      </tags>
  </entry>
  <entry>
    <title>Guide WebRTC</title>
    <url>/2018/04/18/0246-Guide%20WebRTC/</url>
    <content><![CDATA[<h3 id="核心接口"><a href="#核心接口" class="headerlink" title="核心接口"></a>核心接口</h3><p><a href="https://webrtc.org" target="_blank" rel="noopener">https://webrtc.org</a><br><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/MediaDevices/getUserMedia" target="_blank" rel="noopener">https://developer.mozilla.org/zh-CN/docs/Web/API/MediaDevices/getUserMedia</a></p>
<p>有几个条件</p>
<ul>
<li>必须使用 https 协议 origin </li>
<li>必须有 stun 服务器, 一般私服有 </li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">var yourVideo = document.getElementById(&quot;yours&quot;);</span><br><span class="line">var theirVideo = document.getElementById(&quot;theirs&quot;);</span><br><span class="line">var yourConnection, theirConnection;</span><br><span class="line"></span><br><span class="line">if (hasUserMedia()) &#123;</span><br><span class="line"></span><br><span class="line">    navigator.mediaDevices.getUserMedia(&#123; video: true, audio: false &#125;)</span><br><span class="line">    </span><br><span class="line">    .then(function(stream) &#123;</span><br><span class="line">        /* 使用这个stream stream */</span><br><span class="line">    yourVideo.src = window.URL.createObjectURL(this.stream);</span><br><span class="line">            if (hasRTCPeerConnection()) &#123;</span><br><span class="line">                // 稍后我们实现 startPeerConnection</span><br><span class="line">                startPeerConnection(this.stream);</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                alert(&quot;没有RTCPeerConnection API&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">&#125;)</span><br><span class="line">.catch(function(err) &#123;</span><br><span class="line">  /* 处理error */</span><br><span class="line">    console.log(err);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">### 服务器搭建参考</span><br><span class="line">* Collider Server</span><br><span class="line">* STUN/TURN/ICE Server</span><br></pre></td></tr></table></figure>
<h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://github.com/muaz-khan/WebRTC-Experiment" target="_blank" rel="noopener">https://github.com/muaz-khan/WebRTC-Experiment</a><br><a href="https://github.com/webrtc/samples" target="_blank" rel="noopener">https://github.com/webrtc/samples</a><br><a href="https://github.com/andyet/SimpleWebRTC" target="_blank" rel="noopener">https://github.com/andyet/SimpleWebRTC</a><br><a href="https://github.com/webrtc/apprtc" target="_blank" rel="noopener">https://github.com/webrtc/apprtc</a></p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>未归档</tag>
      </tags>
  </entry>
  <entry>
    <title>Guide Nginx rtmp-module</title>
    <url>/2018/04/18/0247-Guide%20Nginx%20rtmp-module/</url>
    <content><![CDATA[<p>服务器请使用 nginx rtmp-module架设，架设好了用 ffmpeg 命令行来测试播摄像头。主播客户端请使用rtmp进行推流给rtmp-module，粉丝请使用 rtmp / flv + http stream 进行观看，PC-web端的粉丝请使用 Flash NetStream来观看，移动 web端的粉丝请使用 hls / m3u8 来观看。如果你试验成功要上线了，出现压力了，那么把nginx分层（接入层+交换层），稍微改两行代码，如果资金不足以全国部署服务器，那么把 nginx-rtmp-module 换为 cdn 的标准直播服务，也可以直接调过 nginx，一开始就用 cdn 的直播服务，比如网宿（斗鱼的直播服务提供商）。</p>
<p>作者：韦易笑<br>链接：<a href="https://www.zhihu.com/question/25497090/answer/72397450" target="_blank" rel="noopener">https://www.zhihu.com/question/25497090/answer/72397450</a><br>来源：知乎<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>未归档</tag>
      </tags>
  </entry>
  <entry>
    <title>Server Alfresco</title>
    <url>/2018/05/10/0248-Server%20Alfresco/</url>
    <content><![CDATA[<h1 id="企业内容管理系统"><a href="#企业内容管理系统" class="headerlink" title="企业内容管理系统"></a>企业内容管理系统</h1><p>梦寐以求的知识库，多媒体文件归档库，支持模糊查询，社区版本足够好用。<br>可以用来文档归档，在编写新文档需要查询对应数据的时候可以到目录下查询，支持在线查看，编辑锁定。虽然和现在新的协同工具有所落差，但是对 office 支持友好，原生支持不需要转换，模糊查询也够强大，和 confluence 互补，个人认为 Alfresco、Conflunce、禅知 可以作为协同工作三剑客，足够应付日常工作需要。</p>
<p></p>
<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p><a href="https://sourceforge.mirrorservice.org/a/al/alfresco/" target="_blank" rel="noopener">https://sourceforge.mirrorservice.org/a/al/alfresco/</a></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">chmod a+x xxx.bin</span><br><span class="line">./xx.bin</span><br></pre></td></tr></table></figure>
<p>根目录下 sh alfresco.sh start</p>
<h2 id="tips"><a href="#tips" class="headerlink" title="tips"></a>tips</h2><ul>
<li>支持 webdav上传，目录 /alfresco/webdav</li>
<li>门户查询， /share</li>
<li>activiti 也是他们家的了</li>
</ul>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>未归档</tag>
      </tags>
  </entry>
  <entry>
    <title>Distributed Guide Hive、Impala</title>
    <url>/2018/06/17/0249-Distributed%20Guide%20Hive%E3%80%81Impala/</url>
    <content><![CDATA[<p>Hive<br>beeline<br>Impala<br>impala-shell<br>HUE</p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>未归档</tag>
      </tags>
  </entry>
  <entry>
    <title>Hybird Framwork Cordova</title>
    <url>/2018/06/17/0250-Hybird%20Framwork%20Cordova/</url>
    <content><![CDATA[<p><a href="http://cordova.apache.org/plugins/" target="_blank" rel="noopener">http://cordova.apache.org/plugins/</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install -g cordova</span><br><span class="line">cordova create MyApp</span><br><span class="line">cordova platform add browser</span><br><span class="line">cordova run browser</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>未归档</tag>
      </tags>
  </entry>
  <entry>
    <title>FED Build Tools Webpack4</title>
    <url>/2018/06/24/0251-FED%20Build%20Tools%20Webpack4/</url>
    <content><![CDATA[<h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://webpack.js.org/guides/getting-started/" target="_blank" rel="noopener">https://webpack.js.org/guides/getting-started/</a><br><a href="https://webpack.docschina.org/concepts/" target="_blank" rel="noopener">https://webpack.docschina.org/concepts/</a></p>
<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd demo</span><br><span class="line">npm init -y</span><br><span class="line">npm install webpack webpack-cli webpack-dev-server --save-dev</span><br></pre></td></tr></table></figure>
<h3 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h3><p>需要手动创建的核心文件</p>
<ul>
<li>index.html 入口模板文件</li>
<li>main.js 入口 js 文件</li>
<li>webpack.dev.config.js</li>
</ul>
<p><img src="http://img.sandseasoft.com/20180625152985796284604.png" alt="20180625152985796284604.png"></p>
<h3 id="package-json"><a href="#package-json" class="headerlink" title="package.json"></a>package.json</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;name&quot;: &quot;webpack_demo&quot;,</span><br><span class="line">  &quot;version&quot;: &quot;1.0.0&quot;,</span><br><span class="line">  &quot;description&quot;: &quot;&quot;,</span><br><span class="line">  &quot;main&quot;: &quot;main.js&quot;,</span><br><span class="line">  &quot;scripts&quot;: &#123;</span><br><span class="line">    &quot;dev&quot;: &quot;webpack-dev-server  --mode development --config=build/webpack.dev.config.js&quot;,</span><br><span class="line">    &quot;test&quot;: &quot;webpack  --mode production --config=build/webpack.dev.config.js&quot;,</span><br><span class="line">    &quot;prod&quot;: &quot;webpack  --mode production --config=build/webpack.dev.config.js&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;keywords&quot;: [],</span><br><span class="line">  &quot;author&quot;: &quot;&quot;,</span><br><span class="line">  &quot;license&quot;: &quot;ISC&quot;,</span><br><span class="line">  &quot;devDependencies&quot;: &#123;</span><br><span class="line">    &quot;babel-core&quot;: &quot;^6.26.3&quot;,</span><br><span class="line">    &quot;babel-loader&quot;: &quot;^7.1.4&quot;,</span><br><span class="line">    &quot;babel-preset-es2015&quot;: &quot;^6.24.1&quot;,</span><br><span class="line">    &quot;babel-preset-react&quot;: &quot;^6.24.1&quot;,</span><br><span class="line">    &quot;css-loader&quot;: &quot;^0.28.11&quot;,</span><br><span class="line">    &quot;file-loader&quot;: &quot;^1.1.11&quot;,</span><br><span class="line">    &quot;html-webpack-plugin&quot;: &quot;^3.2.0&quot;,</span><br><span class="line">    &quot;less&quot;: &quot;^3.0.4&quot;,</span><br><span class="line">    &quot;less-loader&quot;: &quot;^4.1.0&quot;,</span><br><span class="line">    &quot;style-loader&quot;: &quot;^0.21.0&quot;,</span><br><span class="line">    &quot;url-loader&quot;: &quot;^1.0.1&quot;,</span><br><span class="line">    &quot;webpack&quot;: &quot;^4.12.1&quot;,</span><br><span class="line">    &quot;webpack-cli&quot;: &quot;^3.0.8&quot;,</span><br><span class="line">    &quot;webpack-dev-server&quot;: &quot;^3.1.4&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;dependencies&quot;: &#123;</span><br><span class="line">    &quot;lodash&quot;: &quot;^4.17.10&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="webpack-dev-config-js"><a href="#webpack-dev-config-js" class="headerlink" title="webpack.dev.config.js"></a>webpack.dev.config.js</h3><p>webpack4的配置文件由几个部分组成</p>
<ul>
<li>mode 编译模式，选择 prod 会有优化压缩能力</li>
<li>entry 核心 js 入口</li>
<li>output 输出 js 出口</li>
<li>module 编译过程应用的加载模块</li>
<li>plugins 构建输出过程的家在模块</li>
<li>devServer 开发热重载过程中的模块<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">const path = require(&apos;path&apos;);</span><br><span class="line">const uglify = require(&apos;uglifyjs-webpack-plugin&apos;);</span><br><span class="line">const HtmlWebpackPlugin = require(&apos;html-webpack-plugin&apos;);</span><br><span class="line"></span><br><span class="line">//安装webpack webpack-cli webpack-dev-server 模块</span><br><span class="line">module.exports = &#123;</span><br><span class="line">    //启动模式 development production</span><br><span class="line">    mode: &apos;development&apos;,</span><br><span class="line">    //入口文件</span><br><span class="line">    entry: &#123;</span><br><span class="line">        main: &apos;./src/main.js&apos;,</span><br><span class="line">        main2: &apos;./src/main2.js&apos;,</span><br><span class="line">    &#125;,</span><br><span class="line">    //输出文件位置</span><br><span class="line">    output: &#123;</span><br><span class="line">        path: path.resolve(__dirname, &apos;../dist&apos;),</span><br><span class="line">        filename: &quot;bundle.[name].js&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    //调用编译模块</span><br><span class="line">    module: &#123;</span><br><span class="line">        rules: [</span><br><span class="line">            //css 加载  style-loader css-loader</span><br><span class="line">            &#123;</span><br><span class="line">                test: /\.css$/,</span><br><span class="line">                use: [</span><br><span class="line">                    &#123;loader: &quot;style-loader&quot;&#125;,</span><br><span class="line">                    &#123;loader: &quot;css-loader&quot;&#125;</span><br><span class="line">                ]</span><br><span class="line"></span><br><span class="line">            &#125;,</span><br><span class="line">            //图片处理</span><br><span class="line">            &#123;</span><br><span class="line">                test: /\.(png|jpg|gif|jpeg)/,  //是匹配图片文件后缀名称</span><br><span class="line">                use: [&#123;</span><br><span class="line">                    loader: &apos;url-loader&apos;, //是指定使用的loader和loader的配置参数</span><br><span class="line">                    options: &#123;</span><br><span class="line">                        limit: 500  //是把小于500B的文件打成Base64的格式，写入JS</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;]</span><br><span class="line">            &#125;,</span><br><span class="line">            //less less-loader</span><br><span class="line">            &#123;</span><br><span class="line">                test: /\.less$/,</span><br><span class="line">                use: [&#123;</span><br><span class="line">                    loader: &quot;style-loader&quot; // creates style nodes from JS strings</span><br><span class="line">                &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line">                        loader: &quot;css-loader&quot; // translates CSS into CommonJS</span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line">                        loader: &quot;less-loader&quot; // compiles Less to CSS</span><br><span class="line">                    &#125;]</span><br><span class="line">            &#125;,</span><br><span class="line">            //es6 配置 babel-core babel-loader babel-preset-es2015 babel-preset-react</span><br><span class="line">            &#123;</span><br><span class="line">                test: /\.(jsx|js)$/,</span><br><span class="line">                use: &#123;</span><br><span class="line">                    loader: &apos;babel-loader&apos;,</span><br><span class="line">                &#125;,</span><br><span class="line">                exclude: /node_modules/</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">    //调用打包插件</span><br><span class="line">    plugins: [</span><br><span class="line">        //压缩插件 默认集成</span><br><span class="line">        new uglify(),</span><br><span class="line">        //编译生产打包插件</span><br><span class="line">        new HtmlWebpackPlugin(&#123;</span><br><span class="line">            //是对html文件进行压缩</span><br><span class="line">            minify: &#123;</span><br><span class="line">                //removeAttrubuteQuotes是却掉属性的双引号。</span><br><span class="line">                removeAttributeQuotes: true</span><br><span class="line">            &#125;,</span><br><span class="line">            //为了开发中js有缓存效果，所以加入hash，这样可以有效避免缓存JS。</span><br><span class="line">            hash: true,</span><br><span class="line">            //是要打包的html模版路径和文件名称</span><br><span class="line">            template: &apos;./src/index.html&apos;</span><br><span class="line"></span><br><span class="line">        &#125;)</span><br><span class="line">    ],</span><br><span class="line">    //调用开发模式</span><br><span class="line">    devServer: &#123;</span><br><span class="line">        contentBase: path.resolve(__dirname, &apos;../dist&apos;),</span><br><span class="line">        host: &quot;0.0.0.0&quot;,</span><br><span class="line">        compress: true,</span><br><span class="line">        port: 8999</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="babelrc"><a href="#babelrc" class="headerlink" title=".babelrc"></a>.babelrc</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;presets&quot;:[&quot;react&quot;,&quot;es2015&quot;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>nodejs</tag>
      </tags>
  </entry>
  <entry>
    <title>Virtualaztion Guide oVirt</title>
    <url>/2018/07/03/0252-Virtualaztion%20Guide%20oVirt/</url>
    <content><![CDATA[<p><a href="https://www.ovirt.org/" target="_blank" rel="noopener">https://www.ovirt.org/</a></p>
<h3 id="系统要求"><a href="#系统要求" class="headerlink" title="系统要求"></a>系统要求</h3><p>Minimum Hardware<br>4 GB memory<br>20 GB disk space<br>Optional Hardware<br>Network storage<br>Supported OSes (Engine)<br>CentOS Linux 7.5<br>Red Hat Enterprise Linux 7.5<br>Scientific Linux 7.5</p>
<h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 关闭防火墙</span><br><span class="line">systemctl stop firewalld</span><br><span class="line">systemctl disable firewalld</span><br><span class="line">setenforce 0</span><br><span class="line">vi /etc/selinux/config</span><br><span class="line">SELINUX=disabled</span><br><span class="line"></span><br><span class="line"># 安装</span><br><span class="line">sudo yum install http://resources.ovirt.org/pub/yum-repo/ovirt-release42.rpm</span><br><span class="line">sudo yum install -y ovirt-engine</span><br><span class="line">sudo engine-setup</span><br><span class="line"></span><br><span class="line"># 安装node</span><br><span class="line">yum install http://resources.ovirt.org/pub/yum-repo/ovirt-release42.rpm</span><br><span class="line">yum -y install vdsm</span><br></pre></td></tr></table></figure>
<h2 id="使用-1"><a href="#使用-1" class="headerlink" title="使用"></a>使用</h2><p><img src="http://img.sandseasoft.com/20180703153062772853195.png" alt="20180703153062772853195.png"></p>
<h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ul>
<li><a href="https://www.jianshu.com/p/9d699c05c17b" target="_blank" rel="noopener">https://www.jianshu.com/p/9d699c05c17b</a></li>
<li><a href="https://www.ovirt.org/documentation/" target="_blank" rel="noopener">https://www.ovirt.org/documentation/</a></li>
</ul>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>未归档</tag>
      </tags>
  </entry>
  <entry>
    <title>AndroidStudio 开发漫游</title>
    <url>/2018/08/10/AndroidStudio%20%E5%BC%80%E5%8F%91%E6%BC%AB%E6%B8%B8/</url>
    <content><![CDATA[<h1 id="Android-语法"><a href="#Android-语法" class="headerlink" title="Android 语法"></a>Android 语法</h1><h1 id="框架"><a href="#框架" class="headerlink" title="框架"></a>框架</h1><h1 id="AndroidStudio-开发"><a href="#AndroidStudio-开发" class="headerlink" title="AndroidStudio 开发"></a>AndroidStudio 开发</h1><h2 id="新建项目"><a href="#新建项目" class="headerlink" title="新建项目"></a>新建项目</h2><ul>
<li><p>UI 控件 Acitvity、res-&gt;layout-&gt;activity_main.xml</p>
</li>
<li><p>授权文件 manifests-&gt;xml 文件</p>
</li>
</ul>
<h2 id="使用Gradle"><a href="#使用Gradle" class="headerlink" title="使用Gradle"></a>使用Gradle</h2><h1 id="控件-WebView和-JSBright"><a href="#控件-WebView和-JSBright" class="headerlink" title="控件-WebView和 JSBright"></a>控件-WebView和 JSBright</h1><h1 id="关于网络翻墙"><a href="#关于网络翻墙" class="headerlink" title="关于网络翻墙"></a>关于网络翻墙</h1><p>google 的<a href="https://dl.google.com/dl/android/maven2/index.html" target="_blank" rel="noopener">镜像库</a>很扯，各种 timeout，几个地方设置代理，SSR 的通道。发现一个规律，这个谷歌的服务器在美国的白天极其的快，估计他们那边晚上会减小带宽。所以要 cache 就只能通宵搞了。</p>
<ul>
<li><p>Proxifier 代理，设置 HTTPS 代理 0.0.0.0 1087 HTTPS</p>
</li>
<li><p>Settings HTTPS Proxy</p>
</li>
<li><p>gradle.properties 增加参数代理 maven google()</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">systemProp.https.proxyHost=0.0.0.0</span><br><span class="line">systemProp.https.proxyPort=1087</span><br><span class="line">systemProp.https.nonProxyHosts=*.nonproxyrepos.com|localhost</span><br></pre></td></tr></table></figure>
</li>
<li><p><a href="http://pro.sr1.me/post/android-sdk-download-links" target="_blank" rel="noopener">http://pro.sr1.me/post/android-sdk-download-links</a> 把platforms和 buildtool手动下载放入 studio 内部的Platform 和 build-tools文件夹刷新 sdk manager</p>
</li>
</ul>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul>
<li><a href="https://gradle.org/" target="_blank" rel="noopener">https://gradle.org/</a></li>
</ul>
]]></content>
      <categories>
        <category>AndroidStudio 开发</category>
      </categories>
      <tags>
        <tag>android</tag>
        <tag>入门</tag>
      </tags>
  </entry>
  <entry>
    <title>ApiDoc Swagger Use</title>
    <url>/2019/01/20/ApiDoc%20Swagger%20Use/</url>
    <content><![CDATA[<p>基于 Java 注解的 RestFul API文档生成工具，基于 springboot 的 doc 文档生成</p>
<h1 id="官网"><a href="#官网" class="headerlink" title="官网"></a>官网</h1><ul>
<li><a href="http://swagger.io/" target="_blank" rel="noopener">http://swagger.io/</a></li>
<li><a href="https://github.com/springfox/springfox" target="_blank" rel="noopener">https://github.com/springfox/springfox</a></li>
<li><a href="https://asciidoctor.org/docs/asciidoctor-maven-plugin/" target="_blank" rel="noopener">https://asciidoctor.org/docs/asciidoctor-maven-plugin/</a></li>
</ul>
<h1 id="依赖"><a href="#依赖" class="headerlink" title="依赖"></a>依赖</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">     &lt;!--doc文档--&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;io.springfox&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;springfox-swagger2&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;2.9.2&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;io.springfox&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;springfox-swagger-ui&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;2.7.0&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure>
<h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><p>2.MyJsonMapper.java<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public class MyJsonMapper extends ObjectMapper &#123;</span><br><span class="line"></span><br><span class="line">  public MyJsonMapper() &#123;</span><br><span class="line">    this.configure(SerializationFeature.FAIL_ON_EMPTY_BEANS, false);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>3.MySwaggerConfig.java<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@Configuration</span><br><span class="line">@EnableSwagger2</span><br><span class="line">public class SwaggerConfig extends WebMvcConfigurerAdapter &#123;</span><br><span class="line"></span><br><span class="line">  @Bean</span><br><span class="line">  public Docket createRestApi() &#123;</span><br><span class="line">    ApiInfo apiInfo = new ApiInfoBuilder()</span><br><span class="line">        .title(&quot;API文档&quot;)</span><br><span class="line">        .description(&quot;接口文档&quot;)</span><br><span class="line">        .version(&quot;0.0.1&quot;)</span><br><span class="line">        .build();</span><br><span class="line">    List&lt;ResponseMessage&gt; msg = Lists.newArrayList();</span><br><span class="line"></span><br><span class="line">    for (StatusConstant statusConstant : StatusConstant.values()) &#123;</span><br><span class="line">      msg.add(new ResponseMessageBuilder()</span><br><span class="line">                  .code(statusConstant.val())</span><br><span class="line">                  .message(statusConstant.msg())</span><br><span class="line">                  .responseModel(new ModelRef(&quot;Error&quot;)).build());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    return new Docket(DocumentationType.SWAGGER_2)</span><br><span class="line">        .apiInfo(apiInfo)</span><br><span class="line">        .select()</span><br><span class="line">        .apis(RequestHandlerSelectors.basePackage(&quot;com.zhuyun.slff.api&quot;))</span><br><span class="line">        .paths(PathSelectors.any())</span><br><span class="line">        .build()</span><br><span class="line">        .globalResponseMessage(RequestMethod.GET, msg)</span><br><span class="line">        .globalResponseMessage(RequestMethod.POST, msg)</span><br><span class="line">        .useDefaultResponseMessages(false);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  @Override</span><br><span class="line">  public void addResourceHandlers(ResourceHandlerRegistry registry) &#123;</span><br><span class="line">    registry.addResourceHandler(&quot;swagger-ui.html&quot;)</span><br><span class="line">        .addResourceLocations(&quot;classpath:/META-INF/resources/&quot;);</span><br><span class="line"></span><br><span class="line">    registry.addResourceHandler(&quot;/webjars/**&quot;)</span><br><span class="line">        .addResourceLocations(&quot;classpath:/META-INF/resources/webjars/&quot;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h1 id="访问地址"><a href="#访问地址" class="headerlink" title="访问地址"></a>访问地址</h1><p>0.0.0.0:8080/swagger-ui.html</p>
<h1 id="常用注解"><a href="#常用注解" class="headerlink" title="常用注解"></a>常用注解</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@ApiClass</span><br><span class="line"></span><br><span class="line">@ApiError</span><br><span class="line"></span><br><span class="line">@ApiErrors</span><br><span class="line"></span><br><span class="line">@ApiOperation</span><br><span class="line"></span><br><span class="line">@ApiParam</span><br><span class="line"></span><br><span class="line">@ApiParamImplicit</span><br><span class="line"></span><br><span class="line">@ApiParamsImplicit</span><br><span class="line"></span><br><span class="line">@ApiProperty</span><br><span class="line"></span><br><span class="line">@ApiResponse</span><br><span class="line"></span><br><span class="line">@ApiResponses</span><br><span class="line"></span><br><span class="line">@ApiModel</span><br></pre></td></tr></table></figure>
<h1 id="静态文档生成"><a href="#静态文档生成" class="headerlink" title="静态文档生成"></a>静态文档生成</h1><ol>
<li><p>依赖</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.github.swagger2markup<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>swagger2markup<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<ol start="2">
<li>Test</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">/**</span><br><span class="line"> * Created by ZuoYun on 2018/8/14. Time: 10:12 AM Information:</span><br><span class="line"> */</span><br><span class="line">public class AppTest &#123;</span><br><span class="line"></span><br><span class="line">  @Test</span><br><span class="line">  public void main() throws MalformedURLException &#123;</span><br><span class="line">    URL remoteSwaggerFile = new URL(&quot;http://0.0.0.0:8080/v2/api-docs&quot;);</span><br><span class="line">    Path outputDirectory = Paths.get(&quot;slff-resource/asciidoc&quot;);</span><br><span class="line"></span><br><span class="line">    Swagger2MarkupConfig config = new Swagger2MarkupConfigBuilder()</span><br><span class="line">        .withMarkupLanguage(MarkupLanguage.MARKDOWN)</span><br><span class="line">//        .withOutputLanguage(Language.ZH)</span><br><span class="line">//        .withPathsGroupedBy(GroupBy.TAGS)</span><br><span class="line">        .build();</span><br><span class="line"></span><br><span class="line">    Swagger2MarkupConverter.from(remoteSwaggerFile)</span><br><span class="line">        .withConfig(config)</span><br><span class="line">        .build()</span><br><span class="line">        .toFolder(outputDirectory);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="使用-zuul-对-swagger-的文档做聚合"><a href="#使用-zuul-对-swagger-的文档做聚合" class="headerlink" title="使用 zuul 对 swagger 的文档做聚合"></a>使用 zuul 对 swagger 的文档做聚合</h2><p><a href="https://github.com/dyc87112/swagger-butler" target="_blank" rel="noopener">https://github.com/dyc87112/swagger-butler</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;dependencies&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;com.didispace&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;swagger-butler-core&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;1.2.0&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">&lt;/dependencies&gt;</span><br></pre></td></tr></table></figure>
<p>使用注解 @EnableSwaggerButler</p>
<p>application.properties</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#注意根路由要改不然无法暴露 swagger-ui.html</span><br><span class="line">zuul.servlet-path=/api</span><br><span class="line"></span><br><span class="line"># use zuul routes generate swagger resources</span><br><span class="line">swagger.butler.api-docs-path=v2/api-docs</span><br><span class="line">swagger.butler.swagger-version=2.0</span><br><span class="line">swagger.butler.auto-generate-from-zuul-routes=true</span><br><span class="line">swagger.butler.ignore-routes=slff-cloud-zuul</span><br></pre></td></tr></table></figure>
<p>通过对 zuul 的解析，自动绑定所有路由 doc</p>
<h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><ul>
<li>注意这里 doc 在解析泛型的时候支持有限，局限于 Spring Spec没有办法工作，所以取巧的方法是用 List 包装一下</li>
<li><a href="https://github.com/swagger-api/swagger-core/issues/498" target="_blank" rel="noopener">https://github.com/swagger-api/swagger-core/issues/498</a> </li>
</ul>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>java-doc</tag>
      </tags>
  </entry>
  <entry>
    <title>ApiManager yapi</title>
    <url>/2019/01/20/ApiManager%20yapi/</url>
    <content><![CDATA[<p>非常好用的api 管理工具，支持 swagger 导入</p>
<p><a href="https://yapi.ymfe.org/" target="_blank" rel="noopener">https://yapi.ymfe.org/</a></p>
<h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><h2 id="安装-mongodb"><a href="#安装-mongodb" class="headerlink" title="安装 mongodb"></a>安装 mongodb</h2><p>docker pull  mongo </p>
<p>docker run  –name some-mongo   -p 27017:27017   -d mongo   –auth   </p>
<p>docker    exec  -it  容器ID   /bin/bash     </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mongo  </span><br><span class="line">use admin</span><br><span class="line">db.createUser(&#123;user:&quot;root&quot;,pwd:&quot;root&quot;,roles:[&#123;role:&apos;root&apos;,db:&apos;somedb&apos;&#125;]&#125;)  </span><br><span class="line">exit</span><br></pre></td></tr></table></figure>
<p>mongo  ip/somedb  -uroot -p</p>
<h2 id="安装-yapi"><a href="#安装-yapi" class="headerlink" title="安装 yapi"></a>安装 yapi</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkdir yapi</span><br><span class="line"><span class="built_in">cd</span> yapi</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/YMFE/yapi.git vendors </span><br><span class="line">cp vendors/config_example.json ./config.json </span><br><span class="line"><span class="built_in">cd</span> vendors</span><br><span class="line">npm install --production --registry https://registry.npm.taobao.org</span><br><span class="line">npm run install-server </span><br><span class="line">node server/app.js</span><br></pre></td></tr></table></figure>
<p><img src="http://img.sandseasoft.com/20190120154799208266395.png" alt="20190120154799208266395.png"></p>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://yapi.ymfe.org/devops/index.html" target="_blank" rel="noopener">https://yapi.ymfe.org/devops/index.html</a></p>
<p><a href="https://yapi.ymfe.org/documents/index.html" target="_blank" rel="noopener">https://yapi.ymfe.org/documents/index.html</a></p>
]]></content>
      <categories>
        <category>nodejs</category>
      </categories>
      <tags>
        <tag>Saas</tag>
      </tags>
  </entry>
  <entry>
    <title>Awesome Mac app</title>
    <url>/2015/02/26/Awesome%20Mac%20app/</url>
    <content><![CDATA[<h2 id="Visual-Stuido-code"><a href="#Visual-Stuido-code" class="headerlink" title="Visual Stuido code"></a>Visual Stuido code</h2><ul>
<li>Remote development -&gt;remote-ssh</li>
<li>platformIO plugin</li>
</ul>
<h2 id="Development"><a href="#Development" class="headerlink" title="Development"></a>Development</h2><ul>
<li><p>iTerm/Tmux/oh-my-zsh</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#open plugins	</span></span><br><span class="line">vim ~/.zshrc</span><br><span class="line">plugins=(git autojump osx)</span><br><span class="line"><span class="comment">#integration lrzsz</span></span><br><span class="line"><span class="comment">#https://gist.github.com/zthxxx/9171c12538605d92781b74274ba8b9e1</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>Navicat Premium</p>
</li>
<li>Intellij Idea/Xcode</li>
<li>SourceTree</li>
<li>ParallelsDesktop</li>
<li>RemoteDesktopConnection</li>
<li>Hangout</li>
<li>Docker</li>
</ul>
<h2 id="Life-App"><a href="#Life-App" class="headerlink" title="Life App"></a>Life App</h2><ul>
<li>Spotify/Soundcloud</li>
<li>Todo-List</li>
<li>Kindle</li>
<li>shadowsocks/Proxifier</li>
<li>Whatapp/telegram</li>
<li>CleanMyMac3</li>
<li>Typora <a href="https://typora.io/" target="_blank" rel="noopener">https://typora.io/</a></li>
</ul>
<h2 id="Awesome-tools"><a href="#Awesome-tools" class="headerlink" title="Awesome tools"></a>Awesome tools</h2><ul>
<li>KeepYourAwake <a href="https://github.com/newmarcel/KeepingYouAwake" target="_blank" rel="noopener">https://github.com/newmarcel/KeepingYouAwake</a></li>
<li>Clipy <a href="https://github.com/Clipy/Clipy" target="_blank" rel="noopener">https://github.com/Clipy/Clipy</a></li>
<li>iPic <a href="https://toolinbox.net/iPic/" target="_blank" rel="noopener">https://toolinbox.net/iPic/</a></li>
<li>ShiftIt <a href="https://github.com/fikovnik/ShiftIt" target="_blank" rel="noopener">https://github.com/fikovnik/ShiftIt</a></li>
<li>aria2c</li>
</ul>
]]></content>
      <categories>
        <category>awesome</category>
      </categories>
      <tags>
        <tag>macos</tag>
      </tags>
  </entry>
  <entry>
    <title>Bigdata HBase_ Phoenix</title>
    <url>/2020/12/20/Bigdata%20HBase_%20Phoenix/</url>
    <content><![CDATA[<h1 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h1><h1 id="Architecture"><a href="#Architecture" class="headerlink" title="Architecture"></a>Architecture</h1><ul>
<li><h1 id="Feautre"><a href="#Feautre" class="headerlink" title="Feautre"></a>Feautre</h1></li>
<li></li>
</ul>
<h1 id="Concept"><a href="#Concept" class="headerlink" title="Concept"></a>Concept</h1><ul>
<li><h1 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h1></li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vim ~/.bashrc</span><br><span class="line">export PATH=$PATH:/bigdata/hbase/bin</span><br><span class="line"></span><br><span class="line">vim /conf/hbase-env.sh</span><br><span class="line">export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64</span><br><span class="line">export HBASE_CLASSPATH=/bigdata/hbase/conf </span><br><span class="line">export HBASE_MANAGES_ZK=true</span><br><span class="line"></span><br><span class="line">vim /conf/hbase-site.xml</span><br><span class="line">&lt;property&gt;</span><br><span class="line">    &lt;name&gt;hbase.cluster.distributed&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;true&lt;/value&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">  &lt;property&gt;</span><br><span class="line">    &lt;name&gt;hbase.tmp.dir&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;./tmp&lt;/value&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">  &lt;property&gt;</span><br><span class="line">    &lt;name&gt;hbase.unsafe.stream.capability.enforce&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;false&lt;/value&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">	  &lt;property&gt;</span><br><span class="line">                &lt;name&gt;hbase.rootdir&lt;/name&gt;</span><br><span class="line">	&lt;value&gt;hdfs://bigserver1:9000/hbase&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line"></span><br><span class="line">./bin/start-hbase.sh</span><br><span class="line">./bin/hbase shell</span><br><span class="line">create &apos;student&apos;,&apos;Sname&apos;,&apos;Ssex&apos;,&apos;Sage&apos;,&apos;Sdept&apos;,&apos;course&apos;   </span><br><span class="line">put &apos;student&apos;,&apos;95001&apos;,&apos;Sname&apos;,&apos;LiYing&apos;</span><br><span class="line">get &apos;student&apos;,&apos;95001&apos;</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">./hbase-cleanup.sh  --cleanAll</span><br><span class="line"></span><br><span class="line">cp phoenix-5.0.0-HBase-2.0-server.jar /bigdata/hbase/lib/</span><br><span class="line">stop-hbase.sh </span><br><span class="line">start-hbase.sh</span><br><span class="line"></span><br><span class="line">cd /phoenix/bin</span><br><span class="line">./sqlline.py 127.0.0.1:2181</span><br></pre></td></tr></table></figure>
<h1 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h1><ul>
<li><h1 id="Quote"><a href="#Quote" class="headerlink" title="Quote"></a>Quote</h1></li>
<li></li>
</ul>
]]></content>
      <categories>
        <category>big data</category>
      </categories>
      <tags>
        <tag>hbase</tag>
        <tag>phoenix</tag>
      </tags>
  </entry>
  <entry>
    <title>Bigdata Kylin_Zepplin</title>
    <url>/2020/12/21/Bigdata%20Kylin_Zepplin/</url>
    <content><![CDATA[<h1 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h1><ol>
<li><h1 id="Architecture"><a href="#Architecture" class="headerlink" title="Architecture"></a>Architecture</h1></li>
</ol>
<ul>
<li><h1 id="Feautre"><a href="#Feautre" class="headerlink" title="Feautre"></a>Feautre</h1></li>
<li></li>
</ul>
<h1 id="Concept"><a href="#Concept" class="headerlink" title="Concept"></a>Concept</h1><ul>
<li><h1 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h1></li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cp zeppelin-env.sh.template zeppelin-env.sh</span><br><span class="line">cp zeppelin-site.xml.template zeppelin-site.xml</span><br><span class="line">cp shiro.ini.template  shiro.ini</span><br><span class="line"></span><br><span class="line">vi zeppelin-env.sh </span><br><span class="line">export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64</span><br><span class="line">export SPARK_HOME=/bigdata/spark</span><br><span class="line"></span><br><span class="line">vi zeppelin-site.xml</span><br><span class="line">&lt;property&gt;</span><br><span class="line">  &lt;name&gt;zeppelin.server.addr&lt;/name&gt;</span><br><span class="line">  &lt;value&gt;0.0.0.0&lt;/value&gt;</span><br><span class="line">  &lt;description&gt;Server binding address&lt;/description&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line"></span><br><span class="line">&lt;property&gt;</span><br><span class="line">  &lt;name&gt;zeppelin.server.port&lt;/name&gt;</span><br><span class="line">  &lt;value&gt;8089&lt;/value&gt;</span><br><span class="line">  &lt;description&gt;Server port.&lt;/description&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line"></span><br><span class="line">&lt;property&gt;</span><br><span class="line">  &lt;name&gt;zeppelin.helium.registry&lt;/name&gt;</span><br><span class="line">  &lt;value&gt;helium&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line"></span><br><span class="line">&lt;property&gt;</span><br><span class="line">  &lt;name&gt;zeppelin.anonymous.allowed&lt;/name&gt;</span><br><span class="line">  &lt;value&gt;false&lt;/value&gt;</span><br><span class="line">  &lt;description&gt;Anonymous user allowed by default&lt;/description&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line"></span><br><span class="line">vim shiro.ini</span><br><span class="line">admin = jikxxx, admin</span><br><span class="line"></span><br><span class="line">./bin/zeppelin-daemon.sh restart</span><br></pre></td></tr></table></figure>
<h1 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h1><ul>
<li><h1 id="Quote"><a href="#Quote" class="headerlink" title="Quote"></a>Quote</h1></li>
<li><p><a href="https://zeppelin.apache.org/" target="_blank" rel="noopener">https://zeppelin.apache.org/</a></p>
</li>
</ul>
]]></content>
      <categories>
        <category>big data</category>
      </categories>
      <tags>
        <tag>hue</tag>
        <tag>zepplin</tag>
      </tags>
  </entry>
  <entry>
    <title>Bigdata Spark Guide</title>
    <url>/2020/12/26/Bigdata%20Spark%20Guide/</url>
    <content><![CDATA[<h1 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h1><ol>
<li>快速处理能力</li>
<li>易于使用</li>
<li>通用性</li>
<li>可用性高</li>
</ol>
<h1 id="Architecture"><a href="#Architecture" class="headerlink" title="Architecture"></a>Architecture</h1><ul>
<li><strong>Spark Core：</strong>Spark的核心功能实现，包括：SparkContext的初始化(Driver Application通过SparkContext提交)、部署模式、存储体系、任务提交与执行、计算引擎等。</li>
<li><strong>Spark SQL：</strong>提供SQL处理能力，便于熟悉关系型数据库操作的工程师进行交互查询。此外，还为熟悉Hadoop的用户提供Hive SQL处理能力。</li>
<li><strong>Spark Streaming：</strong>提供流式计算处理能力，目前支持Kafka、Flume、Twitter、MQTT、ZeroMQ、Kinesis和简单的TCP套接字等数据源。此外，还提供窗口操作。</li>
<li><strong>GraphX：</strong>提供图计算处理能力，支持分布式。</li>
<li><strong>MLlib：</strong>提供机器学习相关的统计、分类、回归等领域的多种算法实现。其一致的API接口大大降低了用户的学习成本。</li>
</ul>
<h1 id="Feautre"><a href="#Feautre" class="headerlink" title="Feautre"></a>Feautre</h1><ul>
<li><strong>SparkContext：</strong>通常而言，Driver Application的执行和输出都是通过SparkContent来完成的，在正式提交Application之前，首先需要初始化SparkContent。SparkContent隐藏了网络通信、分布式部署、消息通信、存储能力、计算能力、缓存、测量系统、文件服务、Web服务等内容，应用程序开发者只需要使用SparkContent提供的API完成功能开发。SparkContent内置的DAGScheduler负责创建Job，将DAG中的RDD划分到不同的Stage，提交Stage等功能。内置的TaskScheduler负责资源的申请、任务的提交及请求集群对任务的调度等工作。</li>
<li><strong>存储体系：</strong>Spark优先考虑使用各节点的内存作为存储，当内存不足时才会考虑使用磁盘，这极大地减少了磁盘I/O，提升了任务执行效率，使得Spark适用于实时计算、流式计算等场景。此外，Spark还提供了以内存为中心的高容错的分布式文件系统Tachyon供用户进行选择。Tachyon能够为Spark提供可靠的内存级的文件共享服务。</li>
<li><strong>计算引擎：</strong>计算引擎由SparkContent中的DAGScheduler、RDD以及具体节点上的Executor负责执行的Map和Reduce任务组成。</li>
<li><strong>部署模式：</strong>由于单节点不足以提供足够的存储和计算能力，所以作为大数据处理的Spark在SparkContext的TaskScheduler组件中提供了对Standalone部署模式的实现和Yarn、Mesos等分布式资源管理系统的支持。通过使用Standallone、Yarn、Mesos等部署模式为Task分配计算资源，提高任务的并发执行效率。除了可用于实际生产环境的Standalone、Yarn、Mesos等部署模式外，Spark还提供了Local模式和local-cluster模式便于开发和调试。</li>
</ul>
<h1 id="Concept"><a href="#Concept" class="headerlink" title="Concept"></a>Concept</h1><ul>
<li><strong>RDD：</strong>弹性分布式数据集。</li>
<li><strong>Task：</strong>具体执行任务。Task分为ShuffleMapTask和ResultTask两种。ShuffleMapTask和ResultTask分别类似于Hadoop中的Map和Reduce。</li>
<li><strong>Job：</strong>用户提交的作业。一个Job可能由一到多个Task组成。</li>
<li><strong>Stage：</strong>Job分成的阶段。一个Job可能被划分为一到多个Stage。</li>
<li><strong>Partition：</strong>数据分区。即一个RDD的数据可以划分为多少个分区。</li>
<li><strong>NarrowDependency：</strong>窄依赖，即子RDD依赖于父RDD中固定的Partition。NarrowDependency分为OneToOneDependency和RangeDependency两种。</li>
<li><strong>ShuffleDependency：</strong>shuffle依赖，也称为宽依赖，即子RDD对父RDD中的所有Partition都有依赖。</li>
<li><strong>DAG：</strong>有向无环图。用于反映各RDD之间的依赖关系。</li>
</ul>
<h1 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h1><ul>
<li><a href="https://spark.apache.org/docs/latest/spark-standalone.html" target="_blank" rel="noopener">Standalone Deploy Mode</a>: simplest way to deploy Spark on a private cluster</li>
<li><a href="https://spark.apache.org/docs/latest/running-on-yarn.html" target="_blank" rel="noopener">Hadoop YARN</a></li>
<li><a href="https://spark.apache.org/docs/latest/running-on-kubernetes.html" target="_blank" rel="noopener">Kubernetes</a></li>
</ul>
<h2 id="Standalone"><a href="#Standalone" class="headerlink" title="Standalone"></a>Standalone</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> https://spark.apache.org/docs/latest/spark-standalone.html</span></span><br><span class="line">./sbin/start-master.sh</span><br><span class="line">./sbin/start-slave.sh &lt;master-spark-URL&gt;</span><br><span class="line">./bin/spark-shell --master spark://IP:PORT</span><br></pre></td></tr></table></figure>
<h2 id="Hadoop-YARN"><a href="#Hadoop-YARN" class="headerlink" title="Hadoop YARN"></a>Hadoop YARN</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">echo "export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64" &gt;&gt; ~/.bashrc  </span><br><span class="line">echo "export PATH=/bigdata/hadoop/bin:$PATH" &gt;&gt; ~/.bashrc  </span><br><span class="line">echo "export HADOOP_HOME=/bigdata/hadoop" &gt;&gt; ~/.bashrc  </span><br><span class="line">echo "export SPARK_HOME=/bigdata/spark" &gt;&gt; ~/.bashrc  </span><br><span class="line">echo "export LD_LIBRARY_PATH=/bigdata/hadoop/lib/native/" &gt;&gt; ~/.bashrc  </span><br><span class="line">source ~/.bashrc  </span><br><span class="line"></span><br><span class="line">./hdfs dfs -mkdir /spark  </span><br><span class="line">./hdfs dfs -mkdir /spark/logs  </span><br><span class="line">./hdfs dfs -mkdir /spark/jars  </span><br><span class="line">./hdfs dfs -put /bigdata/spark/jars/* /spark/jars/</span><br><span class="line"></span><br><span class="line">cp spark-env.sh.template spark-env.sh</span><br><span class="line">vim spark-env.sh</span><br><span class="line">export SPARK_CONF_DIR=/bigdata/spark/conf  </span><br><span class="line">export HADOOP_CONF_DIR=/bigdata/hadoop/etc/hadoop  </span><br><span class="line">export YARN_CONF_DIR=/bigdata/hadoop/etc/hadoop  </span><br><span class="line">export SPARK_HISTORY_OPTS="-Dspark.history.retainedApplications=3 -Dspark.history.fs.logDirectory=hdfs://bigserver1:9000/spark/logs"</span><br><span class="line"></span><br><span class="line">cp spark-defaults.conf.template spark-defaults.conf</span><br><span class="line">vim spark-defaults.conf</span><br><span class="line">spark.master                     yarn  </span><br><span class="line">spark.eventLog.enabled           true  </span><br><span class="line">spark.eventLog.dir               hdfs://bigserver1:9000/spark/logs  </span><br><span class="line">spark.driver.cores               1  </span><br><span class="line">spark.driver.memory              512m  </span><br><span class="line">spark.executor.cores             1  </span><br><span class="line">spark.executor.memory            512m  </span><br><span class="line">spark.executor.instances         1  </span><br><span class="line">spark.submit.deployMode          client  </span><br><span class="line">spark.yarn.jars                  hdfs://bigserver1:9000/spark/jars/*  </span><br><span class="line">spark.serializer                 org.apache.spark.serializer.KryoSerializer</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> cp slaves.template slaves //添加以下内容     </span></span><br><span class="line">192.168.1.14 bigserver1  </span><br><span class="line">192.168.1.15 bigserver2</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">sync</span></span><br><span class="line">rsync -rvl /bigdata/spark root@bigserver2:/bigdata/</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">TEST</span></span><br><span class="line">./run-example SparkPi 10</span><br></pre></td></tr></table></figure>
<h1 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h1><h1 id="Quote"><a href="#Quote" class="headerlink" title="Quote"></a>Quote</h1><ul>
<li><a href="https://spark.apache.org/" target="_blank" rel="noopener">https://spark.apache.org/</a></li>
<li><a href="http://blog.51yip.com/hadoop/2022.html" target="_blank" rel="noopener">http://blog.51yip.com/hadoop/2022.html</a></li>
<li><a href="http://blog.51yip.com/hadoop/2249.html" target="_blank" rel="noopener">http://blog.51yip.com/hadoop/2249.html</a></li>
<li><a href="http://blog.51yip.com/hadoop/2358.html" target="_blank" rel="noopener">http://blog.51yip.com/hadoop/2358.html</a></li>
</ul>
]]></content>
      <categories>
        <category>big data</category>
      </categories>
      <tags>
        <tag>spark</tag>
      </tags>
  </entry>
  <entry>
    <title>Chemical Knowledge</title>
    <url>/2015/12/24/Chemical%20Knowledge/</url>
    <content><![CDATA[<p>计算机生物小分子<br>同位素<br>手性<br>芳香环<br>基团<br>保护基</p>
]]></content>
      <categories>
        <category>chemical</category>
      </categories>
  </entry>
  <entry>
    <title>Debug Springboot Remote Tool</title>
    <url>/2019/01/28/Debug%20Springboot%20Remote%20Tools/</url>
    <content><![CDATA[<h3 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h3><p>介绍一下在Intellij IDEA下对Springboot类型的项目的远程调试功能。所谓的远程调试就是服务端程序运行在一台远程服务器上，我们可以在本地服务端的代码（前提是本地的代码必须和远程服务器运行的代码一致）中设置断点，每当有请求到远程服务器时时能够在本地知道远程服务端的此时的内部状态。</p>
<h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p>服务端 使用</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">java -jar -Xdebug -Xrunjdwp:transport=dt_socket,server=y,<span class="built_in">suspend</span>=n,address=5005 <span class="built_in">test</span>-tool.jar</span><br></pre></td></tr></table></figure>
<p>idea 增加 remote 配置,修改对应画红圈位置的信息，启动</p>
<p><img src="http://img.sandseasoft.com/20190128154865824254851.png" alt="20190128154865824254851.png"></p>
<p>完事</p>
<p><img src="http://img.sandseasoft.com/20190128154865831862908.png" alt="20190128154865831862908.png"></p>
<h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://www.cnblogs.com/tadage/p/7314595.html" target="_blank" rel="noopener">https://www.cnblogs.com/tadage/p/7314595.html</a></p>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>tools</tag>
      </tags>
  </entry>
  <entry>
    <title>Dingtalk 第三方平台开发</title>
    <url>/2018/08/13/Dingtalk%20%E7%AC%AC%E4%B8%89%E6%96%B9%E5%B9%B3%E5%8F%B0%E5%BC%80%E5%8F%91/</url>
    <content><![CDATA[<h1 id="开发步骤"><a href="#开发步骤" class="headerlink" title="开发步骤"></a>开发步骤</h1><ol>
<li>在开发者后台<a href="https://open-doc.dingtalk.com/docs/doc.htm?spm=a219a.7629140.0.0.mvsqM1&amp;treeId=371&amp;articleId=106926&amp;docType=1" target="_blank" rel="noopener">获取CorpSecret</a>信息。</li>
<li>通过企业的CorpId 和 CorpSecret信息换取access_token信息。</li>
<li>查询CorpSecret的<a href="https://open-doc.dingtalk.com/docs/doc.htm?spm=a219a.7629140.0.0.tuFqD6&amp;treeId=371&amp;articleId=106091&amp;docType=1" target="_blank" rel="noopener">按部门授权范围</a></li>
</ol>
<h1 id="登陆绑定"><a href="#登陆绑定" class="headerlink" title="登陆绑定"></a>登陆绑定</h1><p>参阅</p>
<ul>
<li><a href="https://open-doc.dingtalk.com/docs/doc.htm?source=search&amp;treeId=367&amp;articleId=106818&amp;docType=1" target="_blank" rel="noopener">https://open-doc.dingtalk.com/docs/doc.htm?source=search&amp;treeId=367&amp;articleId=106818&amp;docType=1</a></li>
</ul>
<h2 id="前端请求"><a href="#前端请求" class="headerlink" title="前端请求"></a>前端请求</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">//此初始化参数从getAccessJsSdkInfo.json请求中获取</span><br><span class="line">dd.config(&#123;</span><br><span class="line">    agentId: &apos;&apos;, // 必填，微应用ID</span><br><span class="line">    corpId: &apos;&apos;,//必填，企业ID</span><br><span class="line">    timeStamp: , // 必填，生成签名的时间戳</span><br><span class="line">    nonceStr: &apos;&apos;, // 必填，生成签名的随机串</span><br><span class="line">    signature: &apos;&apos;, // 必填，签名</span><br><span class="line">    type:0/1,   //选填，0表示微应用的jsapi，1表示服务窗的jsapi，不填默认为0。该参数从dingtalk.js的0.8.3版本开始支持</span><br><span class="line">    jsApiList : [ &apos;runtime.info&apos;, &apos;biz.contact.choose&apos;,</span><br><span class="line">        &apos;device.notification.confirm&apos;, &apos;device.notification.alert&apos;,</span><br><span class="line">        &apos;device.notification.prompt&apos;, &apos;biz.ding.post&apos;,</span><br><span class="line">        &apos;biz.util.openLink&apos; ] // 必填，需要使用的jsapi列表，注意：不要带dd。</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">//这一步拿到的 code 去getOauthUserInfo.json 获取用户数据</span><br><span class="line">dd.runtime.permission.requestAuthCode(&#123;</span><br><span class="line">    corpId: &quot;corpid&quot;,</span><br><span class="line">    onSuccess: function(result) &#123;</span><br><span class="line">    /*&#123;</span><br><span class="line">        code: &apos;hYLK98jkf0m&apos; //string authCode</span><br><span class="line">    &#125;*/</span><br><span class="line">    &#125;,</span><br><span class="line">    onFail : function(err) &#123;&#125;</span><br><span class="line"> </span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<h2 id="后端代码"><a href="#后端代码" class="headerlink" title="后端代码"></a>后端代码</h2><ul>
<li>注意这个collUrl是请求者当前的 url</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取前端 ddconfig初始化信息</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"getAccessJsSdkInfo.json"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> Map&lt;String, Object&gt; <span class="title">getAccessJsSdkInfo</span><span class="params">(@RequestParam String collUrl)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//2.获取 access_token</span></span><br><span class="line">  String token = getToken();</span><br><span class="line">  <span class="comment">//3.获取 get_jsapi_ticket</span></span><br><span class="line">  HttpRequest ticketRequest = HttpRequest</span><br><span class="line">      .get(<span class="string">"https://oapi.dingtalk.com/get_jsapi_ticket?access_token="</span> + token);</span><br><span class="line">  String js_ticket = (String) JSONObject.parseObject(ticketRequest.body()).get(<span class="string">"ticket"</span>);</span><br><span class="line">  Long timestamp = <span class="keyword">new</span> Date().getTime();</span><br><span class="line">  <span class="comment">//4.在后端通过sign(js_ticket, nonceStr, timeStamp, url)计算前端校验需要使用的签名信息。</span></span><br><span class="line">  String</span><br><span class="line">      signature =</span><br><span class="line">      getJsApiSingnature(collUrl, <span class="string">"zuoyun"</span>,</span><br><span class="line">                         timestamp, js_ticket);</span><br><span class="line">  Map&lt;String, Object&gt; result = Maps.newHashMap();</span><br><span class="line"></span><br><span class="line">  <span class="comment">//5、将：‘url’，‘nonceStr’，‘agentId’，‘timeStamp’，‘corpId’，‘signature’传递到前端页面。</span></span><br><span class="line">  System.out.println(<span class="string">"jsticket ===&gt;"</span> + js_ticket);</span><br><span class="line">  result.put(<span class="string">"jsticket"</span>, js_ticket);</span><br><span class="line">  result.put(<span class="string">"signature"</span>, signature);</span><br><span class="line">  result.put(<span class="string">"nonceStr"</span>, <span class="string">"zuoyun"</span>);</span><br><span class="line">  result.put(<span class="string">"timeStamp"</span>, timestamp.toString());</span><br><span class="line">  result.put(<span class="string">"corpId"</span>, DingTalkSDK.CORP_ID);</span><br><span class="line">  <span class="comment">//debug参数</span></span><br><span class="line">  result.put(<span class="string">"debug_token"</span>, token);</span><br><span class="line">  result.put(<span class="string">"debug_agentid"</span>, DingTalkSDK.AGENT_ID);</span><br><span class="line">  result.put(<span class="string">"debug_url"</span>, collUrl);</span><br><span class="line">  System.out.println(JSON.toJSON(result));</span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 通过code获取用户信息，回调系统</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"getOauthUserInfo.json"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> JSONObject <span class="title">getOauthUserInfo</span><span class="params">(HttpServletResponse response, @RequestParam String code)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  HttpRequest userInfoRequest = HttpRequest</span><br><span class="line">      .get(<span class="string">"https://oapi.dingtalk.com/user/getuserinfo?access_token="</span> + getToken() + <span class="string">"&amp;code="</span> + code);</span><br><span class="line">  String jsonUser = userInfoRequest.body();</span><br><span class="line">  System.out.println(<span class="string">"钉钉用户登录"</span> + jsonUser);</span><br><span class="line">  System.out</span><br><span class="line">      .println(<span class="string">"https://oapi.dingtalk.com/user/getuserinfo?access_token="</span> + getToken() + <span class="string">"&amp;code="</span> + code);</span><br><span class="line">  JSONObject user = JSONObject.parseObject(jsonUser);</span><br><span class="line">  String userId = user.get(<span class="string">"userid"</span>).toString();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="comment">//拿到微信账号以后，呼起</span></span><br><span class="line">    <span class="keyword">if</span> (StringUtils.isNotBlank(userId)) &#123;</span><br><span class="line">      String jm = JwtUtil.encrypt(userId);</span><br><span class="line">      String param = URLEncoder.encode(jm, <span class="string">"utf8"</span>);</span><br><span class="line">      System.out.println(param);</span><br><span class="line">      response.sendRedirect(domain + <span class="string">"/MIMP/index.html#/loading?wechat="</span> + param);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      response.sendRedirect(domain + <span class="string">"/MIMP/index.html#/loading?wechat=error"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      response.sendRedirect(domain + <span class="string">"/MIMP/index.html#/loading?wechat=error"</span>);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (IOException e1) &#123;</span><br><span class="line">      <span class="keyword">return</span> buildFailedResult(<span class="string">"系统异常"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> buildFailedResult(<span class="string">"系统异常"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> String <span class="title">getJsApiSingnature</span><span class="params">(String url, String nonce, Long timeStamp, String jsTicket)</span> </span>&#123;</span><br><span class="line">  String plainTex = <span class="string">"jsapi_ticket="</span> + jsTicket + <span class="string">"&amp;noncestr="</span> + nonce + <span class="string">"&amp;timestamp="</span> + timeStamp + <span class="string">"&amp;url="</span> + url;</span><br><span class="line">  String signature;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    MessageDigest crypt = MessageDigest.getInstance(<span class="string">"SHA-1"</span>);</span><br><span class="line">    crypt.reset();</span><br><span class="line">    crypt.update(plainTex.getBytes(<span class="string">"UTF-8"</span>));</span><br><span class="line">    signature = byteToHex(crypt.digest());</span><br><span class="line">    <span class="keyword">return</span> signature;</span><br><span class="line">  &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"加密错误"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="响应"><a href="#响应" class="headerlink" title="响应"></a>响应</h2><h1 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h1><ul>
<li><a href="https://open-doc.dingtalk.com/docs/doc.htm?treeId=371&amp;articleId=106816&amp;docType=1" target="_blank" rel="noopener">https://open-doc.dingtalk.com/docs/doc.htm?treeId=371&amp;articleId=106816&amp;docType=1</a></li>
<li><a href="https://open-doc.dingtalk.com/docs/doc.htm?treeId=366&amp;articleId=106812&amp;docType=1" target="_blank" rel="noopener">https://open-doc.dingtalk.com/docs/doc.htm?treeId=366&amp;articleId=106812&amp;docType=1</a></li>
<li><a href="https://open-doc.dingtalk.com/docs/doc.htm?treeId=171&amp;articleId=107553&amp;docType=1" target="_blank" rel="noopener">https://open-doc.dingtalk.com/docs/doc.htm?treeId=171&amp;articleId=107553&amp;docType=1</a></li>
</ul>
]]></content>
      <categories>
        <category>Third-party platform</category>
      </categories>
      <tags>
        <tag>dingtalk</tag>
      </tags>
  </entry>
  <entry>
    <title>Domain Specific Language</title>
    <url>/2020/12/19/Domain%20Specific%20Language/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>javascript</category>
      </categories>
      <tags>
        <tag>DSL</tag>
        <tag>AST</tag>
      </tags>
  </entry>
  <entry>
    <title>Dublin Story 1 - Job</title>
    <url>/2019/06/12/Dublin%20Story%201%20-%20Job/</url>
    <content><![CDATA[<h2 id="Step-1-registration-for-GNIB"><a href="#Step-1-registration-for-GNIB" class="headerlink" title="Step 1 registration for GNIB"></a>Step 1 registration for GNIB</h2><p>When you go out of the airport, you should be apply for your GNIB card in the local INNS.</p>
<p>It is difficult to successfuly apply for appoinment,  you can try to click when it is 10AM or 2PM, maybe have a higher probability of success.</p>
<p>if you successfuly completed your all of applications, you would get your GNIB card one week later.</p>
<p>Link <a href="https://burghquayregistrationoffice.inis.gov.ie/" target="_blank" rel="noopener">https://burghquayregistrationoffice.inis.gov.ie/</a></p>
<p><img src="https://i.loli.net/2019/06/13/5d01596ce9b4625516.png" alt="5d01596ce9b4625516.png"></p>
<h2 id="Step-2-registration-for-PPSNumber"><a href="#Step-2-registration-for-PPSNumber" class="headerlink" title="Step 2 registration for PPSNumber"></a>Step 2 registration for PPSNumber</h2><p>That is import things too! cause if you don’t have PPSN, you couldnt pay your tax. </p>
<p>so for PPSNumber appointment , we need to get letter which is writed by your boss. In fact , the majory of dublin’s  don’t want to help you. As a trick, you tell staff who work in the intero that you are going to test your driver theroy test ,  only  GINB card  and your insurance statement including your address, then you successfuly get you pps card after finish your form.</p>
<p>Link <a href="https://www.mywelfare.ie/" target="_blank" rel="noopener">https://www.mywelfare.ie</a></p>
<p><img src="https://i.loli.net/2019/06/13/5d015ca28601e22349.png" alt="5d015ca28601e22349.png"></p>
<h2 id="Step-4-opening-your-bank-account"><a href="#Step-4-opening-your-bank-account" class="headerlink" title="Step 4 opening your bank account"></a>Step 4 opening your bank account</h2><p>if you have GNIB and PPSN, congratulations! You can get your bank account! :)</p>
<p>..</p>
<h2 id="Step-5-opening-your-bank-account"><a href="#Step-5-opening-your-bank-account" class="headerlink" title="Step 5 opening your bank account"></a>Step 5 opening your bank account</h2><p>Preparing for your CV/resume</p>
<ul>
<li><p>cover letter</p>
</li>
<li><p>resume</p>
</li>
<li><p>Introducing yourself as you meet interviewer up</p>
</li>
</ul>
<h2 id="Step-6-seeking-jobs"><a href="#Step-6-seeking-jobs" class="headerlink" title="Step 6 seeking jobs"></a>Step 6 seeking jobs</h2><p>Yeah! For legality get your salary, it is necessary to apply for GNIB, PPSN,bank account</p>
<p>but don’t worry, wait a moment!  let me tech you a little tips for your tax, pls reading below the links</p>
<p>P45</p>
<p><a href="https://www.revenue.ie/en/employing-people/employment-related-tax-returns-and-forms/starting-or-leaving-employment-p45/index.aspx" target="_blank" rel="noopener">https://www.revenue.ie/en/employing-people/employment-related-tax-returns-and-forms/starting-or-leaving-employment-p45/index.aspx</a></p>
<p>P60</p>
<p><a href="https://www.revenue.ie/en/employing-people/employment-related-tax-returns-and-forms/end-of-year-certificate-p60/index.aspx" target="_blank" rel="noopener">https://www.revenue.ie/en/employing-people/employment-related-tax-returns-and-forms/end-of-year-certificate-p60/index.aspx</a></p>
<p>once you know about tax knowleage by revenue.ie, I believe that you will understand why the interviewer ask you whether own GNIB,PPSN and bank card.</p>
<p>and then, let me tell you some good place to post your CV !</p>
<p>There are seeking job website</p>
<p><a href="https://www.jobs.ie" target="_blank" rel="noopener">https://www.jobs.ie</a></p>
<p><a href="https://ie.indeed.com/" target="_blank" rel="noopener">https://ie.indeed.com/</a></p>
<p>There are some recuitment agency. note! it isn’t neccessary to pay any fee for them</p>
<ul>
<li><a href="https://cpljobs.com/ie/" target="_blank" rel="noopener">https://cpljobs.com/ie/</a></li>
<li><a href="https://flexsource.ie/" target="_blank" rel="noopener">https://flexsource.ie/</a></li>
<li><a href="https://www.excelrecruitment.ie/" target="_blank" rel="noopener">https://www.excelrecruitment.ie/</a></li>
</ul>
<p>There  are some company for themselves building recuitment system, so if you sent they staff your CV</p>
<p>in the local store, they would reject it.</p>
<ul>
<li>TESCO <a href="https://apply.tesco-careers.com" target="_blank" rel="noopener">https://apply.tesco-careers.com</a></li>
<li>Mcdonald’s <a href="http://www.mcdonalds.ie/iehome/careers.html" target="_blank" rel="noopener">http://www.mcdonalds.ie/iehome/careers.html</a></li>
<li>KFC <a href="https://careers.kfc.co.uk" target="_blank" rel="noopener">https://careers.kfc.co.uk</a></li>
<li>Circlek <a href="https://www.circlek.com/?language=en" target="_blank" rel="noopener">https://www.circlek.com/?language=en</a></li>
<li>Dominos <a href="https://isw.changeworknow.co.uk/dominos/vms/e/stores/search/new" target="_blank" rel="noopener">https://isw.changeworknow.co.uk/dominos/vms/e/stores/search/new</a></li>
<li>Giant/Martin’s  <a href="https://krb-sjobs.brassring.com/TGnewUI/Search/Home/Home?partnerid=30003&amp;siteid=5083#home" target="_blank" rel="noopener">https://krb-sjobs.brassring.com/TGnewUI/Search/Home/Home?partnerid=30003&amp;siteid=5083#home</a></li>
<li>Burger of King <a href="https://www.whopper.ie/careers-with-burgerking/" target="_blank" rel="noopener">https://www.whopper.ie/careers-with-burgerking/</a></li>
<li>SuperValu <a href="https://supervalu.ie/careers/vacancies/search/" target="_blank" rel="noopener">https://supervalu.ie/careers/vacancies/search/</a></li>
</ul>
<p>And if you have a good CV and cover letter, you can go to the shop centre to try your luck. Puting your CV, and say “I’m seeking a part-time job, are there any position available? :)” big smell :)</p>
<p>Tips</p>
<p>You also follow some groups in the facebook. In fact , I think it is usefull.</p>
<p><img src="https://i.loli.net/2019/06/13/5d0179b39c81087370.png" alt="5d0179b39c81087370.png"></p>
<h2 id="Step-7-about-for-interviews"><a href="#Step-7-about-for-interviews" class="headerlink" title="Step 7 about for interviews"></a>Step 7 about for interviews</h2><p>..</p>
<h2 id="Step-8-about-for-Taxes"><a href="#Step-8-about-for-Taxes" class="headerlink" title="Step 8 about for Taxes"></a>Step 8 about for Taxes</h2><p>..</p>
]]></content>
      <categories>
        <category>Dublin Story</category>
      </categories>
      <tags>
        <tag>Dublin Story</tag>
      </tags>
  </entry>
  <entry>
    <title>Dublin Story 2 - Life</title>
    <url>/2019/06/12/Dublin%20Story%202%20-%20Life/</url>
    <content><![CDATA[<h2 id="Regestering-Leapcard-for-student"><a href="#Regestering-Leapcard-for-student" class="headerlink" title="Regestering Leapcard for student"></a>Regestering Leapcard for student</h2><p>You just bring the letter of school, and then go to the Trinity Luas Stop filling your form.</p>
<p>The bus card have some advantage</p>
<ul>
<li><p>you can get a goodly 50% discount to take dublin bus </p>
</li>
<li><p>you cost maxium €20 one week, you would free be continue taking dublin bus during the week</p>
</li>
<li>Installing leaptop app which easly top-up using NFC tech</li>
</ul>
<p><img src="https://i.loli.net/2019/06/13/5d01704e8a49951407.png" alt="5d01704e8a49951407.png"></p>
<h2 id="Regestering-a-local-library-card"><a href="#Regestering-a-local-library-card" class="headerlink" title="Regestering a local library card"></a>Regestering a local library card</h2><p>Bringing your letter of school, you can open your library card by library.  you can find some useful books,emusic,cds, free magzine and newspapers.</p>
<p>Note,  libraries is not connected</p>
<ul>
<li>Centre library</li>
<li>Blanscharistown library</li>
</ul>
<p>Buying a mobile card</p>
<ul>
<li>Vandafoned mobile, €20/m , great signl, and maxium 5Gb 4Gnetwork </li>
<li>Tesco mobile, €15/m, good signl, and maxium 15Gb 4Gnetwork </li>
</ul>
<h2 id="Renting-house"><a href="#Renting-house" class="headerlink" title="Renting house"></a>Renting house</h2><ul>
<li>Facebook groups, looking for flat,studio,share room,couple room and etc</li>
<li>Draft.ie</li>
</ul>
<h2 id="Buying-secondhand-stuffs"><a href="#Buying-secondhand-stuffs" class="headerlink" title="Buying secondhand stuffs"></a>Buying secondhand stuffs</h2><ul>
<li>Donedeal.com </li>
<li>Secendhand marketing of Facebook </li>
</ul>
]]></content>
      <categories>
        <category>Dublin Story</category>
      </categories>
      <tags>
        <tag>Dublin Story</tag>
      </tags>
  </entry>
  <entry>
    <title>Dublin Story 3 - Trip</title>
    <url>/2019/06/12/Dublin%20Story%203%20-%20Trip/</url>
    <content><![CDATA[<h2 id="Good-Apps-recommended"><a href="#Good-Apps-recommended" class="headerlink" title="Good Apps recommended"></a>Good Apps recommended</h2><ul>
<li>Hostelworld</li>
<li>Skyscanner</li>
<li>Booking</li>
<li>Kiwi.com</li>
</ul>
<h2 id="Traveling-to-Ireland"><a href="#Traveling-to-Ireland" class="headerlink" title="Traveling to Ireland"></a>Traveling to Ireland</h2><ul>
<li>Dublin Centre</li>
<li><p>Phoniex Park</p>
</li>
<li><p>Bray Beanch </p>
</li>
<li><p>Howh Coast</p>
</li>
</ul>
<h2 id="Traveling-to-North-of-Ireland"><a href="#Traveling-to-North-of-Ireland" class="headerlink" title="Traveling to North of Ireland"></a>Traveling to North of Ireland</h2><p>Placeholder</p>
<h2 id="Traveling-to-England"><a href="#Traveling-to-England" class="headerlink" title="Traveling to England"></a>Traveling to England</h2><p>If you, as a non-EU citizen, are going to England, you would need to apply BISV visa.</p>
<p>In fact, there are two step to do, you will happy travel if you complete all of applications.</p>
<ul>
<li>step 1,  applying by GOV.UK cost your €114</li>
<li>step 2,  applying appointment provide your documents and biometrics</li>
</ul>
<p><img src="https://i.loli.net/2019/06/13/5d017729629a019452.png" alt="5d017729629a019452.png"></p>
<p>Destination</p>
<ul>
<li><p>London</p>
</li>
<li><p>Sheffled</p>
</li>
</ul>
<h2 id="Treveling-to-Schengen-countries"><a href="#Treveling-to-Schengen-countries" class="headerlink" title="Treveling to Schengen countries"></a>Treveling to Schengen countries</h2><ul>
<li>French</li>
<li>Gemany</li>
<li>Spain</li>
<li>Iceland</li>
<li>Sweden</li>
<li>Norway</li>
<li>Finland</li>
<li>Greece</li>
<li>Austria</li>
<li>Italy</li>
</ul>
]]></content>
      <categories>
        <category>Dublin Story</category>
      </categories>
      <tags>
        <tag>Dublin Story</tag>
      </tags>
  </entry>
  <entry>
    <title>Dublin Story 4 - Study</title>
    <url>/2019/06/12/Dublin%20Story%204%20-%20Study/</url>
    <content><![CDATA[<h2 id="about-langauge-schools"><a href="#about-langauge-schools" class="headerlink" title="about langauge schools"></a>about langauge schools</h2><p>For stamp2 visia, and no-EU citizen can also legally live in the Dublin for learning </p>
<p>if you completed your language course, you would apply higher school. and I join the DCI , costing approximately €2500 for G15 course.</p>
<h2 id="about-universities"><a href="#about-universities" class="headerlink" title="about universities"></a>about universities</h2><p>There is reference about applying postgraduate below the screenshot</p>
<p><img src="https://i.loli.net/2019/06/13/5d016af5295c912674.png" alt="5d016af5295c912674.png"></p>
]]></content>
      <categories>
        <category>Dublin Story</category>
      </categories>
      <tags>
        <tag>Dublin Story</tag>
      </tags>
  </entry>
  <entry>
    <title>FED Advance Skils</title>
    <url>/2020/04/20/FED%20Advance%20Skils_/</url>
    <content><![CDATA[<h1 id="service-work"><a href="#service-work" class="headerlink" title="service work"></a>service work</h1><p>让js实现多线程<br><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gc9a29p33gj312e0k83zm.jpg" style="zoom:50%;"></p>
<h1 id="and-SVG"><a href="#and-SVG" class="headerlink" title=" and SVG"></a><canvas> and SVG</canvas></h1><table>
<thead>
<tr>
<th>Canvas</th>
<th>SVG</th>
</tr>
</thead>
<tbody>
<tr>
<td>通过 JavaScript 来绘制 2D 图形</td>
<td>是一种使用 XML 描述 2D 图形的语言</td>
</tr>
<tr>
<td>是HTML5提供的新元素<code></code></td>
<td>历史久远，并不是HTML5转悠的标签</td>
</tr>
<tr>
<td>位图（标量图），放大或改变尺寸会失真；逐像素进行渲染，依赖分辨率</td>
<td>矢量图，放大或改变尺寸不会失真；不依赖分辨率</td>
</tr>
<tr>
<td>弱的文本渲染能力（因为放大会失真）</td>
<td>最适合带有大型渲染区域的应用程序，比如谷歌地图（因为放大不会失真）</td>
</tr>
<tr>
<td>能够以 .png 或 .jpg 格式保存结果图像；能够引入 .png 或 .jpg格式的图片</td>
<td>不能以 .png 或 .jpg 格式保存结果图像；不能引入 .png 或 .jpg格式的图片</td>
</tr>
<tr>
<td>不支持事件处理器（一旦图形被绘制完成，它就不会继续得到浏览器的关注。如果其位置发生变化，那么整个场景也需要重新绘制，包括任何或许已被图形覆盖的对象。）</td>
<td>支持事件处理器（SVG DOM 中的每个元素都是可用的。您可以为某个元素附加 JavaScript 事件处理器。每个被绘制的图形均被视为对象。如果 SVG 对象的属性发生变化，那么浏览器能够自动重现图形。）</td>
</tr>
<tr>
<td>不能被引擎抓取</td>
<td>可以被引擎抓取</td>
</tr>
<tr>
<td>—</td>
<td>复杂度高会减慢渲染速度（任何过度使用 DOM 的应用都不快）</td>
</tr>
<tr>
<td>最适合图像密集型的游戏，其中的许多对象会被频繁重绘</td>
<td>不适合游戏应用</td>
</tr>
</tbody>
</table>
<p>canvas</p>
<p>offsetX</p>
<p>offsetY</p>
<p>svg</p>
<p>g</p>
<p>rect fill</p>
<p>text/span</p>
<ul>
<li><a href="https://docs.microsoft.com/zh-cn/previous-versions/msdn10/Hh377884(v=MSDN.10)" target="_blank" rel="noopener">https://docs.microsoft.com/zh-cn/previous-versions/msdn10/Hh377884(v=MSDN.10)</a></li>
</ul>
<h1 id="Promise-ASync、Await"><a href="#Promise-ASync、Await" class="headerlink" title="Promise/ASync、Await"></a>Promise/ASync、Await</h1><p>标准的promise函数</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> p = <span class="function"><span class="keyword">function</span> <span class="title">sleep</span>(<span class="params">ms</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve</span>) =&gt;</span> &#123;</span><br><span class="line">        setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">            resolve(<span class="string">'sleep for '</span> + ms + <span class="string">' ms'</span>);</span><br><span class="line">        &#125;, ms);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> result = p.then();</span><br></pre></td></tr></table></figure>
<p>Async\await 使用</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">asyncFunction</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.time(<span class="string">'asyncFunction total executing:'</span>);</span><br><span class="line">    <span class="keyword">const</span> sleep1 = <span class="keyword">await</span> sleep(<span class="number">2000</span>);</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'sleep1: '</span> + sleep1);</span><br><span class="line">    <span class="keyword">const</span> [sleep2, sleep3, sleep4] = <span class="keyword">await</span> <span class="built_in">Promise</span>.all([sleep(<span class="number">2000</span>), sleep(<span class="number">1000</span>), sleep(<span class="number">1500</span>)]);</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'sleep2: '</span> + sleep2);</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'sleep3: '</span> + sleep3);</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'sleep4: '</span> + sleep4);</span><br><span class="line">    <span class="keyword">const</span> sleepRace = <span class="keyword">await</span> <span class="built_in">Promise</span>.race([sleep(<span class="number">3000</span>), sleep(<span class="number">1000</span>), sleep(<span class="number">1000</span>)]);</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'sleep race: '</span> + sleepRace);</span><br><span class="line">    <span class="built_in">console</span>.timeEnd(<span class="string">'asyncFunction total executing:'</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="string">'asyncFunction done.'</span>  <span class="comment">// 这个可以不返回，这里只是做个标记，为了显示流程</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">asyncFunction().then(<span class="function"><span class="params">data</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(data);       <span class="comment">// asyncFunction return 的内容在这里获取</span></span><br><span class="line">&#125;).catch(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(error);      <span class="comment">// asyncFunction 的错误统一在这里抓取</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'after asyncFunction code executing....'</span>); <span class="comment">// 这个代表asyncFunction函数后的代码，</span></span><br><span class="line">                                                       <span class="comment">// 显示asyncFunction本身会立即返回，不会阻塞主线程</span></span><br></pre></td></tr></table></figure>
<h1 id="Flex"><a href="#Flex" class="headerlink" title="Flex"></a>Flex</h1><ul>
<li><a href="https://css-tricks.com/snippets/css/a-guide-to-flexbox/" target="_blank" rel="noopener">https://css-tricks.com/snippets/css/a-guide-to-flexbox/</a></li>
</ul>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">flex-direction</span>: column;</span><br><span class="line">    <span class="attribute">justify-content</span>: center;</span><br><span class="line">    <span class="attribute">align-items</span>: space-between;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="Typescript"><a href="#Typescript" class="headerlink" title="Typescript"></a>Typescript</h1><p>基础类型</p>
<ul>
<li>number</li>
<li>string</li>
<li>class</li>
</ul>
<p>关键字</p>
<ul>
<li>let</li>
<li>const</li>
</ul>
<p>范形</p>
<ul>
<li><t>

</t></li>
</ul>
<h1 id="Web-Assembly-Wasm"><a href="#Web-Assembly-Wasm" class="headerlink" title="Web Assembly .Wasm"></a>Web Assembly .Wasm</h1><h1 id="unit-px-rem-vh"><a href="#unit-px-rem-vh" class="headerlink" title="unit: px rem vh"></a>unit: px rem vh</h1><ul>
<li>px 分辨率</li>
<li>rem 相对主font-size 大小</li>
<li>vh 相对显示器高度</li>
</ul>
<h3 id="Quote"><a href="#Quote" class="headerlink" title="Quote"></a>Quote</h3><ul>
<li><a href="http://www.typescriptlang.org/docs/home.html" target="_blank" rel="noopener">http://www.typescriptlang.org/docs/home.html</a></li>
<li><a href="https://www.runoob.com/typescript/ts-tutorial.html" target="_blank" rel="noopener">https://www.runoob.com/typescript/ts-tutorial.html</a></li>
<li><a href="https://www.w3cschool.cn/typescript/" target="_blank" rel="noopener">https://www.w3cschool.cn/typescript/</a></li>
<li><a href="https://ts.xcatliu.com/basics/type-of-function" target="_blank" rel="noopener">https://ts.xcatliu.com/basics/type-of-function</a></li>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Service_Worker_API/Using_Service_Workers" target="_blank" rel="noopener">https://developer.mozilla.org/zh-CN/docs/Web/API/Service_Worker_API/Using_Service_Workers</a></li>
<li><a href="https://x5.tencent.com/tbs/guide/serviceworker.html" target="_blank" rel="noopener">https://x5.tencent.com/tbs/guide/serviceworker.html</a></li>
</ul>
<h1 id="React-PDF方案"><a href="#React-PDF方案" class="headerlink" title="React PDF方案"></a>React PDF方案</h1><ul>
<li><p><a href="https://juejin.im/post/5d036a78f265da1bce3dcd40" target="_blank" rel="noopener">https://juejin.im/post/5d036a78f265da1bce3dcd40</a></p>
</li>
<li><p><a href="https://github.com/diegomura/react-pdf" target="_blank" rel="noopener">https://github.com/diegomura/react-pdf</a></p>
</li>
</ul>
]]></content>
      <categories>
        <category>dev</category>
        <category>front-end</category>
      </categories>
      <tags>
        <tag>react</tag>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title>FED Build Tools Webpack4</title>
    <url>/2018/06/24/FED%20Build%20Tools%20Webpack4/</url>
    <content><![CDATA[<h1 id="installation"><a href="#installation" class="headerlink" title="installation"></a>installation</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd demo</span><br><span class="line">npm init -y</span><br><span class="line">npm install webpack webpack-cli webpack-dev-server --save-dev</span><br></pre></td></tr></table></figure>
<h1 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h1><p>需要手动创建的核心文件</p>
<ul>
<li>index.html 入口模板文件</li>
<li>main.js 入口 js 文件</li>
<li>webpack.dev.config.js</li>
</ul>
<p><img src="http://img.sandseasoft.com/20180625152985796284604.png" alt="20180625152985796284604.png"></p>
<h2 id="package-json"><a href="#package-json" class="headerlink" title="package.json"></a>package.json</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;name&quot;: &quot;webpack_demo&quot;,</span><br><span class="line">  &quot;version&quot;: &quot;1.0.0&quot;,</span><br><span class="line">  &quot;description&quot;: &quot;&quot;,</span><br><span class="line">  &quot;main&quot;: &quot;main.js&quot;,</span><br><span class="line">  &quot;scripts&quot;: &#123;</span><br><span class="line">    &quot;dev&quot;: &quot;webpack-dev-server  --mode development --config=build/webpack.dev.config.js&quot;,</span><br><span class="line">    &quot;test&quot;: &quot;webpack  --mode production --config=build/webpack.dev.config.js&quot;,</span><br><span class="line">    &quot;prod&quot;: &quot;webpack  --mode production --config=build/webpack.dev.config.js&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;keywords&quot;: [],</span><br><span class="line">  &quot;author&quot;: &quot;&quot;,</span><br><span class="line">  &quot;license&quot;: &quot;ISC&quot;,</span><br><span class="line">  &quot;devDependencies&quot;: &#123;</span><br><span class="line">    &quot;babel-core&quot;: &quot;^6.26.3&quot;,</span><br><span class="line">    &quot;babel-loader&quot;: &quot;^7.1.4&quot;,</span><br><span class="line">    &quot;babel-preset-es2015&quot;: &quot;^6.24.1&quot;,</span><br><span class="line">    &quot;babel-preset-react&quot;: &quot;^6.24.1&quot;,</span><br><span class="line">    &quot;css-loader&quot;: &quot;^0.28.11&quot;,</span><br><span class="line">    &quot;file-loader&quot;: &quot;^1.1.11&quot;,</span><br><span class="line">    &quot;html-webpack-plugin&quot;: &quot;^3.2.0&quot;,</span><br><span class="line">    &quot;less&quot;: &quot;^3.0.4&quot;,</span><br><span class="line">    &quot;less-loader&quot;: &quot;^4.1.0&quot;,</span><br><span class="line">    &quot;style-loader&quot;: &quot;^0.21.0&quot;,</span><br><span class="line">    &quot;url-loader&quot;: &quot;^1.0.1&quot;,</span><br><span class="line">    &quot;webpack&quot;: &quot;^4.12.1&quot;,</span><br><span class="line">    &quot;webpack-cli&quot;: &quot;^3.0.8&quot;,</span><br><span class="line">    &quot;webpack-dev-server&quot;: &quot;^3.1.4&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;dependencies&quot;: &#123;</span><br><span class="line">    &quot;lodash&quot;: &quot;^4.17.10&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="webpack-dev-config-js"><a href="#webpack-dev-config-js" class="headerlink" title="webpack.dev.config.js"></a>webpack.dev.config.js</h2><p>webpack4的配置文件由几个部分组成</p>
<ul>
<li>mode 编译模式，选择 prod 会有优化压缩能力</li>
<li>entry 核心 js 入口</li>
<li>output 输出 js 出口</li>
<li>module 编译过程应用的加载模块</li>
<li>plugins 构建输出过程的家在模块</li>
<li>devServer 开发热重载过程中的模块</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">const path = require(&apos;path&apos;);</span><br><span class="line">const uglify = require(&apos;uglifyjs-webpack-plugin&apos;);</span><br><span class="line">const HtmlWebpackPlugin = require(&apos;html-webpack-plugin&apos;);</span><br><span class="line"></span><br><span class="line">//安装webpack webpack-cli webpack-dev-server 模块</span><br><span class="line">module.exports = &#123;</span><br><span class="line">    //启动模式 development production</span><br><span class="line">    mode: &apos;development&apos;,</span><br><span class="line">    //入口文件</span><br><span class="line">    entry: &#123;</span><br><span class="line">        main: &apos;./src/main.js&apos;,</span><br><span class="line">        main2: &apos;./src/main2.js&apos;,</span><br><span class="line">    &#125;,</span><br><span class="line">    //输出文件位置</span><br><span class="line">    output: &#123;</span><br><span class="line">        path: path.resolve(__dirname, &apos;../dist&apos;),</span><br><span class="line">        filename: &quot;bundle.[name].js&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    //调用编译模块</span><br><span class="line">    module: &#123;</span><br><span class="line">        rules: [</span><br><span class="line">            //css 加载  style-loader css-loader</span><br><span class="line">            &#123;</span><br><span class="line">                test: /\.css$/,</span><br><span class="line">                use: [</span><br><span class="line">                    &#123;loader: &quot;style-loader&quot;&#125;,</span><br><span class="line">                    &#123;loader: &quot;css-loader&quot;&#125;</span><br><span class="line">                ]</span><br><span class="line"></span><br><span class="line">            &#125;,</span><br><span class="line">            //图片处理</span><br><span class="line">            &#123;</span><br><span class="line">                test: /\.(png|jpg|gif|jpeg)/,  //是匹配图片文件后缀名称</span><br><span class="line">                use: [&#123;</span><br><span class="line">                    loader: &apos;url-loader&apos;, //是指定使用的loader和loader的配置参数</span><br><span class="line">                    options: &#123;</span><br><span class="line">                        limit: 500  //是把小于500B的文件打成Base64的格式，写入JS</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;]</span><br><span class="line">            &#125;,</span><br><span class="line">            //less less-loader</span><br><span class="line">            &#123;</span><br><span class="line">                test: /\.less$/,</span><br><span class="line">                use: [&#123;</span><br><span class="line">                    loader: &quot;style-loader&quot; // creates style nodes from JS strings</span><br><span class="line">                &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line">                        loader: &quot;css-loader&quot; // translates CSS into CommonJS</span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line">                        loader: &quot;less-loader&quot; // compiles Less to CSS</span><br><span class="line">                    &#125;]</span><br><span class="line">            &#125;,</span><br><span class="line">            //es6 配置 babel-core babel-loader babel-preset-es2015 babel-preset-react</span><br><span class="line">            &#123;</span><br><span class="line">                test: /\.(jsx|js)$/,</span><br><span class="line">                use: &#123;</span><br><span class="line">                    loader: &apos;babel-loader&apos;,</span><br><span class="line">                &#125;,</span><br><span class="line">                exclude: /node_modules/</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">    //调用打包插件</span><br><span class="line">    plugins: [</span><br><span class="line">        //压缩插件 默认集成</span><br><span class="line">        new uglify(),</span><br><span class="line">        //编译生产打包插件</span><br><span class="line">        new HtmlWebpackPlugin(&#123;</span><br><span class="line">            //是对html文件进行压缩</span><br><span class="line">            minify: &#123;</span><br><span class="line">                //removeAttrubuteQuotes是却掉属性的双引号。</span><br><span class="line">                removeAttributeQuotes: true</span><br><span class="line">            &#125;,</span><br><span class="line">            //为了开发中js有缓存效果，所以加入hash，这样可以有效避免缓存JS。</span><br><span class="line">            hash: true,</span><br><span class="line">            //是要打包的html模版路径和文件名称</span><br><span class="line">            template: &apos;./src/index.html&apos;</span><br><span class="line"></span><br><span class="line">        &#125;)</span><br><span class="line">    ],</span><br><span class="line">    //调用开发模式</span><br><span class="line">    devServer: &#123;</span><br><span class="line">        contentBase: path.resolve(__dirname, &apos;../dist&apos;),</span><br><span class="line">        host: &quot;0.0.0.0&quot;,</span><br><span class="line">        compress: true,</span><br><span class="line">        port: 8999</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<h2 id="babelrc"><a href="#babelrc" class="headerlink" title=".babelrc"></a>.babelrc</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;presets&quot;:[&quot;react&quot;,&quot;es2015&quot;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><p><a href="https://webpack.js.org/guides/getting-started/" target="_blank" rel="noopener">https://webpack.js.org/guides/getting-started/</a><br><a href="https://webpack.docschina.org/concepts/" target="_blank" rel="noopener">https://webpack.docschina.org/concepts/</a></p>
]]></content>
      <categories>
        <category>dev</category>
        <category>front-end</category>
      </categories>
      <tags>
        <tag>webpack</tag>
      </tags>
  </entry>
  <entry>
    <title>FED DSL</title>
    <url>/2020/12/20/FED%20DSL/</url>
    <content><![CDATA[<h1 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h1><ol>
<li><h1 id="Architecture"><a href="#Architecture" class="headerlink" title="Architecture"></a>Architecture</h1></li>
</ol>
<ul>
<li><h1 id="Feautre"><a href="#Feautre" class="headerlink" title="Feautre"></a>Feautre</h1></li>
<li></li>
</ul>
<h1 id="Concept"><a href="#Concept" class="headerlink" title="Concept"></a>Concept</h1><ul>
<li><h1 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h1></li>
</ul>
<h1 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h1><ul>
<li><h1 id="Quote"><a href="#Quote" class="headerlink" title="Quote"></a>Quote</h1></li>
<li><p><a href="https://cloud.tencent.com/developer/article/1458458" target="_blank" rel="noopener">https://cloud.tencent.com/developer/article/1458458</a></p>
</li>
<li><a href="https://linw1995.com/blog/%E5%A6%82%E4%BD%95%E5%86%99%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84-DSL-%E4%BB%8E-JSON-%E4%B8%AD%E6%8F%90%E5%8F%96%E6%95%B0%E6%8D%AE%E4%BA%8C/" target="_blank" rel="noopener">https://linw1995.com/blog/%E5%A6%82%E4%BD%95%E5%86%99%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84-DSL-%E4%BB%8E-JSON-%E4%B8%AD%E6%8F%90%E5%8F%96%E6%95%B0%E6%8D%AE%E4%BA%8C/</a></li>
<li></li>
</ul>
]]></content>
      <categories>
        <category>FED</category>
      </categories>
      <tags>
        <tag>dsl</tag>
        <tag>ast</tag>
      </tags>
  </entry>
  <entry>
    <title>FED Reacts</title>
    <url>/2020/04/10/FED%20Reactjs/</url>
    <content><![CDATA[<h1 id="Life-Cycle"><a href="#Life-Cycle" class="headerlink" title="Life Cycle"></a>Life Cycle</h1><p><img src="https://miro.medium.com/max/4532/1*lINPzI9FsJnay2_fm4vmzA.png" alt></p>
<table>
<thead>
<tr>
<th></th>
<th>setState</th>
<th>props</th>
</tr>
</thead>
<tbody>
<tr>
<td>componentWillReveiceProps</td>
<td></td>
<td>🐶</td>
</tr>
<tr>
<td>shouldComponentUpdate</td>
<td>🐶</td>
<td>🐶</td>
</tr>
<tr>
<td>componentWillUpdate</td>
<td>🐶</td>
<td>🐶</td>
</tr>
<tr>
<td>render</td>
<td>🐶</td>
<td>🐶</td>
</tr>
<tr>
<td>componentDidUpdate</td>
<td>🐶</td>
<td>🐶</td>
</tr>
</tbody>
</table>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">getSnapshotBeforeUpdate(prevProps, prevState) &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">static getDerivedStateFromProps(props, state) &#123;    </span><br><span class="line">	return &#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line">componentDidMount() &#123;&#125;</span><br><span class="line">componentDidUpdate() &#123;&#125;</span><br><span class="line">componentWillUnMount() &#123;&#125;</span><br></pre></td></tr></table></figure>
<h1 id="Route"><a href="#Route" class="headerlink" title="Route"></a>Route</h1><h1 id="Inline-CSS-style-component"><a href="#Inline-CSS-style-component" class="headerlink" title="Inline CSS style component"></a>Inline CSS style component</h1><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> ReactionInfoContainer = styled.div<span class="string">`</span></span><br><span class="line"><span class="string">    width: 95%;</span></span><br><span class="line"><span class="string">    margin-top: 38px;</span></span><br><span class="line"><span class="string">    position: absolute;</span></span><br><span class="line"><span class="string">    bottom: <span class="subst">$&#123;props =&gt; <span class="string">`<span class="subst">$&#123;props.bottom&#125;</span>px`</span>&#125;</span>;</span></span><br><span class="line"><span class="string">    height: <span class="subst">$&#123;props =&gt; <span class="string">`<span class="subst">$&#123;props.height !== <span class="literal">null</span> ? props.height : <span class="string">'auto'</span>&#125;</span>`</span>&#125;</span> </span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> OtherContainert = styled(<span class="function"><span class="params">props</span> =&gt;</span><span class="xml"><span class="tag">&lt;<span class="name">Form</span> &#123;<span class="attr">...props</span>&#125;&gt;</span>)`</span></span><br><span class="line"><span class="xml">    width: 12px;</span></span><br><span class="line"><span class="xml">`;</span></span><br></pre></td></tr></table></figure>
<h1 id="Component"><a href="#Component" class="headerlink" title="Component"></a>Component</h1><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">'react'</span>;</span><br><span class="line"><span class="keyword">import</span> ReactDOM <span class="keyword">from</span> <span class="string">'react-dom'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; connect &#125; <span class="keyword">from</span> <span class="string">'react-redux'</span>;</span><br><span class="line"><span class="keyword">import</span> styled <span class="keyword">from</span> <span class="string">'styled-components'</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> ReactionInfoContainer = styled.div<span class="string">`</span></span><br><span class="line"><span class="string">    width: 95%;</span></span><br><span class="line"><span class="string">    margin-top: 38px;</span></span><br><span class="line"><span class="string">    position: absolute;</span></span><br><span class="line"><span class="string">    bottom: <span class="subst">$&#123;props =&gt; <span class="string">`<span class="subst">$&#123;props.bottom&#125;</span>px`</span>&#125;</span>;</span></span><br><span class="line"><span class="string">    height: <span class="subst">$&#123;props =&gt; <span class="string">`<span class="subst">$&#123;props.height !== <span class="literal">null</span> ? props.height : <span class="string">'auto'</span>&#125;</span>`</span>&#125;</span> </span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="class"><span class="keyword">class</span> <span class="title">xxx</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">PureComponent</span>&lt;<span class="title">IProps</span>,<span class="title">IStates</span>&gt;</span>&#123;</span><br><span class="line">  constructs(props)&#123;</span><br><span class="line">    <span class="keyword">super</span>(props);</span><br><span class="line">  &#125;</span><br><span class="line">  render():React.ReactNode&#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">    			&lt;ReactionInfoContainer</span><br><span class="line">                    height=&#123;INFO_CONTAINER_HEIGHT_HIDE&#125;</span><br><span class="line">                    bottom=&#123;<span class="keyword">this</span>.props.isPlayground ? <span class="string">'0'</span> : SCHEME_BOTTOM_BAR&#125;</span><br><span class="line">                &gt;</span><br><span class="line">               </span><br><span class="line">          &lt;<span class="regexp">/ReactionInfoContainer&gt;)</span></span><br><span class="line"><span class="regexp">  &#125;</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br></pre></td></tr></table></figure>
<h1 id="react-redux"><a href="#react-redux" class="headerlink" title="react-redux"></a>react-redux</h1><ul>
<li>action</li>
<li>Statetoprops</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">interface IDispatchProps &#123;</span><br><span class="line">    userLogout: () =&gt; void;</span><br><span class="line">&#125;</span><br><span class="line">interface IStateProps &#123;</span><br><span class="line">    taskInfo?: TaskInfo;</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line">this.props.taskInfo;    </span><br><span class="line"></span><br><span class="line">const mapStateToProps = (state: IStoreState) =&gt; &#123;</span><br><span class="line">    const &#123; modalProps &#125; = state.modal;</span><br><span class="line">    const &#123; role &#125; = state.role;</span><br><span class="line">    const &#123; taskInfo &#125; = state.chemiriseTasks;</span><br><span class="line">    return &#123;</span><br><span class="line">        taskInfo,</span><br><span class="line">        modalProps,</span><br><span class="line">        role,</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">function mapDispatchToProps(dispatch: Dispatch): IDispatchProps &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">        userLogout: () =&gt; &#123;</span><br><span class="line">            dispatch(userLogout());</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">export default connect(</span><br><span class="line">    mapStateToProps,</span><br><span class="line">    mapDispatchToProps,</span><br><span class="line">)(PageHeaderContainer);</span><br></pre></td></tr></table></figure>
<h1 id="useHook"><a href="#useHook" class="headerlink" title="useHook"></a>useHook</h1><h1 id="Geninic"><a href="#Geninic" class="headerlink" title="Geninic"></a>Geninic</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">function identity &lt;T, U&gt;(value: T, message: U) : T &#123;</span><br><span class="line">  console.log(message);</span><br><span class="line">  return value;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">console.log(identity(68, "Semlinker"));</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span></span><br><span class="line">interface GenericInterface&lt;U&gt; &#123;</span><br><span class="line">  value: U</span><br><span class="line">  getIdentity: () =&gt; U</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class IdentityClass&lt;T&gt; implements GenericInterface&lt;T&gt; &#123;</span><br><span class="line">  value: T</span><br><span class="line"></span><br><span class="line">  constructor(value: T) &#123;</span><br><span class="line">    this.value = value</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  getIdentity(): T &#123;</span><br><span class="line">    return this.value</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">const myNumberClass = new IdentityClass&lt;Number&gt;(68);</span><br><span class="line">console.log(myNumberClass.getIdentity()); // 68</span><br><span class="line"></span><br><span class="line">const myStringClass = new IdentityClass&lt;string&gt;("Semlinker!");</span><br><span class="line">console.log(myStringClass.getIdentity()); // Semlinker!</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span></span><br><span class="line">function getProperty&lt;T, K extends keyof T&gt;(obj: T, key: K): T[K] &#123;</span><br><span class="line">  return obj[key];</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#</span></span><br><span class="line">async function stringPromise() &#123;</span><br><span class="line">  return "Hello, Semlinker!";</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">interface Person &#123;</span><br><span class="line">  name: string;</span><br><span class="line">  age: number;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">async function personPromise() &#123;</span><br><span class="line">  return &#123; name: "Semlinker", age: 30 &#125; as Person;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">type PromiseType&lt;T&gt; = (args: any[]) =&gt; Promise&lt;T&gt;;</span><br><span class="line">type UnPromisify&lt;T&gt; = T extends PromiseType&lt;infer U&gt; ? U : never;</span><br><span class="line"></span><br><span class="line">type extractStringPromise = UnPromisify&lt;typeof stringPromise&gt;; // string</span><br><span class="line">type extractPersonPromise = UnPromisify&lt;typeof personPromise&gt;; // Person</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> tools</span></span><br><span class="line">type Partial&lt;T&gt; = &#123;</span><br><span class="line">    [P in keyof T]?: T[P];</span><br><span class="line">&#125;;</span><br><span class="line">type Record&lt;K extends keyof any, T&gt; = &#123;</span><br><span class="line">    [P in K]: T;</span><br><span class="line">&#125;;</span><br><span class="line">type Pick&lt;T, K extends keyof T&gt; = &#123;</span><br><span class="line">    [P in K]: T[P];</span><br><span class="line">&#125;;</span><br><span class="line">type Exclude&lt;T, U&gt; = T extends U ? never : T;</span><br><span class="line">type ReturnType&lt;T extends (...args: any) =&gt; any&gt; = T extends (...args: any) =&gt; infer R ? R : any;</span><br></pre></td></tr></table></figure>
<h1 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h1><h2 id="best-practices"><a href="#best-practices" class="headerlink" title="best practices"></a>best practices</h2><ul>
<li><a href="https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#side-effects-on-props-change" target="_blank" rel="noopener">https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#side-effects-on-props-change</a></li>
<li><a href="https://reactjs.org/blog/2018/06/07/you-probably-dont-need-derived-state.html" target="_blank" rel="noopener">https://reactjs.org/blog/2018/06/07/you-probably-dont-need-derived-state.html</a></li>
</ul>
<h1 id="Quote"><a href="#Quote" class="headerlink" title="Quote"></a>Quote</h1><ul>
<li><a href="https://juejin.im/post/5b6f1800f265da282d45a79a" target="_blank" rel="noopener">https://juejin.im/post/5b6f1800f265da282d45a79a</a></li>
</ul>
]]></content>
      <categories>
        <category>dev</category>
        <category>front-end</category>
      </categories>
      <tags>
        <tag>react</tag>
      </tags>
  </entry>
  <entry>
    <title>FED TEST e2e-test cypress</title>
    <url>/2020/12/11/FED%20TEST%20e2e-test%20cypress/</url>
    <content><![CDATA[<h1 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yarn add cypress --dev</span><br><span class="line">cypress run --config-file false  --headless</span><br></pre></td></tr></table></figure>
<h1 id="Quate"><a href="#Quate" class="headerlink" title="Quate"></a>Quate</h1><ul>
<li><a href="https://docs.cypress.io/api/commands/select.html#Force-select" target="_blank" rel="noopener">https://docs.cypress.io/api/commands/select.html#Force-select</a></li>
<li><a href="https://docs.cypress.io/guides/guides/command-line.html#cypress-run" target="_blank" rel="noopener">https://docs.cypress.io/guides/guides/command-line.html#cypress-run</a></li>
<li><a href="https://docs.cypress.io/guides/tooling/typescript-support.html#Types-for-custom-commands" target="_blank" rel="noopener">https://docs.cypress.io/guides/tooling/typescript-support.html#Types-for-custom-commands</a></li>
</ul>
]]></content>
      <categories>
        <category>fed</category>
        <category>test</category>
      </categories>
      <tags>
        <tag>E2e-test</tag>
        <tag>cypress</tag>
      </tags>
  </entry>
  <entry>
    <title>K3S Traefik Guide</title>
    <url>/2020/12/16/K3S%20Traefik%20Guide/</url>
    <content><![CDATA[<h2 id="Concepts"><a href="#Concepts" class="headerlink" title="Concepts"></a>Concepts</h2><p><a href="https://doc.traefik.io/traefik/getting-started/quick-start/" target="_blank" rel="noopener">https://doc.traefik.io/traefik/getting-started/quick-start/</a></p>
<p><img src="https://doc.traefik.io/traefik/assets/img/architecture-overview.png" alt="Architecture"></p>
<ul>
<li><a href="https://doc.traefik.io/traefik/providers/overview/" target="_blank" rel="noopener"><em>Providers</em></a> discover the services that live on your infrastructure (their IP, health, …)</li>
<li><a href="https://doc.traefik.io/traefik/routing/entrypoints/" target="_blank" rel="noopener"><em>Entrypoints</em></a> listen for incoming traffic (ports, …)</li>
<li><a href="https://doc.traefik.io/traefik/routing/routers/" target="_blank" rel="noopener"><em>Routers</em></a> analyse the requests (host, path, headers, SSL, …)</li>
<li><a href="https://doc.traefik.io/traefik/routing/services/" target="_blank" rel="noopener"><em>Services</em></a> forward the request to your services (load balancing, …)</li>
<li><a href="https://doc.traefik.io/traefik/middlewares/overview/" target="_blank" rel="noopener"><em>Middlewares</em></a> may update the request or make decisions based on the request (authentication, rate limiting, headers, …)</li>
</ul>
<h2 id="Featrue"><a href="#Featrue" class="headerlink" title="Featrue"></a>Featrue</h2><ul>
<li>TCP/HTTP代理</li>
<li>自动 let‘encript 证书</li>
<li>服务自发现</li>
<li>金丝雀发布</li>
<li>流量复制</li>
</ul>
<h2 id="Step"><a href="#Step" class="headerlink" title="Step"></a>Step</h2><h3 id="Installation-of-k3s"><a href="#Installation-of-k3s" class="headerlink" title="Installation of k3s"></a>Installation of k3s</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> uninstall</span></span><br><span class="line">sh /usr/local/bin/k3s-uninstall.sh</span><br><span class="line"><span class="meta">#</span><span class="bash"> 0x01 install </span></span><br><span class="line">curl -sfL http://rancher-mirror.cnrancher.com/k3s/k3s-install.sh \ 				          			| INSTALL_K3S_MIRROR=cn INSTALL_K3S_EXEC="--no-deploy traefik --tls-san 81.68.107.111" \</span><br><span class="line">      sh  -</span><br><span class="line"><span class="meta">#</span><span class="bash"> 已经安装了，修改/etc/systemd/system/k3s.service</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> ExecStart=/usr/<span class="built_in">local</span>/bin/k3s \</span></span><br><span class="line"><span class="meta">#</span><span class="bash">    server \</span></span><br><span class="line"><span class="meta">#</span><span class="bash">        <span class="string">'--disable=traefik'</span> </span></span><br><span class="line">systemctl daemon-reload</span><br><span class="line">service k3s restart</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 0x02 change mirrors</span></span><br><span class="line">cd /var/lib/rancher/k3s/agent/etc/containerd/ &amp;&amp; cp config.toml config.toml.tmpl</span><br><span class="line"><span class="meta">#</span><span class="bash"> edit added</span></span><br><span class="line">[plugins.cri.registry.mirrors]</span><br><span class="line">  [plugins.cri.registry.mirrors."docker.io"]</span><br><span class="line">    endpoint = ["https://docker.mirrors.ustc.edu.cn"]</span><br><span class="line">&lt;&lt;EOF</span><br><span class="line"><span class="meta">#</span><span class="bash"> restart and check</span></span><br><span class="line">systemctl restart k3s</span><br><span class="line">crictl info</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span></span><br><span class="line">kubectl get pods --all-namespaces</span><br></pre></td></tr></table></figure>
<h3 id="Installation-of-traefik"><a href="#Installation-of-traefik" class="headerlink" title="Installation of traefik"></a>Installation of traefik</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> https://doc.traefik.io/traefik/v2.3/user-guides/crd-acme/</span></span><br></pre></td></tr></table></figure>
<h2 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="Quate"><a href="#Quate" class="headerlink" title="Quate"></a>Quate</h1><ul>
<li><a href="https://docs.rancher.cn/docs/k3s/quick-start/_index" target="_blank" rel="noopener">https://docs.rancher.cn/docs/k3s/quick-start/_index</a></li>
<li><a href="https://doc.traefik.io/traefik/v2.3/" target="_blank" rel="noopener">https://doc.traefik.io/traefik/v2.3/</a></li>
</ul>
]]></content>
      <categories>
        <category>ops</category>
      </categories>
      <tags>
        <tag>k3s</tag>
        <tag>traefik</tag>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>Language C/C++</title>
    <url>/2020/02/26/Language%20C_C++/</url>
    <content><![CDATA[<p>标准 98/11/14/18</p>
<p>C语言基础</p>
<p>C++补充</p>
<ul>
<li>封装继承多态</li>
<li>指针</li>
</ul>
<p>格式</p>
<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gc9cmny4o6j329e0g8jse.jpg" alt></p>
<p>模版</p>
<p>Template</p>
<h1 id="cmake-CMakeList-txt"><a href="#cmake-CMakeList-txt" class="headerlink" title="cmake CMakeList.txt"></a>cmake CMakeList.txt</h1><h1 id="常用库"><a href="#常用库" class="headerlink" title="常用库"></a>常用库</h1><ul>
<li>STL <a href="http://c.biancheng.net/stl/" target="_blank" rel="noopener">http://c.biancheng.net/stl/</a></li>
</ul>
]]></content>
      <categories>
        <category>dev</category>
      </categories>
      <tags>
        <tag>c</tag>
        <tag>c++</tag>
      </tags>
  </entry>
  <entry>
    <title>Language Python Ansible</title>
    <url>/2015/12/31/Language%20Python%20Ansible/</url>
    <content><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>类似工具如 fabic，ppssh，客户端需要 python&gt;2.4<br>配置Inventory路径在 etc/ansible/hosts</p>
<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><ul>
<li><a href="http://docs.ansible.com/ansible/latest/intro_installation.html" target="_blank" rel="noopener">http://docs.ansible.com/ansible/latest/intro_installation.html</a></li>
<li><a href="http://www.ansible.com.cn/docs/tower.html" target="_blank" rel="noopener">http://www.ansible.com.cn/docs/tower.html</a><h1 id="指南"><a href="#指南" class="headerlink" title="指南"></a>指南</h1><a href="http://www.ansible.com.cn/" target="_blank" rel="noopener">http://www.ansible.com.cn/</a><h1 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h1></li>
<li>inventory 机器清单</li>
<li>playbook 部署脚本<h1 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pip install ansible</span><br><span class="line"># 命令集</span><br><span class="line">ansible --version</span><br><span class="line">ansible-playbook </span><br><span class="line">ansible-doc</span><br><span class="line"># 配置</span><br><span class="line"># 默认是没有/etc/ansible/ansible.cfg文件需要自建</span><br><span class="line">/etc/ansible/ansible.cfg</span><br><span class="line">/etc/ansible/hosts</span><br><span class="line">/usr/share/ansible_plugins/</span><br><span class="line"># 常用命令</span><br><span class="line">ansible -vvv -i /etc/ansible/hosts all -m ping </span><br><span class="line">ansible all -m raw  -a &quot;echo 1&quot;</span><br><span class="line">ansible all -m copy -a &quot;src=xx dest=/&quot;</span><br><span class="line">ansible all -a &quot;uptime&quot;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h1 id="Playbook使用"><a href="#Playbook使用" class="headerlink" title="Playbook使用"></a>Playbook使用</h1><p>对于稳定的配置，就要使用playbook了。</p>
<p>一个playbook由多个play组成，一个play由多个task组成，参考Intro to Playbooks。</p>
<p>一个playbook的文件内容通常是如下形式：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">- hosts: groupname</span><br><span class="line">  remote_user: yourname</span><br><span class="line">  sudo: yes</span><br><span class="line">  tasks:</span><br><span class="line">  - name: delete /tmp/server-test</span><br><span class="line">    shell: rm -rf /tmp/server-test</span><br></pre></td></tr></table></figure></p>
<p>使用<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ansible-playbook  -i hosts all xx.yml</span><br><span class="line">ansible-playbook  xx.yml --check</span><br></pre></td></tr></table></figure></p>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="http://docs.ansible.com/ansible/" target="_blank" rel="noopener">http://docs.ansible.com/ansible/</a><br><a href="http://www.tuicool.com/articles/AZVJ3qQ" target="_blank" rel="noopener">http://www.tuicool.com/articles/AZVJ3qQ</a><br><a href="https://linuxtoy.org/archives/hands-on-with-ansible.html" target="_blank" rel="noopener">https://linuxtoy.org/archives/hands-on-with-ansible.html</a></p>
]]></content>
      <categories>
        <category>ops</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>ansible</tag>
      </tags>
  </entry>
  <entry>
    <title>Language Python Cheatsheet</title>
    <url>/2019/12/24/Language%20Python%20Cheatsheet/</url>
    <content><![CDATA[<h1 id="demo"><a href="#demo" class="headerlink" title="demo"></a>demo</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#  -*- coding:utf-8 -*-</span><br></pre></td></tr></table></figure>
<p><a href="https://github.com/jik1992/pythonDemo" target="_blank" rel="noopener">https://github.com/jik1992/pythonDemo</a></p>
<h1 id="最佳实践"><a href="#最佳实践" class="headerlink" title="最佳实践"></a>最佳实践</h1><ul>
<li><p>快速搭建一个 http 服务器</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python -m SimpleHTTPServer 30001</span><br><span class="line">python3 -m http.server 30001</span><br></pre></td></tr></table></figure>
</li>
<li><p>python3 没有 mysqldb 库了，取而代之的是 pymysql3</p>
</li>
<li><p>线上部署pyenv(这个可以绕过 root 的问题)<br><a href="https://github.com/yyuu/pyenv" target="_blank" rel="noopener">https://github.com/yyuu/pyenv</a></p>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git clone git://github.com/yyuu/pyenv.git ~/.pyenv</span><br><span class="line">echo &apos;export PYENV_ROOT=&quot;$HOME/.pyenv&quot;&apos; &gt;&gt; ~/.bashrc</span><br><span class="line">echo &apos;export PATH=&quot;$PYENV_ROOT/bin:$PATH&quot;&apos; &gt;&gt; ~/.bashrc</span><br><span class="line">echo &apos;eval &quot;$(pyenv init -)&quot;&apos; &gt;&gt; ~/.bashrc</span><br><span class="line">exec $SHELL -l</span><br><span class="line"></span><br><span class="line">pyenv install -list</span><br><span class="line">pyenv install 2.7</span><br><span class="line">pyenv install 3.4</span><br><span class="line">pyenv versions</span><br><span class="line">pyenv global 2.7</span><br><span class="line">pyenv shell 3.4  =&gt;重启失效</span><br></pre></td></tr></table></figure>
<ul>
<li><p>手动编译 python</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https://www.python.org/ftp/python/</span><br><span class="line">./configure --prefix=/usr/local/python27</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line">ln -s /usr/local/python27/bin/python /usr/sbin/python</span><br></pre></td></tr></table></figure>
</li>
<li><p>打包</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">virtualenv new_project -relocatable</span><br><span class="line">cd new_project</span><br><span class="line">source ./bin/activite</span><br><span class="line">pip frezze &gt; requirment.txt</span><br><span class="line">pip install -r requirment.txt</span><br><span class="line">pip install --upgrade pip</span><br><span class="line"></span><br><span class="line">isort -rc xxxxx &amp; black xxxxx #formatter</span><br><span class="line">flake8 xxxxx #lint</span><br><span class="line">mypy xxxxx #type checking</span><br></pre></td></tr></table></figure>
</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo pip install virtualenv</span><br><span class="line">virtualenv .</span><br><span class="line"><span class="built_in">source</span> bin/activate</span><br><span class="line">pip install gunicorn</span><br><span class="line">gunicorn -w 4 myapp:app</span><br><span class="line">pkill gunicorn</span><br></pre></td></tr></table></figure>
<h1 id="常用包"><a href="#常用包" class="headerlink" title="常用包"></a>常用包</h1><ul>
<li>jupyter  <a href="http://jupyter.readthedocs.org/" target="_blank" rel="noopener">http://jupyter.readthedocs.org/</a></li>
<li>matplotlib  <a href="http://www.labri.fr/perso/nrougier/teaching/matplotlib/" target="_blank" rel="noopener">http://www.labri.fr/perso/nrougier/teaching/matplotlib/</a></li>
<li>numpy、panda</li>
</ul>
<p>常用第三方库</p>
<ul>
<li>virtualenv</li>
<li>pillow</li>
<li>flask/requests/aiohttp/asyncio</li>
<li>chardet</li>
<li>psutil</li>
</ul>
<p>导索引</p>
<p>找k大</p>
]]></content>
      <categories>
        <category>dev</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>Language Python Jupyter</title>
    <url>/2015/12/24/Language%20Python%20Jupyter_/</url>
    <content><![CDATA[<h1 id="Anaconda"><a href="#Anaconda" class="headerlink" title="Anaconda"></a>Anaconda</h1><p><a href="https://www.continuum.io/downloads" target="_blank" rel="noopener">https://www.continuum.io/downloads</a><br><a href="https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/" target="_blank" rel="noopener">https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/</a><br>Anaconda是关于Python数据分析和科学计算的分发包。</p>
<ul>
<li>自带 完整的 python 语言环境</li>
<li>自带 pip 和 conda</li>
<li>自带 notebook</li>
<li>绕 root</li>
</ul>
<h1 id="Jupyter"><a href="#Jupyter" class="headerlink" title="Jupyter"></a>Jupyter</h1><p><a href="https://github.com/jupyter/notebook" target="_blank" rel="noopener">https://github.com/jupyter/notebook</a><br><a href="http://ipython.org/notebook" target="_blank" rel="noopener">http://ipython.org/notebook</a></p>
<h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 安装</span><br><span class="line">pip install notebook</span><br><span class="line"># 启动</span><br><span class="line">jupyter notebook --ip=&apos;*&apos;</span><br></pre></td></tr></table></figure>
<h1 id="魔术命令使用"><a href="#魔术命令使用" class="headerlink" title="魔术命令使用"></a>魔术命令使用</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 所有魔术命令文档</span><br><span class="line">%magic</span><br><span class="line"># 检测时间</span><br><span class="line">%timeit</span><br><span class="line"># 自动载入 numpy pylab 库</span><br><span class="line">%pylab </span><br><span class="line"># 下载代码</span><br><span class="line">%load</span><br><span class="line"># 性能分析</span><br><span class="line">%%prun</span><br></pre></td></tr></table></figure>
<h1 id="自带工具"><a href="#自带工具" class="headerlink" title="自带工具"></a>自带工具</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 图</span><br><span class="line">%pylab inline</span><br><span class="line">plot(random.randn(100));</span><br><span class="line"></span><br><span class="line"># 表</span><br><span class="line">import pandas as pd</span><br><span class="line"> </span><br><span class="line">df = pd.DataFrame(&#123; &apos;A&apos; : 1.,</span><br><span class="line">                    &apos;B&apos; : pd.Timestamp(&apos;20130102&apos;),</span><br><span class="line">                    &apos;C&apos; : pd.Series(1, index=list(range(4)), dtype=&apos;float32&apos;),</span><br><span class="line">                    &apos;D&apos; : pd.Series([1, 2, 1, 2], dtype=&apos;int32&apos;),</span><br><span class="line">                    &apos;E&apos; : pd.Categorical([&quot;test&quot;, &quot;train&quot;, &quot;test&quot;, &quot;train&quot;]),</span><br><span class="line">                    &apos;F&apos; : &apos;foo&apos; &#125;)</span><br><span class="line"></span><br><span class="line">df</span><br><span class="line"></span><br><span class="line"># 显示数学公式</span><br><span class="line">from IPython.external.mathjax import install_mathjax</span><br><span class="line">install_mathjax()</span><br><span class="line"></span><br><span class="line">from IPython.display import Latex</span><br><span class="line">Latex(r&quot;$\sqrt&#123;x^2+y^2&#125;$&quot;)</span><br><span class="line"></span><br><span class="line"># 显示图片</span><br><span class="line">from IPython.display import Image</span><br><span class="line">Image(&quot;http://localhost:8888/files/Pictures/17375069.jpg&quot;)</span><br><span class="line"></span><br><span class="line"># javascript 脚本</span><br><span class="line">from IPython.display import HTML</span><br><span class="line">from IPython.display import Javascript</span><br><span class="line">from IPython.display import IFrame</span><br><span class="line">Javascript(&quot;alert(&apos;ok&apos;)&quot;)</span><br><span class="line">HTML(&quot;osm.html&quot;)</span><br><span class="line">IFrame(&quot;osm.html&quot;,width=700,height=350)</span><br><span class="line"></span><br><span class="line"># 下载代码</span><br><span class="line">%load http://matplotlib.org/mpl_examples/pylab_examples/histogram_demo.py</span><br><span class="line"></span><br><span class="line"># 性能分析</span><br><span class="line">%%prun</span><br><span class="line">for i in xrange(100):</span><br><span class="line">    linalg.det(random.rand(10,10))</span><br></pre></td></tr></table></figure>
<h1 id="Pandas-Numpy"><a href="#Pandas-Numpy" class="headerlink" title="Pandas/Numpy"></a>Pandas/Numpy</h1><p><a href="http://pandas.pydata.org/pandas-docs/stable/10min.html" target="_blank" rel="noopener">http://pandas.pydata.org/pandas-docs/stable/10min.html</a><br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 读取 csv 文件</span><br><span class="line">df = pd.read_csv(loggerfile, header=None, sep=&apos;,&apos;)</span><br><span class="line"># 读取 mysql 数据</span><br><span class="line">import pandas as pd</span><br><span class="line">import pymysql</span><br><span class="line">mysql= pymysql.connect(</span><br><span class="line">    host=&apos;xxxx, </span><br><span class="line">    port=3306,user=&apos;xxx&apos;, </span><br><span class="line">    passwd=&apos;xxx&apos;, </span><br><span class="line">    db=&apos;xxx&apos;,</span><br><span class="line">    charset=&quot;utf8&quot;)</span><br><span class="line"></span><br><span class="line">df = pd.read_sql(&apos;select * from xxx limit 0,10000&apos;, con=mysql)    </span><br><span class="line">mysql.close()</span><br></pre></td></tr></table></figure></p>
<h1 id="Seaborn-Matplotlib"><a href="#Seaborn-Matplotlib" class="headerlink" title="Seaborn/Matplotlib"></a>Seaborn/Matplotlib</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">%matplotlib inline </span><br><span class="line"></span><br><span class="line">import seaborn as sns</span><br><span class="line">#  Load one of the data sets that come with seaborn</span><br><span class="line">tips = sns.load_dataset(&quot;tips&quot;)</span><br><span class="line">sns.jointplot(&quot;total_bill&quot;, &quot;tip&quot;, tips, kind=&apos;reg&apos;);</span><br></pre></td></tr></table></figure>
<p><a href="http://www.justinablog.com/archives/1357" target="_blank" rel="noopener">http://www.justinablog.com/archives/1357</a></p>
<p><a href="http://web.stanford.edu/~mwaskom/software/seaborn/tutorial/regression.html" target="_blank" rel="noopener">http://web.stanford.edu/~mwaskom/software/seaborn/tutorial/regression.html</a></p>
<p><a href="http://nbviewer.ipython.org/gist/jackparmer/5485807511a58be48bf2" target="_blank" rel="noopener">http://nbviewer.ipython.org/gist/jackparmer/5485807511a58be48bf2</a></p>
<p><a href="http://www.labri.fr/perso/nrougier/teaching/matplotlib/#" target="_blank" rel="noopener">http://www.labri.fr/perso/nrougier/teaching/matplotlib/#</a> line-properties</p>
<h1 id="TODO"><a href="#TODO" class="headerlink" title="TODO"></a>TODO</h1><p>graphlab<br><a href="https://dato.com/products/create/open_source.html" target="_blank" rel="noopener">https://dato.com/products/create/open_source.html</a><br><a href="https://dato.com/learn/userguide/install.html" target="_blank" rel="noopener">https://dato.com/learn/userguide/install.html</a><br><a href="https://dato.com/download/" target="_blank" rel="noopener">https://dato.com/download/</a></p>
]]></content>
      <categories>
        <category>build_env</category>
        <category>dev</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>jupyter</tag>
      </tags>
  </entry>
  <entry>
    <title>MCU Digital Circuits Guide</title>
    <url>/2020/02/26/MCU%20Digital%20Circuits%20Guide/</url>
    <content><![CDATA[<h2 id="数字电路知识"><a href="#数字电路知识" class="headerlink" title="数字电路知识"></a>数字电路知识</h2><p>电子元件</p>
<ul>
<li>传感器</li>
<li>电阻器</li>
<li>电容器</li>
<li>电感 小型变压器</li>
<li>二极管</li>
<li>三极管</li>
<li>集成电路</li>
<li>晶体管</li>
<li>贴片元件</li>
<li>开关</li>
<li>接插件</li>
<li>电机<ul>
<li>DC motor 直流电机</li>
<li>Servo motor 伺服电机</li>
<li>Stepper motor 步进电机</li>
</ul>
</li>
</ul>
<p>工具</p>
<ul>
<li>圆口电焊、刀口电焊</li>
<li>吸锡枪、热风枪</li>
<li>平口钳、拨线钳</li>
<li>PCB 钢网</li>
<li>面包版</li>
<li>热熔胶枪</li>
<li>万用表、示波器</li>
<li>数字电源</li>
</ul>
<p>软件</p>
<ul>
<li>Altium Designer</li>
</ul>
<p>其他相关</p>
<ul>
<li>FPGA</li>
<li>STM32</li>
</ul>
<p>其他芯片</p>
<ul>
<li>K210</li>
<li>OBD</li>
</ul>
<h1 id="知识"><a href="#知识" class="headerlink" title="知识"></a>知识</h1><h2 id="串口通信"><a href="#串口通信" class="headerlink" title="串口通信"></a>串口通信</h2><p>RISC-AVR-ATmega8</p>
<ul>
<li><p>UART 控制线 XCK 信号线 Tx Rx</p>
</li>
<li><p>I2C 控制线 SCL 信号线 SDA <code>#include &lt;Wire.h&gt;</code></p>
</li>
<li>SPI 控制线 SCK 信号线 MOSI MISO</li>
</ul>
<p>Pin</p>
<ul>
<li>模拟/analog</li>
<li>IO/I2C总线</li>
<li>SPI总线</li>
<li>PWM输出</li>
</ul>
]]></content>
      <categories>
        <category>soc</category>
      </categories>
      <tags>
        <tag>mcu</tag>
      </tags>
  </entry>
  <entry>
    <title>MCU ESP8066x and ESP32 Guide</title>
    <url>/2020/02/20/MCU%20ESP8066x%20and%20ESP32%20Guide/</url>
    <content><![CDATA[<h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>物联网开发芯片，整合wifi直接使用</p>
<ul>
<li>ESP01（ESP8266-01）</li>
<li>ESP8266  80Mhz 512kb 8M</li>
<li>ESP32 2core </li>
</ul>
<p>公司之间关系是这样的，espressif（乐鑫）研发的ESP芯片组，然后AIThinker（ESP12F）和Doiting（ESP12E）这两家公司各自出了自己的开发版，实际上使用操作都是一样的，不过各自有生态工具和教程可以使用 </p>
<p>ESP乐鑫</p>
<ul>
<li><a href="https://www.espressif.com/zh-hans/" target="_blank" rel="noopener">https://www.espressif.com/zh-hans/</a></li>
<li><a href="https://docs.espressif.com/projects/esp-idf/zh_CN/latest/get-started/establish-serial-connection.html" target="_blank" rel="noopener">https://docs.espressif.com/projects/esp-idf/zh_CN/latest/get-started/establish-serial-connection.html</a></li>
</ul>
<p>DOITING</p>
<ul>
<li><a href="https://github.com/SmartArduino/DoHome" target="_blank" rel="noopener">https://github.com/SmartArduino/DoHome</a></li>
<li><a href="http://nodemcu-dev.doit.am/1.html" target="_blank" rel="noopener">http://nodemcu-dev.doit.am/1.html</a></li>
<li><a href="http://support.doiting.com/index/getOneArticle?id=86" target="_blank" rel="noopener">http://support.doiting.com/index/getOneArticle?id=86</a></li>
</ul>
<p>AiThinker</p>
<ul>
<li><a href="https://docs.ai-thinker.com/esp8266" target="_blank" rel="noopener">https://docs.ai-thinker.com/esp8266</a></li>
<li><a href="https://docs.ai-thinker.com/esp_download" target="_blank" rel="noopener">https://docs.ai-thinker.com/esp_download</a></li>
</ul>
<h1 id="编程环境"><a href="#编程环境" class="headerlink" title="编程环境"></a>编程环境</h1><h2 id="编程语言"><a href="#编程语言" class="headerlink" title="编程语言"></a>编程语言</h2><ul>
<li>AT+指令</li>
<li>arduino</li>
<li>mircopython</li>
</ul>
<h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><ul>
<li>clion</li>
<li>visual code</li>
<li>arduino ide</li>
</ul>
<h2 id="Driver"><a href="#Driver" class="headerlink" title="Driver"></a>Driver</h2><p>CP210x（USB2TTL COM flash tool）<br><a href="https://www.silabs.com/products/development-tools/software/usb-to-uart-bridge-vcp-drivers" target="_blank" rel="noopener">https://www.silabs.com/products/development-tools/software/usb-to-uart-bridge-vcp-drivers</a></p>
<h2 id="开发环境搭建"><a href="#开发环境搭建" class="headerlink" title="开发环境搭建"></a>开发环境搭建</h2><ol>
<li><p>交叉编译包</p>
<ul>
<li>可以考虑现在编译 <ul>
<li><a href="https://nodemcu-build.com/index.php" target="_blank" rel="noopener">https://nodemcu-build.com/index.php</a></li>
<li><a href="https://github.com/marcelstoer/nodemcu-pyflasher" target="_blank" rel="noopener">https://github.com/marcelstoer/nodemcu-pyflasher</a></li>
</ul>
</li>
</ul>
</li>
<li><p>安装CP210x驱动（另一种G340自行查阅）</p>
</li>
<li><p>上电刷机</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pip install esptool</span><br><span class="line">pip install pyserial</span><br><span class="line"><span class="comment">#check com status</span></span><br><span class="line">ls /dev/tty.*</span><br><span class="line"><span class="comment">#烧入时，先摁住flash键，再摁一下reset键，即重启进入烧入状态</span></span><br><span class="line">esptool.py --port /dev/tty.wchusbserial1420 write_flash --flash_freq <span class="number">40</span>m --flash_mode dout --flash_size <span class="number">4</span>MB <span class="number">0x0</span> bin/eagle.flash.bin <span class="number">0x10000</span> bin/eagle.irom0text.bin <span class="number">0x3FB000</span> bin/blank.bin <span class="number">0x3FC000</span> bin/esp_init_data_default_v8.bin <span class="number">0x3FE000</span> bin/blank.bin</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>IDE</p>
<ul>
<li><p>Ardunio</p>
<ul>
<li><p><a href="https://www.arduino.cc/" target="_blank" rel="noopener">https://www.arduino.cc/</a></p>
</li>
<li><p>add third library in manager <code>http://arduino.esp8266.com/stable/package_esp8266com_index.json</code></p>
</li>
<li><p><a href="https://arduino-esp8266.readthedocs.io/en/latest/installing.html#using-git-version" target="_blank" rel="noopener">https://arduino-esp8266.readthedocs.io/en/latest/installing.html#using-git-version</a></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="comment">// put your setup code here, to run once:</span></span><br><span class="line">  Serial.begin(<span class="number">115200</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="comment">// put your main code here, to run repeatedly:</span></span><br><span class="line">  delay(<span class="number">1000</span>);</span><br><span class="line">  Serial.println(<span class="string">"hello world"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
<p><img src="https://raw.githubusercontent.com/espressif/arduino-esp32/master/docs/esp32_pinmap.png" alt></p>
<h3 id="RestAPI"><a href="#RestAPI" class="headerlink" title="RestAPI"></a>RestAPI</h3><p><a href="https://github.com/marcoschwartz/aREST" target="_blank" rel="noopener">https://github.com/marcoschwartz/aREST</a></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Import required libraries</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ESP8266WiFi.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;aREST.h&gt;</span></span></span><br><span class="line"><span class="comment">// Create aREST instance</span></span><br><span class="line">aREST rest = aREST();</span><br><span class="line"></span><br><span class="line"><span class="comment">// WiFi parameters</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span>* ssid = <span class="string">"Home_901"</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span>* password = <span class="string">"Aa123456"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// The port to listen for incoming TCP connections</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LISTEN_PORT           80</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Create an instance of the server</span></span><br><span class="line"><span class="function">WiFiServer <span class="title">server</span><span class="params">(LISTEN_PORT)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Variables to be exposed to the API</span></span><br><span class="line"><span class="keyword">int</span> temperature;</span><br><span class="line"><span class="keyword">int</span> humidity;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Declare functions to be exposed to the API</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">ledControl</span><span class="params">(String command)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="comment">// Start Serial</span></span><br><span class="line">  Serial.begin(<span class="number">115200</span>);</span><br><span class="line">  <span class="comment">// Init variables and expose them to REST API</span></span><br><span class="line">  temperature = <span class="number">24</span>;</span><br><span class="line">  humidity = <span class="number">40</span>;</span><br><span class="line">  rest.variable(<span class="string">"temperature"</span>, &amp;temperature);</span><br><span class="line">  rest.variable(<span class="string">"humidity"</span>, &amp;humidity);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Function to be exposed</span></span><br><span class="line">  rest.function(<span class="string">"led"</span>, ledControl);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Give name &amp; ID to the device (ID should be 6 characters long)</span></span><br><span class="line">  rest.set_id(<span class="string">"1"</span>);</span><br><span class="line">  rest.set_name(<span class="string">"esp8266"</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Connect to WiFi</span></span><br><span class="line">  WiFi.begin(ssid, password);</span><br><span class="line">  <span class="keyword">while</span> (WiFi.status() != WL_CONNECTED) &#123;</span><br><span class="line">    delay(<span class="number">500</span>);</span><br><span class="line">    Serial.print(<span class="string">"."</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  Serial.println(<span class="string">" IP: "</span> + ip);</span><br><span class="line">  Serial.println(<span class="string">" WiFi connected!"</span>);</span><br><span class="line">  server.begin();</span><br><span class="line">  Serial.println(<span class="string">" Server started!"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Handle REST calls</span></span><br><span class="line">  WiFiClient client = server.available();</span><br><span class="line">  <span class="keyword">if</span> (!client) &#123;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">while</span> (!client.available()) &#123;</span><br><span class="line">    delay(<span class="number">1</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  rest.handle(client);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Custom function accessible by the API</span></span><br><span class="line"><span class="comment">//localhost:8080/led?params=1</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">ledControl</span><span class="params">(String command)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">int</span> state = command.toInt();</span><br><span class="line"></span><br><span class="line">  Serial.print(<span class="string">"State value:"</span>);</span><br><span class="line">  Serial.println(state);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (state == <span class="number">1</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    digitalWrite(relayPin, HIGH);</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (state == <span class="number">0</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    digitalWrite(relayPin, LOW);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>### </p>
<h2 id="Library"><a href="#Library" class="headerlink" title="Library"></a>Library</h2><ul>
<li><a href="https://github.com/spacehuhn/esp8266_deauther" target="_blank" rel="noopener">https://github.com/spacehuhn/esp8266_deauther</a></li>
<li><a href="https://github.com/esp8266/Arduino" target="_blank" rel="noopener">https://github.com/esp8266/Arduino</a></li>
<li><a href="https://github.com/espressif/arduino-esp32" target="_blank" rel="noopener">https://github.com/espressif/arduino-esp32</a></li>
</ul>
<h2 id="Quote"><a href="#Quote" class="headerlink" title="Quote"></a>Quote</h2><p>ESP8266</p>
<ul>
<li><a href="https://www.esp8266.com/wiki/doku.php?id=start" target="_blank" rel="noopener">https://www.esp8266.com/wiki/doku.php?id=start</a></li>
<li><a href="https://github.com/pfalcon/esp-open-sdk" target="_blank" rel="noopener">https://github.com/pfalcon/esp-open-sdk</a></li>
</ul>
<p>third-plugin</p>
<ul>
<li><a href="https://blog.csdn.net/toopoo/article/details/85953723" target="_blank" rel="noopener">https://blog.csdn.net/toopoo/article/details/85953723</a></li>
</ul>
<p>NodeMCU</p>
<ul>
<li><a href="https://github.com/nodemcu/nodemcu-firmware" target="_blank" rel="noopener">https://github.com/nodemcu/nodemcu-firmware</a></li>
<li><a href="https://nodemcu.readthedocs.io/en/master/" target="_blank" rel="noopener">https://nodemcu.readthedocs.io/en/master/</a></li>
</ul>
<p>引脚</p>
<table>
<thead>
<tr>
<th></th>
<th>static const uint8_t D0  = 16;</th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td>static const uint8_t D1  = 5;</td>
</tr>
<tr>
<td></td>
<td>static const uint8_t D2  = 4;</td>
</tr>
<tr>
<td></td>
<td>static const uint8_t D3  = 0;</td>
</tr>
<tr>
<td></td>
<td>static const uint8_t D4  = 2;</td>
</tr>
<tr>
<td></td>
<td>static const uint8_t D5  = 14;</td>
</tr>
<tr>
<td></td>
<td>static const uint8_t D6  = 12;</td>
</tr>
<tr>
<td></td>
<td>static const uint8_t D7  = 13;</td>
</tr>
<tr>
<td></td>
<td>static const uint8_t D8  = 15;</td>
</tr>
<tr>
<td></td>
<td>static const uint8_t D9  = 3;</td>
</tr>
<tr>
<td></td>
<td>static const uint8_t D10 = 1;</td>
</tr>
</tbody>
</table>
]]></content>
      <categories>
        <category>soc</category>
      </categories>
      <tags>
        <tag>mcu</tag>
        <tag>Esp</tag>
      </tags>
  </entry>
  <entry>
    <title>ML  Jetson Nano</title>
    <url>/2020/02/25/ML%20%20Jetson%20Nano/</url>
    <content><![CDATA[<h1 id="Jetson-Nano"><a href="#Jetson-Nano" class="headerlink" title="Jetson Nano"></a>Jetson Nano</h1><p><img src="https://img-blog.csdnimg.cn/20190816154316511.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTExMTk4MTc=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>128cuda/4gLPDDR4/16GeMMC/5V2A or 5V4A</p>
<p>Power </p>
<ul>
<li>Jumper j48-&gt;5v4A</li>
<li>Default -&gt;5v2A</li>
</ul>
<ol>
<li><p>Flash Disk image</p>
</li>
<li><p>add Swap</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo fallocate -l 2G /swapfile</span><br><span class="line">sudo swapon --show</span><br><span class="line">free -h</span><br></pre></td></tr></table></figure>
</li>
<li><p>open ssh-server</p>
</li>
<li><p>add third library</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install git </span><br><span class="line">sudo apt-get install cmake</span><br><span class="line">sudo apt-get install libatlas-base-dev gfortran</span><br><span class="line">sudo apt-get install libhdf5-serial-dev hdf5-tools</span><br><span class="line">sudo apt-get install python3-dev</span><br></pre></td></tr></table></figure>
</li>
<li><p>python</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#install jtop</span></span><br><span class="line">sudo pip install --upgrade pip</span><br><span class="line">sudo -H pip install jetson-stats</span><br><span class="line">sudo jtop</span><br><span class="line"></span><br><span class="line"><span class="comment">#switch watt mode</span></span><br><span class="line">sudo nvpmodel -q</span><br><span class="line">sudo nvpmodel -m1</span><br><span class="line"></span><br><span class="line"><span class="comment">#base library</span></span><br><span class="line">sudo apt-get install git cmake</span><br><span class="line">sudo apt-get install libfreetype6-dev</span><br><span class="line"></span><br><span class="line">pip install -g virtualenv virtualenvwrapper</span><br><span class="line">pip install pillow</span><br><span class="line">pip install matplotlib</span><br><span class="line">pip install jupyter <span class="comment">#jupyter notebook</span></span><br><span class="line">pip insatll pycuda</span><br><span class="line"></span><br><span class="line"><span class="comment">#2.1 install tensorflow</span></span><br><span class="line"><span class="comment">#https://devtalk.nvidia.com/default/topic/1048776/jetson-nano/official-tensorflow-for-jetson-nano-/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#2.2 install keras</span></span><br><span class="line">pip install numpy==1.16</span><br><span class="line">pip install scipy</span><br><span class="line">pip install keras</span><br><span class="line"></span><br><span class="line"><span class="comment">#2.3 scikit-learn</span></span><br><span class="line">pip install Cython</span><br><span class="line">pip install sklearn </span><br><span class="line"></span><br><span class="line"><span class="comment">#2.4 install pytorch </span></span><br><span class="line"><span class="comment">#https://devtalk.nvidia.com/default/topic/1049071/jetson-nano/pytorch-for-jetson-nano/</span></span><br><span class="line"><span class="comment">#2.4.1 install  torchvision</span></span><br><span class="line">sudo apt-get install libjpeg-dev zlib1g-dev</span><br><span class="line">git <span class="built_in">clone</span> -b v0.3.0 https://github.com/pytorch/vision torchvision</span><br><span class="line"><span class="built_in">cd</span> torchvision</span><br><span class="line">python setup.py install </span><br><span class="line"><span class="built_in">cd</span> ../  <span class="comment"># attempting to load torchvision from build dir will result in import error</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>jetson inference engine</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#https://github.com/dusty-nv/jetson-inference/blob/master/docs/building-repo-2.md</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/dusty-nv/jetson-inference</span><br><span class="line"><span class="built_in">cd</span> jetson-inference</span><br><span class="line">git submodule update --init</span><br><span class="line">mkdir build</span><br><span class="line"><span class="built_in">cd</span> build</span><br><span class="line">cmake ..</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="Forum"><a href="#Forum" class="headerlink" title="Forum"></a>Forum</h2><ul>
<li><a href="https://devtalk.nvidia.com/default/board/371/" target="_blank" rel="noopener">https://devtalk.nvidia.com/default/board/371/</a></li>
</ul>
<h2 id="Quote"><a href="#Quote" class="headerlink" title="Quote"></a>Quote</h2><ul>
<li><a href="https://developer.download.nvidia.com/assets/embedded/secure/jetson/Nano/docs/NVIDIA_Jetson_Nano_Developer_Kit_User_Guide.pdf?h616Yaddd0Krw-471NIIx0ySWfXF4h-hIcdxiP6FpzHRcdzyI_pU3HNHC7zYKER_MoTLKVS3sqHcTbR56JrojkrHLh3YWwMKApg5hMqZBDHyhChi0n-DEdAAW99Dhtd2bzUtC4KSTdEcZRwNf54hXV5QmfYswUIh-MdZqWX-fMwWrsNcQ965h-lk7Z1CuhfH0B8-XlP-" target="_blank" rel="noopener">Doc</a></li>
<li><p><a href="https://developer.nvidia.com/embedded-computing" target="_blank" rel="noopener">https://developer.nvidia.com/embedded-computing</a></p>
</li>
<li><p><a href="https://developer.nvidia.com/embedded/learn/get-started-jetson-nano-devkit#intro" target="_blank" rel="noopener">https://developer.nvidia.com/embedded/learn/get-started-jetson-nano-devkit#intro</a></p>
</li>
</ul>
<p><a href="https://medium.com/@yanweiliu/nvidia-jetson-nano學習筆記-一-初次使用-4dce57a0b2b1" target="_blank" rel="noopener">https://medium.com/@yanweiliu/nvidia-jetson-nano%E5%AD%B8%E7%BF%92%E7%AD%86%E8%A8%98-%E4%B8%80-%E5%88%9D%E6%AC%A1%E4%BD%BF%E7%94%A8-4dce57a0b2b1</a></p>
]]></content>
      <categories>
        <category>soc</category>
      </categories>
      <tags>
        <tag>mcu</tag>
        <tag>ml</tag>
        <tag>Jetson nano</tag>
      </tags>
  </entry>
  <entry>
    <title>MongoDB</title>
    <url>/2020/04/10/MongoDB/</url>
    <content><![CDATA[<ul>
<li>Grammar </li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.update_one()</span><br><span class="line"># $set/$unset</span><br><span class="line">&#123; _id: 100 &#125;,</span><br><span class="line">&#123; $set: &#123; &lt;field1&gt;: &lt;value1&gt;, ... &#125; &#125;</span><br><span class="line"></span><br><span class="line">.find()</span><br><span class="line"># $or </span><br><span class="line">&#123; $or: [ &#123; quantity: &#123; $lt: 20 &#125; &#125;, &#123; price: 10 &#125; ] &#125; </span><br><span class="line"># $in</span><br><span class="line">&#123; quantity: &#123; $in: [20, 50] &#125; &#125;</span><br><span class="line"># $and</span><br><span class="line">&#123;</span><br><span class="line">  &quot;$and&quot;: [</span><br><span class="line">		&#123;&quot;$eq&quot;: [&quot;$table_name&quot;, &quot;$$table_name&quot;]&#125;,</span><br><span class="line">		&#123;&quot;$eq&quot;: [&quot;$email&quot;, request[&quot;email&quot;]]&#125;,</span><br><span class="line">	]</span><br><span class="line">&#125;</span><br><span class="line"># $not</span><br><span class="line"></span><br><span class="line"># $nor</span><br><span class="line">&#123; $nor: [ &#123; price: 1.99 &#125;, &#123; qty: &#123; $lt: 20 &#125; &#125;, &#123; sale: true &#125; ] &#125;</span><br><span class="line"></span><br><span class="line">.collection().filter().aggregate()</span><br><span class="line"># $lookup 连表查询left outer join </span><br><span class="line">&#123;</span><br><span class="line">  $lookup: &#123;</span><br><span class="line">		&quot;from&quot;: &quot;b&quot;,</span><br><span class="line">		&quot;as&quot;: &quot;a&quot;,</span><br><span class="line">		&quot;let&quot;: &#123;&quot;b&quot;: &quot;$_id&quot;&#125;,</span><br><span class="line">		&quot;pipeline&quot;: [</span><br><span class="line">			&#123;&quot;$match&quot;: &#123;&quot;$expr&quot;: &#123;&quot;$eq&quot;: [&quot;$_id&quot;, &quot;$$_id&quot;]&#125;&#125;&#125;,</span><br><span class="line">			&#123;&quot;$project&quot;: &#123;&quot;_id&quot;: False, &quot;external_id&quot;: True&#125;&#125;,</span><br><span class="line">		],</span><br><span class="line">&#125;</span><br><span class="line">&#123;</span><br><span class="line">   $lookup:</span><br><span class="line">     &#123;</span><br><span class="line">       from: &lt;collection to join&gt;,</span><br><span class="line">       localField: &lt;field from the input documents&gt;,</span><br><span class="line">       foreignField: &lt;field from the documents of the &quot;from&quot; collection&gt;,</span><br><span class="line">       as: &lt;output array field&gt;</span><br><span class="line">     &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">other</span><br><span class="line">$project</span><br><span class="line">createIndex( &#123; price: 1 &#125; )</span><br></pre></td></tr></table></figure>
<p><a href="https://cloud.tencent.com/developer/article/1406529" target="_blank" rel="noopener">https://cloud.tencent.com/developer/article/1406529</a></p>
]]></content>
      <categories>
        <category>dev</category>
        <category>db</category>
      </categories>
      <tags>
        <tag>mongodb</tag>
      </tags>
  </entry>
  <entry>
    <title>ORM Framework Mybatis</title>
    <url>/2021/01/04/ORM%20Framework%20Python%20sqlalchemy/</url>
    <content><![CDATA[<ul>
<li><a href="https://aiopg.readthedocs.io/en/stable/examples.html" target="_blank" rel="noopener">https://aiopg.readthedocs.io/en/stable/examples.html</a></li>
<li><a href="https://docs.sqlalchemy.org/en/14/orm/examples.html" target="_blank" rel="noopener">https://docs.sqlalchemy.org/en/14/orm/examples.html</a></li>
<li><a href="https://docs.sqlalchemy.org/en/14/core/selectable.html" target="_blank" rel="noopener">https://docs.sqlalchemy.org/en/14/core/selectable.html</a></li>
<li><a href="https://docs.sqlalchemy.org/en/14/core/dml.html" target="_blank" rel="noopener">https://docs.sqlalchemy.org/en/14/core/dml.html</a></li>
<li><a href="https://www.jb51.net/article/49789.htm" target="_blank" rel="noopener">https://www.jb51.net/article/49789.htm</a></li>
</ul>
<p>aiohttp 官方的orm框架是aiomysql/aiopg<br>sqlalchemy 无法原生支持 asyncio 必须等到1.4 版本</p>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>orm</tag>
      </tags>
  </entry>
  <entry>
    <title>Proxy  Frp</title>
    <url>/2020/12/20/Proxy%20%20Frp/</url>
    <content><![CDATA[<h1 id="Concept"><a href="#Concept" class="headerlink" title="Concept"></a>Concept</h1><p>​        透明代理，基于ssh建立隧道连接内网</p>
<h1 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h1><h2 id="Added-Systemd"><a href="#Added-Systemd" class="headerlink" title="Added  Systemd"></a>Added  Systemd</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cp ./frps /usr/bin/</span><br><span class="line">cp ./frps.ini /etc/frp/</span><br><span class="line">cp ./systemd/frps.service /etc/systemd/system/</span><br><span class="line">systemctl deamon-reload</span><br><span class="line">systemctl enable frps.service</span><br><span class="line">systemctl start frps.service</span><br><span class="line">systemctl status frps.service</span><br></pre></td></tr></table></figure>
<h1 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h1><h2 id="frps-ini"><a href="#frps-ini" class="headerlink" title="frps.ini"></a>frps.ini</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[common]</span><br><span class="line">bind_port = 7000</span><br><span class="line">token = 12345676</span><br><span class="line"></span><br><span class="line">dashboard_port = 10080</span><br><span class="line">dashboard_user = xxx</span><br><span class="line">dashboard_pwd = xxx</span><br><span class="line">allow_ports = 7000,10000-20000</span><br></pre></td></tr></table></figure>
<h2 id="frpc-ini"><a href="#frpc-ini" class="headerlink" title="frpc.ini"></a>frpc.ini</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[common]</span><br><span class="line">server_addr = 81.68.107.111</span><br><span class="line">server_port = 7000</span><br><span class="line">token = 12345676</span><br><span class="line">[ssh]</span><br><span class="line">type = tcp</span><br><span class="line">local_ip = 127.0.0.1</span><br><span class="line">local_port = 22</span><br><span class="line">remote_port = 12207</span><br></pre></td></tr></table></figure>
<h2 id="Queto"><a href="#Queto" class="headerlink" title="Queto"></a>Queto</h2><p><a href="https://github.com/fatedier/frp" target="_blank" rel="noopener">https://github.com/fatedier/frp</a></p>
]]></content>
      <categories>
        <category>ops</category>
      </categories>
      <tags>
        <tag>frp</tag>
        <tag>proxy</tag>
      </tags>
  </entry>
  <entry>
    <title>Saas Apache Apollo</title>
    <url>/2019/01/20/Saas%20Apache%20Apollo/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>saas</tag>
      </tags>
  </entry>
  <entry>
    <title>Saas Dubbo 2.6.0</title>
    <url>/2019/01/20/Saas%20Dubbo%202.6.4/</url>
    <content><![CDATA[<p>dubbo 目前已经迁移至 apache 的仓库组里面</p>
<h1 id="参考版本"><a href="#参考版本" class="headerlink" title="参考版本"></a>参考版本</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">     &lt;groupId&gt;com.alibaba.spring.boot&lt;/groupId&gt;</span><br><span class="line">     &lt;artifactId&gt;dubbo-spring-boot-starter&lt;/artifactId&gt;</span><br><span class="line">     &lt;version&gt;2.0.0&lt;/version&gt;</span><br><span class="line"> &lt;/dependency&gt;</span><br><span class="line"> &lt;dependency&gt;</span><br><span class="line">     &lt;groupId&gt;com.101tec&lt;/groupId&gt;</span><br><span class="line">     &lt;artifactId&gt;zkclient&lt;/artifactId&gt;</span><br><span class="line">     &lt;version&gt;0.10&lt;/version&gt;</span><br><span class="line"> &lt;/dependency&gt;</span><br></pre></td></tr></table></figure>
<h1 id="主要使用"><a href="#主要使用" class="headerlink" title="主要使用"></a>主要使用</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#dubbo</span><br><span class="line">spring.dubbo.server=true</span><br><span class="line">spring.dubbo.registry=zookeeper://47.98.52.80:8181?backup=10.20.153.11:2181</span><br><span class="line">#关闭启动检查，绕过相互依赖请求问题</span><br><span class="line">spring.dubbo.consumer.check:false</span><br><span class="line">spring.dubbo.protocol.port:$&#123;random.int(8000,9000)&#125;</span><br></pre></td></tr></table></figure>
<p>开启注解</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@EnableDubboConfiguration</span><br></pre></td></tr></table></figure>
<p>对 providers 使用注解进行声明</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@Component</span><br><span class="line">@Service(interfaceClass = OrderService.class)</span><br><span class="line">public class OrderServiceImp implements OrderService &#123;&#125;</span><br></pre></td></tr></table></figure>
<p>对 consumer使用注解进行声明</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@Reference</span><br><span class="line">private OrderService           orderService;</span><br></pre></td></tr></table></figure>
<ol>
<li><p>目前 zkclient的0.10 版本只对 zookeeper 3.4.x 起支持，springcloud zookeeper discovery 使用 curator 只支持最新的3.5.x，依赖 zkclient ，自动对 springcloud zookeeper discovery 做降级操作。</p>
</li>
<li><p>关于 dubbo-admin 2.6.0 最后一个老版本的控制台，新版本的控制台功能缺陷很大，用这个版本的成熟度高</p>
</li>
</ol>
<p><a href="https://github.com/apache/incubator-dubbo/tree/dubbo-2.6.0" target="_blank" rel="noopener">https://github.com/apache/incubator-dubbo/tree/dubbo-2.6.0</a></p>
<h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><p>apache dubbo</p>
<p><a href="https://github.com/apache/incubator-dubbo" target="_blank" rel="noopener">https://github.com/apache/incubator-dubbo</a></p>
<p><a href="https://github.com/apache/incubator-dubbo-spring-boot-project" target="_blank" rel="noopener">https://github.com/apache/incubator-dubbo-spring-boot-project</a></p>
<p><a href="https://github.com/apache/incubator-dubbo-ops" target="_blank" rel="noopener">https://github.com/apache/incubator-dubbo-ops</a></p>
<p>alibaba dubbo</p>
<p><a href="https://github.com/alibaba/dubbo-spring-boot-starter" target="_blank" rel="noopener">https://github.com/alibaba/dubbo-spring-boot-starter</a></p>
<p><a href="https://github.com/alibaba/dubbo-spring-boot-starter/blob/master/README_zh.md" target="_blank" rel="noopener">https://github.com/alibaba/dubbo-spring-boot-starter/blob/master/README_zh.md</a></p>
]]></content>
      <categories>
        <category>dev</category>
      </categories>
      <tags>
        <tag>saas</tag>
        <tag>dubbo</tag>
      </tags>
  </entry>
  <entry>
    <title>Server Gitlab</title>
    <url>/2020/04/03/Server%20Gitlab/</url>
    <content><![CDATA[<h2 id="official"><a href="#official" class="headerlink" title="official"></a>official</h2><p><a href="https://about.gitlab.com/gitlab-com/" target="_blank" rel="noopener">https://about.gitlab.com/gitlab-com/</a></p>
<p><a href="https://about.gitlab.com/downloads" target="_blank" rel="noopener">https://about.gitlab.com/downloads</a><br><a href="https://mirror.tuna.tsinghua.edu.cn/help/gitlab-ce/" target="_blank" rel="noopener">https://mirror.tuna.tsinghua.edu.cn/help/gitlab-ce/</a></p>
<h2 id="install"><a href="#install" class="headerlink" title="install"></a>install</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vim /etc/gitlab/gitlab.rb</span><br><span class="line">nginx[&apos;enable&apos;] = false</span><br><span class="line">gitlab_workhorse[&apos;listen_network&apos;] = &quot;tcp&quot;</span><br><span class="line">gitlab_workhorse[&apos;listen_addr&apos;] = &quot;127.0.0.1:8021&quot;  </span><br><span class="line"></span><br><span class="line">gitlab-ctl reconfigure</span><br><span class="line">gitlab-ctl restart</span><br><span class="line">gitlab-ctl status</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen       80; </span><br><span class="line">    server_name  git.xxx.com;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        root  html;</span><br><span class="line">        index index.html index.htm;</span><br><span class="line">        proxy_pass http://127.0.0.1:8021; </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="email-settings"><a href="#email-settings" class="headerlink" title="email settings"></a>email settings</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"> gitlab_rails[&apos;gitlab_email_enabled&apos;] = true</span><br><span class="line"> gitlab_rails[&apos;gitlab_email_from&apos;] = &apos;zuo.zhong@163.com&apos;</span><br><span class="line"> gitlab_rails[&apos;gitlab_email_display_name&apos;] = &apos;Gitlab Server &apos;</span><br><span class="line"># aliyun</span><br><span class="line"> gitlab_rails[&apos;smtp_enable&apos;] = true</span><br><span class="line"> gitlab_rails[&apos;smtp_address&apos;] = &quot;smtp.mxhichina.com&quot;</span><br><span class="line"> gitlab_rails[&apos;smtp_port&apos;] = 25</span><br><span class="line"> gitlab_rails[&apos;smtp_user_name&apos;] = &quot;xxxxx@58gxb.com&quot;</span><br><span class="line"> gitlab_rails[&apos;smtp_password&apos;] = &quot;passwd&quot;</span><br><span class="line"> gitlab_rails[&apos;smtp_domain&apos;] = &quot;smtp.mxhichina.com&quot;</span><br><span class="line"> gitlab_rails[&apos;smtp_authentication&apos;] = &quot;plain&quot;</span><br><span class="line"> gitlab_rails[&apos;smtp_enable_starttls_auto&apos;] = false</span><br><span class="line">#163</span><br><span class="line">gitlab_rails[&apos;smtp_enable&apos;] = true</span><br><span class="line">gitlab_rails[&apos;smtp_address&apos;] = &quot;smtp.163.com&quot;</span><br><span class="line">gitlab_rails[&apos;smtp_port&apos;] = 465</span><br><span class="line">gitlab_rails[&apos;smtp_user_name&apos;] = &quot;zuo.zhong@163.com&quot;</span><br><span class="line">gitlab_rails[&apos;smtp_password&apos;] = &quot;XXXXX&quot;</span><br><span class="line">gitlab_rails[&apos;smtp_domain&apos;] = &quot;163.com&quot;</span><br><span class="line">gitlab_rails[&apos;smtp_authentication&apos;] = &quot;login&quot;</span><br><span class="line">gitlab_rails[&apos;smtp_enable_starttls_auto&apos;] = true</span><br><span class="line">gitlab_rails[&apos;smtp_tls&apos;] = true</span><br><span class="line"></span><br><span class="line">#test</span><br><span class="line">gitlab-rails console -e production</span><br><span class="line">Notify.test_email(&apos;zuo.zhong@163.com&apos;, &apos;Message Subject&apos;, &apos;Message Body&apos;).deliver_now</span><br></pre></td></tr></table></figure>
<h2 id="Gitlab-CI"><a href="#Gitlab-CI" class="headerlink" title="Gitlab-CI"></a>Gitlab-CI</h2><ul>
<li><p>安装参考：<a href="https://docs.gitlab.com/runner/install/" target="_blank" rel="noopener">https://docs.gitlab.com/runner/install/</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -L https://packages.gitlab.com/install/repositories/runner/gitlab-ci-multi-runner/script.rpm.sh | sudo bash</span><br><span class="line">sudo yum install gitlab-ci-multi-runner</span><br><span class="line">sudo gitlab-ci-multi-runner register</span><br><span class="line">sudo gitlab-runner start|stop</span><br><span class="line"></span><br><span class="line">https://gitlab.com/gitlab-org/gitlab-runner/-/blob/master/docs/configuration/advanced-configuration.md</span><br><span class="line"></span><br><span class="line">https://docs.gitlab.com/runner/configuration/advanced-configuration.html<span class="comment">#how-clone_url-works</span></span><br><span class="line">[[runners]]</span><br><span class="line">  name = <span class="string">"ruby-2.6-docker"</span></span><br><span class="line">  url = <span class="string">"https://CI/"</span></span><br><span class="line">  token = <span class="string">"TOKEN"</span></span><br><span class="line">  <span class="built_in">limit</span> = 0</span><br><span class="line">  executor = <span class="string">"docker"</span></span><br><span class="line">  builds_dir = <span class="string">""</span></span><br><span class="line">  shell = <span class="string">""</span></span><br><span class="line">  environment = [<span class="string">"ENV=value"</span>, <span class="string">"LC_ALL=en_US.UTF-8"</span>]</span><br><span class="line">  clone_url = <span class="string">"http://gitlab.example.local"</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>.gitlab-ci.yml</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">variables:</span><br><span class="line">  MVN: &quot;/home/gitlab-runner/maven/maven/bin/&quot;</span><br><span class="line"></span><br><span class="line">stages:</span><br><span class="line">  - build</span><br><span class="line">  - test</span><br><span class="line">  - deploy</span><br><span class="line"></span><br><span class="line">maven_build:</span><br><span class="line">  stage: build</span><br><span class="line">  only:</span><br><span class="line">    - master</span><br><span class="line">  script:</span><br><span class="line">    - echo &quot;Building project with maven&quot;</span><br><span class="line">    - whoami</span><br><span class="line">    - $MVN/mvn clean install -Dmaven.test.skip=true</span><br><span class="line"></span><br><span class="line">maven_test:</span><br><span class="line">  stage: test</span><br><span class="line">  only:</span><br><span class="line">    - master</span><br><span class="line">  script:</span><br><span class="line">    - echo &quot;Testing project with maven&quot;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="Backup"><a href="#Backup" class="headerlink" title="Backup"></a>Backup</h2><p><a href="https://www.cnblogs.com/Justin0717/p/12662549.html" target="_blank" rel="noopener">https://www.cnblogs.com/Justin0717/p/12662549.html</a></p>
]]></content>
      <categories>
        <category>ops</category>
      </categories>
      <tags>
        <tag>gitlab</tag>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>Git Guide</title>
    <url>/2020/12/20/Version%20Control%20System_Git/</url>
    <content><![CDATA[<p><img src="http://img.sandseasoft.com/image/7/6f/60376e015ea1836d1fc152594e99a.png" alt></p>
<h1 id="Software"><a href="#Software" class="headerlink" title="Software"></a>Software</h1><ul>
<li>SourceTree by Bitbucket</li>
<li>Gtihub Client</li>
</ul>
<h1 id="Basic-Command"><a href="#Basic-Command" class="headerlink" title="Basic Command"></a>Basic Command</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git clone xxx.git</span><br><span class="line">git pull origin master</span><br><span class="line">git push [-f] origin master</span><br><span class="line">git commit -m &quot;xxx&quot;</span><br><span class="line">git branch [-D]</span><br><span class="line">git rebase [--abort|--continue|--skip]</span><br><span class="line">git fetch xxx origin master</span><br><span class="line">git checkout [-b]</span><br><span class="line">git reset --hard HEAD^</span><br></pre></td></tr></table></figure>
<h1 id="Principle"><a href="#Principle" class="headerlink" title="Principle"></a>Principle</h1><p>一共有两个远程仓库origin/master分别在远程和本地, 也就是说所有的branch/trunk都会有两份备份,在提交orgin的时候要保证本地版本是最新的.</p>
<p>根据Gitlab的主流程:<br><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git checkout -b new_pr_branch</span><br><span class="line">git add .</span><br><span class="line">git commit -m ""</span><br><span class="line">git push origin new_pr_branch</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> pull <span class="keyword">for</span> request </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> approve by auto merge</span></span><br></pre></td></tr></table></figure></p>
<p>Gist<br><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git checkout -b snapshot --track origin/snapshot</span><br><span class="line">git branch -vv   # 映射分支版本</span><br><span class="line">git branch -v    # 所有分支版本</span><br><span class="line">git fetch origin # 更新远程分支</span><br><span class="line">git status       # check local files status</span><br><span class="line">git add .        # add all files</span><br><span class="line">git commit -m "" # commit</span><br><span class="line"><span class="meta">#</span><span class="bash">使用rebase方式pull优化分支历史, 拒绝auto merge </span></span><br><span class="line">git config branch.master.rebase true</span><br><span class="line">git pull --rebase origin snapshot </span><br><span class="line">git push origin snapshot</span><br><span class="line"></span><br><span class="line">git config core.ignorecase false # 关闭忽略大小写变更</span><br><span class="line">git rm --cached logs/xx.log</span><br><span class="line">git reset --hard HEAD^ # 重置最近一次 git pull</span><br><span class="line">git clean -f     # clean untracked file</span><br><span class="line">git reflog master# check recet 5 operating record</span><br><span class="line">ls | xargs -P10 -I&#123;&#125; git -C &#123;&#125; pull</span><br></pre></td></tr></table></figure></p>
<h1 id="Gitflow"><a href="#Gitflow" class="headerlink" title="Gitflow"></a>Gitflow</h1><p>就像大树的根一样, 所有的分支最后都汇流到主干上.</p>
<table><br> <tr> <td> tag </td> <td>稳定的大版本</td><td>2.0.0</td> </tr><br>  <tr> <td> branch </td> <td>开发版的分支</td><td>1.9.1_20141224_1</td></tr><br>   <tr> <td> trunk </td> <td>主干</td><td> 1.9.0</td> </tr><br>    <tr> <td> hotfix </td> <td>补丁</td><td> 1.9.1</td> </tr><br></table>

<h1 id="gitignore"><a href="#gitignore" class="headerlink" title=".gitignore"></a>.gitignore</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">##   配置语法：</span><br><span class="line"># 　 以斜杠“/”开头表示目录；</span><br><span class="line"># 　 以星号“*”通配多个字符；</span><br><span class="line"># 　 以问号“?”通配单个字符</span><br><span class="line"># 　 以方括号“[]”包含单个字符的匹配列表；</span><br><span class="line">## 　以叹号“!”表示不忽略(跟踪)匹配到的文件或目录；</span><br><span class="line"></span><br><span class="line"># exp</span><br><span class="line"></span><br><span class="line">.idea/*</span><br><span class="line">*.iml</span><br></pre></td></tr></table></figure>
<p><a href="https://github.com/github/gitignore" target="_blank" rel="noopener">这里</a>有几乎所有的.ignore文件配置清单/idea plugin</p>
<h1 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h1><p>如果使用cygwin的话， 使用ssh证书之前需要执行操作<br><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">eval `ssh-agent`</span><br><span class="line">ssh-add ~/.ssh/rsa</span><br></pre></td></tr></table></figure></p>
<h2 id="子模块相关操作"><a href="#子模块相关操作" class="headerlink" title="子模块相关操作"></a>子模块相关操作</h2><p>.gitmodules<br><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[submodule "dmj-web/dmj-web-trades/src/main/webapp/fedev"]</span><br><span class="line">	path = dmj-web/dmj-web-trades/src/main/webapp/fedev</span><br><span class="line">	url = git@git.superboss.cc:dmj/dmj-frontend.git</span><br><span class="line">[submodule "dmj-web/dmj-web-trades/src/main/webapp/fedevkm"]</span><br><span class="line">	path = dmj-web/dmj-web-trades/src/main/webapp/fedevkm</span><br><span class="line">	url = git@git.superboss.cc:dmj/dmj-frontend-km.git</span><br></pre></td></tr></table></figure></p>
<p>初始化一个带有 submodule 的 repository<br><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git clone --recursive /path/to/repos/foo.git</span><br></pre></td></tr></table></figure></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git submodule </span><br><span class="line">git submodule init</span><br><span class="line">git submodule update  # 慎用, 会更新掉本地的修改信息, 如果要进行修改提交, 进去具体的 module 进行 commin push 操作</span><br><span class="line">git submodule foreach git pull origin master</span><br></pre></td></tr></table></figure>
<h1 id="Quote"><a href="#Quote" class="headerlink" title="Quote"></a>Quote</h1><ul>
<li>进阶Git Flow <a href="http://www.ituring.com.cn/article/56870" target="_blank" rel="noopener">http://www.ituring.com.cn/article/56870</a></li>
<li>书籍<ul>
<li><a href="https://github.com/progit/progit" target="_blank" rel="noopener">https://github.com/progit/progit</a></li>
<li><a href="https://github.com/tiimgreen/github-cheat-sheet/blob/master/README.zh-cn.md" target="_blank" rel="noopener">https://github.com/tiimgreen/github-cheat-sheet/blob/master/README.zh-cn.md</a></li>
</ul>
</li>
<li>github克隆平台<ul>
<li><a href="https://github.com/gitlabhq/gitlabhq" target="_blank" rel="noopener">https://github.com/gitlabhq/gitlabhq</a></li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>build_env</category>
      </categories>
      <tags>
        <tag>git</tag>
        <tag>source_tree</tag>
      </tags>
  </entry>
  <entry>
    <title>小程序 微信支付开发</title>
    <url>/2018/08/17/WXApplet%20%E6%94%AF%E4%BB%98%E5%BC%80%E5%8F%91/</url>
    <content><![CDATA[<h1 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h1><p>​    这里提供一套支付开发的申请到开发，以及上线的整体流程</p>
<h1 id="资源申请"><a href="#资源申请" class="headerlink" title="资源申请"></a>资源申请</h1><ul>
<li>服务号（300块认证）</li>
<li>小程序 </li>
<li>微信商户号</li>
</ul>
<h1 id="账号初始化"><a href="#账号初始化" class="headerlink" title="账号初始化"></a>账号初始化</h1><ul>
<li><p>小程序可信域添加</p>
</li>
<li><p>商户号 密钥生成 32位</p>
</li>
<li><p>商户号 安全证书浏览器绑定</p>
</li>
</ul>
<h1 id="微信支付商户号设置，以及与小程序绑定"><a href="#微信支付商户号设置，以及与小程序绑定" class="headerlink" title="微信支付商户号设置，以及与小程序绑定"></a>微信支付商户号设置，以及与小程序绑定</h1><ol>
<li><p>不需要提供微信支付商户账号，只需要提供</p>
<ol>
<li>商户号（账户中心-&gt;商户信息 当中查看）</li>
<li>密钥（这个密钥只有初次【API安全设置】的人知道，注意不要重置会影响生产业务）</li>
</ol>
</li>
<li><p>产品中心-&gt;API授权管理-&gt;新增授权申请单，提交小程序的APPID。(小程序必须保证账号主体和支付商户号账号主体一致) 申请绑定关系的时候注意小程序必须上线，而且有可以核实的业务</p>
</li>
</ol>
<p><img src="http://img.sandseasoft.com/20180817153449846527776.jpg" alt="20180817153449846527776.jpg"></p>
<p><img src="http://img.sandseasoft.com/20180817153449824271289.png" alt="20180817153449824271289.png"></p>
<p><img src="http://img.sandseasoft.com/20180817153449825024823.png" alt="20180817153449825024823.png"></p>
<h1 id="微信支付开发"><a href="#微信支付开发" class="headerlink" title="微信支付开发"></a>微信支付开发</h1><h2 id="核心流程"><a href="#核心流程" class="headerlink" title="核心流程"></a>核心流程</h2><p><img src="http://img.sandseasoft.com/20180817153449826219468.png" alt="20180817153449826219468.png"></p>
<p><a href="https://pay.weixin.qq.com/wiki/doc/api/wxa/wxa_api.php?chapter=7_4&amp;index=3" target="_blank" rel="noopener">https://pay.weixin.qq.com/wiki/doc/api/wxa/wxa_api.php?chapter=7_4&amp;index=3</a></p>
<p>开源库</p>
<p><a href="https://github.com/egzosn/pay-java-parent" target="_blank" rel="noopener">https://github.com/egzosn/pay-java-parent</a></p>
<p>主要方法</p>
<ol>
<li><p>用户登陆后前端获取基础用户信息，通过 openId 发起预支付订单</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@ApiOperation(value = &quot;支付&quot;, tags = &quot;场景一&quot;, hidden = true)</span><br><span class="line">@RequestMapping(value = &quot;app&quot;, method = RequestMethod.GET)</span><br><span class="line">public Map&lt;String, Object&gt; app(</span><br><span class="line">    @RequestParam String openid</span><br><span class="line">) &#123;</span><br><span class="line">   </span><br><span class="line">  BigDecimal price = null;</span><br><span class="line">   </span><br><span class="line">  Map&lt;String, Object&gt; data = new HashMap&lt;&gt;();</span><br><span class="line">  data.put(&quot;code&quot;, 0);</span><br><span class="line">  //App支付</span><br><span class="line">  PayOrder</span><br><span class="line">      order =</span><br><span class="line">      new PayOrder(&quot;订单title&quot;, &quot;摘要&quot;, null == price ? new BigDecimal(0.01) : price,</span><br><span class="line">                   UUID.randomUUID().toString().replace(&quot;-&quot;, &quot;&quot;), WxTransactionType.JSAPI);</span><br><span class="line">   </span><br><span class="line">  order.setOpenid(openid);</span><br><span class="line">  order.setTransactionType(WxTransactionType.JSAPI);</span><br><span class="line">  data.put(&quot;orderInfo&quot;, service.orderInfo(order));</span><br><span class="line">  return data;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>核心接口类</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">创建预支付订单，这个方法包含生成统一支付订单，和再次签名返回</span><br><span class="line">WxPayService.orderInfo</span><br><span class="line">    #支付统一下单</span><br><span class="line">    WxPayService.unifiedOrder</span><br><span class="line">    #返回 prepay_id以后再次签名</span><br><span class="line">    WxPayService.createSign</span><br></pre></td></tr></table></figure>
<p>响应头</p>
<p><img src="http://img.sandseasoft.com/20180817153449850065970.jpg" alt="20180817153449850065970.jpg"></p>
</li>
</ol>
<ol start="2">
<li>前端拿到5参数+sign 正式调用支付 <a href="https://developers.weixin.qq.com/miniprogram/dev/api/api-pay.html#wxrequestpaymentobject" target="_blank" rel="noopener">https://developers.weixin.qq.com/miniprogram/dev/api/api-pay.html#wxrequestpaymentobject</a></li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wx.requestPayment(&#123;</span><br><span class="line">   &apos;timeStamp&apos;: &apos;&apos;,</span><br><span class="line">   &apos;nonceStr&apos;: &apos;&apos;,</span><br><span class="line">   &apos;package&apos;: &apos;&apos;,</span><br><span class="line">   &apos;signType&apos;: &apos;MD5&apos;,</span><br><span class="line">   &apos;paySign&apos;: &apos;&apos;,</span><br><span class="line">   &apos;success&apos;:function(res)&#123;</span><br><span class="line">   &#125;,</span><br><span class="line">   &apos;fail&apos;:function(res)&#123;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<ol start="3">
<li>支付完成后，微信商户平台会回调用户 server对订单状态更新完毕</li>
</ol>
<p><img src="http://img.sandseasoft.com/20180817153449853786870.jpg" alt="20180817153449853786870.jpg"></p>
<ol start="4">
<li>前端支付成功跳转分享页</li>
</ol>
]]></content>
      <categories>
        <category>dev</category>
        <category>build_env</category>
      </categories>
      <tags>
        <tag>pay</tag>
        <tag>wechat</tag>
      </tags>
  </entry>
  <entry>
    <title>Wechat 第三方平台开发</title>
    <url>/2018/08/13/Wechat%20%E7%AC%AC%E4%B8%89%E6%96%B9%E5%B9%B3%E5%8F%B0%E5%BC%80%E5%8F%91/</url>
    <content><![CDATA[<h1 id="开发步骤"><a href="#开发步骤" class="headerlink" title="开发步骤"></a>开发步骤</h1><ol>
<li><p>后台设置回调的服务器地址</p>
</li>
<li><p>配置 java 的加密包</p>
<blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt; JCE无限制权限策略文件JDK7(guohai-support/file/JDK7)</span><br><span class="line">&gt;     -原因</span><br><span class="line">&gt;         +用于微信消息安全模式，防止AES加密异常：java.security.InvalidKeyException:illegal Key Size</span><br><span class="line">&gt;     -方法</span><br><span class="line">&gt;         +如果安装了JRE，将两个jar文件放到%JRE_HOME%\lib\security目录下覆盖原来的文件</span><br><span class="line">&gt;         +如果安装了JDK，将两个jar文件放到%JDK_HOME%\jre\lib\security目录下覆盖原来文件</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
<li><p>前端加载js_sdk</p>
</li>
</ol>
<h1 id="登陆绑定"><a href="#登陆绑定" class="headerlink" title="登陆绑定"></a>登陆绑定</h1><p>这里绑定请求以后，可以走两套 api 操作</p>
<ul>
<li>企业号相关文档 <a href="http://work.weixin.qq.com/api/doc" target="_blank" rel="noopener">http://work.weixin.qq.com/api/doc</a></li>
<li>服务号相关文档 <a href="https://mp.weixin.qq.com/wiki?t=resource/res_main&amp;id=mp1445241432" target="_blank" rel="noopener">https://mp.weixin.qq.com/wiki?t=resource/res_main&amp;id=mp1445241432</a></li>
<li>js_sdk 使用 <a href="https://mp.weixin.qq.com/wiki?t=resource/res_main&amp;id=mp1421141115" target="_blank" rel="noopener">https://mp.weixin.qq.com/wiki?t=resource/res_main&amp;id=mp1421141115</a></li>
</ul>
<h2 id="前端请求"><a href="#前端请求" class="headerlink" title="前端请求"></a>前端请求</h2><ul>
<li>请求303跳转到目标页以后，直接参数会话可以拿到用户信息</li>
</ul>
  <figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//参数走getAccessJsSdkInfo.json 请求获取</span></span><br><span class="line">wx.config(&#123;</span><br><span class="line">    debug: <span class="literal">true</span>, <span class="comment">// 开启调试模式,调用的所有api的返回值会在客户端alert出来，若要查看传入的参数，可以在pc端打开，参数信息会通过log打出，仅在pc端时才会打印。</span></span><br><span class="line">    appId: <span class="string">''</span>, <span class="comment">// 必填，公众号的唯一标识</span></span><br><span class="line">    timestamp: , <span class="comment">// 必填，生成签名的时间戳</span></span><br><span class="line">    nonceStr: <span class="string">''</span>, <span class="comment">// 必填，生成签名的随机串</span></span><br><span class="line">    signature: <span class="string">''</span>,<span class="comment">// 必填，签名</span></span><br><span class="line">    jsApiList: [] <span class="comment">// 必填，需要使用的JS接口列表</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">wx.ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">// config信息验证后会执行ready方法，所有接口调用都必须在config接口获得结果之后，config是一个客户端的异步操作，所以如果需要在页面加载时就调用相关接口，则须把相关接口放在ready函数中调用来确保正确执行。对于用户触发时才调用的接口，则可以直接调用，不需要放在ready函数中。</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<h2 id="后端代码"><a href="#后端代码" class="headerlink" title="后端代码"></a>后端代码</h2><p>分个步骤</p>
<ol>
<li>绑定服务器 bindServer.htm的 url</li>
<li>点击连接以后会跳转至第一步绑定的域下getOauthPageUrl.json路由</li>
<li>由第二步303跳转到getOauthUserInfo.json步骤直接获取用户信息</li>
</ol>
<p>用户绑定请求 js</p>
<ol>
<li>通过 url 参数请求getAccessJsSdkInfo.json获取签名</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"bindServer.htm"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">bindServer</span><span class="params">(HttpServletRequest request)</span> </span>&#123;</span><br><span class="line">  String result = <span class="string">""</span>;</span><br><span class="line">  <span class="comment">//绑定微信服务器</span></span><br><span class="line">  <span class="keyword">if</span> (<span class="string">"GET"</span>.equalsIgnoreCase(request.getMethod().toUpperCase())) &#123;</span><br><span class="line">    result = <span class="keyword">this</span>.bind(request);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">//处理消息</span></span><br><span class="line">    result = <span class="keyword">this</span>.processRequest(request);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 请求获取当前用户信息</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"getOauthPageUrl.json"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> Object <span class="title">getOauthPageUrl</span><span class="params">(HttpServletResponse response, String state)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    QYOauthAPI oauthAPI = <span class="keyword">new</span> QYOauthAPI(config);</span><br><span class="line">    String oauthPageUrl = oauthAPI.getOauthPageUrl(REDIRECT_URL, OauthScope.SNSAPI_BASE, state);</span><br><span class="line">    response.sendRedirect(oauthPageUrl);</span><br><span class="line">  &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">    <span class="keyword">return</span> buildFailedResult(e.getMessage());</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> buildFailedResult(<span class="string">"授权异常"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取code得到用户信息</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"getOauthUserInfo.json"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> JSONObject <span class="title">getOauthUserInfo</span><span class="params">(HttpServletResponse response, String code, String state, String ticket)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (StringUtils.isBlank(code) &amp;&amp; <span class="string">"prd"</span>.equals(PropertiesUtil.getProperties(<span class="string">"env"</span>))) &#123;</span><br><span class="line">    <span class="keyword">return</span> buildFailedResult(<span class="string">"code不能为空！"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    QYUserAPI userAPI = <span class="keyword">new</span> QYUserAPI(config);</span><br><span class="line">    GetOauthUserInfoResponse result = userAPI.getOauthUserInfo(code);</span><br><span class="line">    <span class="comment">//拿到微信账号以后，呼起</span></span><br><span class="line">    <span class="keyword">if</span> (StringUtils.isNotBlank(result.getUserid())) &#123;</span><br><span class="line">      String jm = JwtUtil.encrypt(hacking(result.getUserid()));</span><br><span class="line">      response</span><br><span class="line">          .sendRedirect(DOMAIN + <span class="string">"/MIMP/index.html#/loading?wechat="</span> + jm + <span class="string">"&amp;date="</span> + System.currentTimeMillis());</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      response.sendRedirect(DOMAIN + <span class="string">"/MIMP/index.html#/loading?wechat=error"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (<span class="string">"dev"</span>.equals(PropertiesUtil.getProperties(<span class="string">"env"</span>))) &#123;</span><br><span class="line">        response.sendRedirect(DOMAIN + <span class="string">"/MIMP/index.html#/loading?wechat="</span> + JwtUtil.encrypt(<span class="string">"rany"</span>));</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        response.sendRedirect(DOMAIN + <span class="string">"/MIMP/index.html#/loading?wechat=error"</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (IOException e1) &#123;</span><br><span class="line">      <span class="keyword">return</span> buildFailedResult(<span class="string">"系统异常"</span>);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e1) &#123;</span><br><span class="line">      <span class="keyword">return</span> buildFailedResult(e1.getMessage());</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> buildFailedResult(<span class="string">"系统异常"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>js_sdk 相关代码</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 获取前端js_ticket</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="meta">@ResponseBody</span></span><br><span class="line">  <span class="meta">@RequestMapping</span>(<span class="string">"getAccessJsSdkInfo.json"</span>)</span><br><span class="line">  <span class="function"><span class="keyword">public</span> JSONObject <span class="title">getAccessJsSdkInfo</span><span class="params">(@RequestParam String collUrl, String invalid)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      String JS_API_TICKET = config.getJsApiTicket();</span><br><span class="line">      logger.info(<span class="string">"JS_Ticket 获取 ["</span> + JS_API_TICKET + <span class="string">"]"</span>);</span><br><span class="line">      String nonce_str = <span class="string">"zuoyun"</span>;</span><br><span class="line">      Long timestamp = System.currentTimeMillis() / <span class="number">1000</span>;</span><br><span class="line">      String signature = JsApiUtil.sign(JS_API_TICKET, nonce_str, timestamp, collUrl);</span><br><span class="line"></span><br><span class="line">      <span class="comment">//返回值</span></span><br><span class="line">      Map&lt;String, String&gt; result = <span class="keyword">new</span> HashMap&lt;String, String&gt;();</span><br><span class="line">      result.put(<span class="string">"appId"</span>, CORPID);</span><br><span class="line">      result.put(<span class="string">"timestamp"</span>, timestamp.toString());</span><br><span class="line">      result.put(<span class="string">"nonceStr"</span>, nonce_str);</span><br><span class="line">      result.put(<span class="string">"signature"</span>, signature);</span><br><span class="line"></span><br><span class="line">      result.put(<span class="string">"debug_url"</span>, collUrl);</span><br><span class="line">      result.put(<span class="string">"debug_jsapi_ticket"</span>, JS_API_TICKET);</span><br><span class="line">      <span class="keyword">return</span> buildSuccessResult(result);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (ServiceException e) &#123;</span><br><span class="line">      logger.error(<span class="string">"调用微信接口失败,"</span> + e.getMessage(), e);</span><br><span class="line">      <span class="keyword">return</span> buildFailedResult(<span class="string">"调用微信接口失败！"</span>);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">      logger.error(<span class="string">"调用微信接口获取ticket失败,"</span> + e.getMessage(), e);</span><br><span class="line">      <span class="keyword">return</span> buildFailedResult(<span class="string">"调用微信接口获取ticket失败"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.github.sd4324530.fastweixin.util;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.github.sd4324530.fastweixin.message.aes.SHA1;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.TreeMap;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> daxiaoming</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JsApiUtil</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 计算 wx.config() 中需要使用的签名。每个页面都需要进行计算</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> jsApiTicket 微信 js-sdk提供的ticket</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> nonceStr    随机字符串</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> timestame   时间戳</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> url         当前网页的URL，不包含#及其后面部分</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 合法的签名</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception 获取签名异常</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">sign</span><span class="params">(String jsApiTicket, String nonceStr, <span class="keyword">long</span> timestame, String url)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        Map&lt;String, String&gt; paramMap = <span class="keyword">new</span> TreeMap&lt;String, String&gt;();</span><br><span class="line">        paramMap.put(<span class="string">"jsapi_ticket"</span>, jsApiTicket);</span><br><span class="line">        paramMap.put(<span class="string">"noncestr"</span>, nonceStr);</span><br><span class="line">        paramMap.put(<span class="string">"timestamp"</span>, Long.toString(timestame));</span><br><span class="line">        paramMap.put(<span class="string">"url"</span>, url);</span><br><span class="line"></span><br><span class="line">        StringBuilder sb = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">        <span class="keyword">for</span> (Map.Entry&lt;String, String&gt; entry : paramMap.entrySet()) &#123;</span><br><span class="line">            sb.append(<span class="string">"&amp;"</span>).append(entry.toString());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> SHA1.getSHA1HexString(sb.substring(<span class="number">1</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="响应"><a href="#响应" class="headerlink" title="响应"></a>响应</h2><h1 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h1><ul>
<li><a href="https://mp.weixin.qq.com/wiki?t=resource/res_main&amp;id=mp1472017492_58YV5" target="_blank" rel="noopener">https://mp.weixin.qq.com/wiki?t=resource/res_main&amp;id=mp1472017492_58YV5</a></li>
</ul>
]]></content>
      <categories>
        <category>dev</category>
      </categories>
      <tags>
        <tag>wechat</tag>
      </tags>
  </entry>
  <entry>
    <title>Xcode Dev</title>
    <url>/2018/08/10/Xcode%20Dev/</url>
    <content><![CDATA[<h1 id="Swift"><a href="#Swift" class="headerlink" title="Swift"></a>Swift</h1><p>基础语法</p>
<p>#APPFramework 框架</p>
<p>整个 xcode 的集成开发包，其中有几个常见的库介绍，在 help 里面找 document 可以看具体对象的说明</p>
<ul>
<li>AppKit<ul>
<li><a href="https://link.jianshu.com?t=apple-reference-documentation%3A%2F%2Ftc2870785" target="_blank" rel="noopener">Core App</a> 核心库</li>
<li><a href="https://link.jianshu.com?t=apple-reference-documentation%3A%2F%2Ftc2871784" target="_blank" rel="noopener">Data Management</a> 数据管理</li>
<li><a href="https://link.jianshu.com?t=apple-reference-documentation%3A%2F%2Ftc2870786" target="_blank" rel="noopener">Resource Management</a> 资源管理</li>
<li><a href="https://link.jianshu.com?t=apple-reference-documentation%3A%2F%2Ftc2870789" target="_blank" rel="noopener">Views and Controls</a> 视图UI 控件</li>
<li><a href="https://link.jianshu.com?t=apple-reference-documentation%3A%2F%2Ftc2870790" target="_blank" rel="noopener">View Management</a> 视图管理</li>
<li><a href="https://link.jianshu.com?t=apple-reference-documentation%3A%2F%2Ftc2870791" target="_blank" rel="noopener">Menus, Cursors, and the Dock</a> 菜单光标和 dock</li>
<li><a href="https://link.jianshu.com?t=apple-reference-documentation%3A%2F%2Ftc2870788" target="_blank" rel="noopener">Windows, Panels, and Screens</a> 窗口面板屏幕</li>
<li><a href="https://link.jianshu.com?t=apple-reference-documentation%3A%2F%2Ftc2870795" target="_blank" rel="noopener">Accessibility</a> 授权</li>
<li><a href="https://link.jianshu.com?t=apple-reference-documentation%3A%2F%2Ftc2870793" target="_blank" rel="noopener">Animation</a> 动画</li>
<li><a href="https://link.jianshu.com?t=apple-reference-documentation%3A%2F%2Ftc2870794" target="_blank" rel="noopener">Drag and Drop</a> 拖拽支持库</li>
<li><a href="https://link.jianshu.com?t=apple-reference-documentation%3A%2F%2Ftc2870796" target="_blank" rel="noopener">Sound, Speech, and Haptics</a> 声音，语音，和触觉</li>
<li><a href="https://link.jianshu.com?t=apple-reference-documentation%3A%2F%2Ftc2870797" target="_blank" rel="noopener">Mouse, Keyboard, and Trackpad </a> 声音，语音，和触觉</li>
<li><a href="https://link.jianshu.com?t=apple-reference-documentation%3A%2F%2Ftc2870798" target="_blank" rel="noopener">Gestures</a>  手势</li>
<li><a href="https://link.jianshu.com?t=apple-reference-documentation%3A%2F%2Ftc2870821" target="_blank" rel="noopener">Images and PDF</a>  声音，语音，和触觉</li>
<li><a href="https://link.jianshu.com?t=apple-reference-documentation%3A%2F%2Ftc2870822" target="_blank" rel="noopener">Drawing</a>  绘图</li>
<li><a href="https://link.jianshu.com?t=apple-reference-documentation%3A%2F%2Ftc2880984" target="_blank" rel="noopener">Color</a>  颜色</li>
<li><a href="https://link.jianshu.com?t=apple-reference-documentation%3A%2F%2Ftc2870823" target="_blank" rel="noopener">Printing</a>  打印</li>
<li><a href="https://link.jianshu.com?t=apple-reference-documentation%3A%2F%2Ftc2870801" target="_blank" rel="noopener">TextKit</a></li>
<li><a href="https://link.jianshu.com?t=apple-reference-documentation%3A%2F%2Ftc2870802" target="_blank" rel="noopener">Fonts</a> 字体</li>
</ul>
</li>
<li>UIKit</li>
<li>Foundation<ul>
<li>NSArray</li>
<li>NSDict</li>
</ul>
</li>
</ul>
<h1 id="Xcode-开发"><a href="#Xcode-开发" class="headerlink" title="Xcode 开发"></a>Xcode 开发</h1><h2 id="新建项目"><a href="#新建项目" class="headerlink" title="新建项目"></a>新建项目</h2><p><img src="http://img.sandseasoft.com/20180810153388798150971.png" alt="image-20180810152631378"></p>
<ol>
<li>打开 xcode</li>
<li>结构体如上，xxxTests和xxxUITests 是测试文件夹，Products 是成品包，app文件直接放入DropDMG 直接可以打包，第一个文件夹就是代码文件了，其中*.storyboard 是 UI 设计的文件</li>
<li>点击*.storyboard 拖拽 component</li>
</ol>
<h2 id="使用cocoaPods"><a href="#使用cocoaPods" class="headerlink" title="使用cocoaPods"></a>使用cocoaPods</h2><ul>
<li>本质就是一个 maven 一样的包管理器。</li>
<li>CocoaPods的原理是将所有的依赖库都放到另一个名为Pods的项目中，然后让主项目依赖Pods项目，这样，源码管理工作都从主项目移到了Pods项目中。Pods项目最终会编译成一个名为libPods.a的文件，主项目只需要依赖这个.a文件即可。</li>
<li>第一次执行pod setup时,CocoaPods会将这些podspec索引文件更新到本地的~/.cocoapods目录下,这个索引文件比较大,所以第一次更新时非常慢.</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#安装 cocoaPods</span></span><br><span class="line">sudo gem install cocoapods</span><br><span class="line">pod setup</span><br><span class="line"><span class="comment">#查找对应库</span></span><br><span class="line">pod search AFNetworking</span><br><span class="line"><span class="comment">#进入工程所在的目录（工程根目录）</span></span><br><span class="line">pod init</span><br><span class="line">vim Podfile</span><br><span class="line"></span><br><span class="line">platform :ios, <span class="string">'8.0'</span></span><br><span class="line">use_frameworks!</span><br><span class="line"></span><br><span class="line">target <span class="string">'MyApp'</span> <span class="keyword">do</span></span><br><span class="line">  pod <span class="string">'AFNetworking'</span>, <span class="string">'~&gt; 2.6'</span></span><br><span class="line">  pod <span class="string">'SQLite.swift'</span>, <span class="string">'~&gt; 0.11.4'</span></span><br><span class="line">  pod <span class="string">'SwiftyJSON'</span>, <span class="string">'~&gt; 2.3'</span></span><br><span class="line">end</span><br><span class="line"><span class="comment">#安装对应库</span></span><br><span class="line">pod install</span><br><span class="line"><span class="comment">#使用xcworkspace 打开项目</span></span><br><span class="line">open App.xcworkspace</span><br><span class="line"><span class="comment">#依赖使用</span></span><br><span class="line">import SQLite</span><br><span class="line">//如果不存在的话，创建一个名为db.sqlite3的数据库，并且连接数据库 </span><br><span class="line"><span class="built_in">let</span> path = NSSearchPathForDirectoriesInDomains(.documentDirectory, .userDomainMask, <span class="literal">true</span>).first! </span><br><span class="line"><span class="built_in">let</span> db = try Connection(<span class="string">"\(path)/db.sqlite3"</span>)</span><br></pre></td></tr></table></figure>
<h1 id="UI-控件设计"><a href="#UI-控件设计" class="headerlink" title="UI 控件设计"></a>UI 控件设计</h1><h2 id="xib-的使用"><a href="#xib-的使用" class="headerlink" title="xib 的使用"></a>xib 的使用</h2><ul>
<li><p>xib 和 NSViewController 两个成对使用，绑定一个 UI 对应的交互行为，做 macOS 开发的时候常用</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">//注意这里声明的时候作为成员变量，防止引用对象被释放</span><br><span class="line">var demoWindow: NSWidowController</span><br><span class="line"></span><br><span class="line">demoWindow=DemoWindow();</span><br><span class="line">demoWindow.showWindows(nil);</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="storyboards使用"><a href="#storyboards使用" class="headerlink" title="storyboards使用"></a>storyboards使用</h2><p>storyboard官方希望替代 xib 的策略，ios 常用</p>
<ol>
<li><p>新建 storyboards，并设置为 main</p>
</li>
<li><p>点击圆球右键拖拽至下一个 Scene，设置 Segue 的 Kind</p>
</li>
<li><p>页面跳转两种方案，设置 button 直接右键连接下一个 Scene；或者设置Segue的Identifier，然后设置一个 button 的 event，调用</p>
</li>
<li><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">self.performSegue( withIdentifier: NSStoryboardSegue.Identifier(rawValue: &quot;123123&quot;), sender: &quot;11&quot;)</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h5 id="直接显式调用"><a href="#直接显式调用" class="headerlink" title="直接显式调用"></a>直接显式调用</h5><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> Cocoa</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AppDelegate</span>: <span class="title">NSObject</span>, <span class="title">NSApplicationDelegate</span>, <span class="title">NSWindowDelegate</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> windowController: <span class="type">NSWindowController!</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">applicationDidFinishLaunching</span><span class="params">(<span class="number">_</span> aNotification: Notification)</span></span> &#123;</span><br><span class="line">        createMenu()</span><br><span class="line">        windowController = <span class="type">WindowController</span>()</span><br><span class="line">        windowController.showWindow(<span class="keyword">self</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">applicationShouldTerminateAfterLastWindowClosed</span><span class="params">(<span class="number">_</span> sender: NSApplication)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">createMenu</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">let</span> mainMenu = <span class="type">NSMenu</span>(title: <span class="string">"MainMenu"</span>)</span><br><span class="line">        <span class="keyword">let</span> applicationMenuItem = mainMenu.addItem(withTitle: <span class="string">"Application"</span>, action: <span class="literal">nil</span>, keyEquivalent: <span class="string">""</span>)</span><br><span class="line">        <span class="keyword">let</span> applicationSubmenu = <span class="type">NSMenu</span>(title: <span class="string">"Application"</span>)</span><br><span class="line">        <span class="keyword">let</span> quitMenuItem = applicationSubmenu.addItem(withTitle: <span class="string">"Quit"</span>, action:#selector(<span class="type">NSApplication</span>.terminate(<span class="number">_</span>:)), keyEquivalent:<span class="string">"q"</span>)</span><br><span class="line">        quitMenuItem.target = <span class="type">NSApp</span></span><br><span class="line">        mainMenu.setSubmenu(applicationSubmenu, <span class="keyword">for</span>: applicationMenuItem)</span><br><span class="line">        <span class="type">NSApp</span>.mainMenu = mainMenu</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="UIWebView-和-JSBright"><a href="#UIWebView-和-JSBright" class="headerlink" title="UIWebView 和 JSBright"></a>UIWebView 和 JSBright</h1><h1 id="调用第三方库"><a href="#调用第三方库" class="headerlink" title="调用第三方库"></a>调用第三方库</h1><h2 id="Swift4-0-调用-OC-库"><a href="#Swift4-0-调用-OC-库" class="headerlink" title="Swift4.0 调用 OC 库"></a>Swift4.0 调用 OC 库</h2><h2 id="Swift4-0-调用-SQLite"><a href="#Swift4-0-调用-SQLite" class="headerlink" title="Swift4.0 调用 SQLite"></a>Swift4.0 调用 SQLite</h2><h2 id="Swift4-0-调用-Alamofire"><a href="#Swift4-0-调用-Alamofire" class="headerlink" title="Swift4.0 调用 Alamofire"></a>Swift4.0 调用 Alamofire</h2><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul>
<li><a href="https://www.jianshu.com/p/30e31282c4b9" target="_blank" rel="noopener">https://www.jianshu.com/p/30e31282c4b9</a></li>
<li><a href="https://cocoapods.org/" target="_blank" rel="noopener">https://cocoapods.org/</a></li>
<li><a href="http://footle.org/WeatherBar/" target="_blank" rel="noopener">http://footle.org/WeatherBar/</a></li>
<li><a href="https://blog.csdn.net/fl2011sx/article/details/73252859" target="_blank" rel="noopener">https://blog.csdn.net/fl2011sx/article/details/73252859</a></li>
</ul>
]]></content>
      <categories>
        <category>dev</category>
      </categories>
      <tags>
        <tag>macos</tag>
        <tag>swift</tag>
        <tag>ios</tag>
        <tag>guide</tag>
      </tags>
  </entry>
  <entry>
    <title>blog system moving</title>
    <url>/2018/08/05/blog%20system%20moving/</url>
    <content><![CDATA[<p>这里把原来tryghost的blog全部迁移到hexo上面来了，新的方案使用github+travisCI+hexo。 说一下整体过程</p>
<h1 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h1><ol>
<li>tryghost版本太老，nodejs基于0.10.x的版本，dependence里面有很多包都有漏洞但是无法升级。</li>
<li>新版本和老版本数据库不兼容。</li>
</ol>
<h1 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h1><h2 id="迁移过程"><a href="#迁移过程" class="headerlink" title="迁移过程"></a>迁移过程</h2><ol>
<li>export tryghost backup.json</li>
<li>把json通过java解析，用fastjson，velocity 库转换成md模版</li>
<li>import hexo，然后hexo clean ，hexo g集成</li>
</ol>
<h2 id="部署过程"><a href="#部署过程" class="headerlink" title="部署过程"></a>部署过程</h2><ol>
<li>github新建仓库zuoyun.me，设置blog-resouce 和master双分支</li>
<li>对master分支设置GitHub page 和 CNAME，域名重定向</li>
<li>对blog-resouce分支导入hexo和.travis.yml文件</li>
<li>生成github token在travis-ci里面配置对应的库，完成ci配置</li>
</ol>
<h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><ul>
<li>CNAME 文件放到 theme/next/source 下</li>
</ul>
<h2 id="travis-yml文件"><a href="#travis-yml文件" class="headerlink" title=".travis.yml文件"></a>.travis.yml文件</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">language: node_js</span><br><span class="line">node_js: v10.21.0</span><br><span class="line"></span><br><span class="line"># S: Build Lifecycle</span><br><span class="line">install:</span><br><span class="line">  - yarn install</span><br><span class="line"></span><br><span class="line">cache:</span><br><span class="line">    yarn: true</span><br><span class="line">    apt: true</span><br><span class="line">    directories:</span><br><span class="line">        - node_modules # 缓存不经常更改的内容</span><br><span class="line"></span><br><span class="line">script:</span><br><span class="line">  - hexo clean  #清除</span><br><span class="line">  - hexo g</span><br><span class="line"></span><br><span class="line">after_script:</span><br><span class="line">  - cd ./public</span><br><span class="line">  - git init</span><br><span class="line">  - git config user.name &quot;chinajik&quot;</span><br><span class="line">  - git config user.email &quot;chinajik@gmail.com&quot;</span><br><span class="line">  - git add .</span><br><span class="line">  - git commit -m &quot;Update docs&quot;</span><br><span class="line">  - git push --force --quiet &quot;https://$&#123;token&#125;@$&#123;GH_REF&#125;&quot; master:master</span><br><span class="line"># E: Build LifeCycle</span><br><span class="line"></span><br><span class="line">branches:</span><br><span class="line">  only:</span><br><span class="line">    - blog-resource</span><br><span class="line">env:</span><br><span class="line"> global:</span><br><span class="line">   - GH_REF: github.com/jik1992/zuoyun.me.git</span><br></pre></td></tr></table></figure>
<h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><ul>
<li><a href="https://www.jianshu.com/p/5691815b81b6" target="_blank" rel="noopener">https://www.jianshu.com/p/5691815b81b6</a></li>
</ul>
]]></content>
      <categories>
        <category>ops</category>
        <category>dev</category>
      </categories>
      <tags>
        <tag>nodejs</tag>
        <tag>blog</tag>
        <tag>travis</tag>
      </tags>
  </entry>
  <entry>
    <title>OAuth OAuth2.0</title>
    <url>/2017/11/10/0226-OAuth%20OAuth2.0/</url>
    <content><![CDATA[<p><a href="http://www.imooc.com/article/10931" target="_blank" rel="noopener">http://www.imooc.com/article/10931</a><br><a href="http://www.ruanyifeng.com/blog/2014/05/oauth_2_0.html" target="_blank" rel="noopener">http://www.ruanyifeng.com/blog/2014/05/oauth_2_0.html</a><br><a href="https://oauth.net/2/" target="_blank" rel="noopener">https://oauth.net/2/</a></p>
<p>Oauth 实现</p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>未归档</tag>
      </tags>
  </entry>
  <entry>
    <title>Cache Ignite</title>
    <url>/2017/11/05/0224-Cache%20Ignite/</url>
    <content><![CDATA[<p><a href="https://www.zybuluo.com/liyuj/note/481591" target="_blank" rel="noopener">https://www.zybuluo.com/liyuj/note/481591</a></p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>未归档</tag>
      </tags>
  </entry>
  <entry>
    <title>Distributed Queue RabbitMQ</title>
    <url>/2017/11/05/0223-Distributed%20Queue%20RabbitMQ/</url>
    <content><![CDATA[<p>默认账号<br>guest guest</p>
<p>client 5672<br>web 15672 </p>
<p>4369 (epmd), 25672 (Erlang distribution)<br>5672, 5671 (AMQP 0-9-1 without and with TLS)<br>15672 (if management plugin is enabled)<br>61613, 61614 (if STOMP is enabled)<br>1883, 8883 (if MQTT is enabled)</p>
<p>一键docker启动<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker run -d --name rabbitmq --publish 5671:5671 \</span><br><span class="line"> --publish 5672:5672 --publish 4369:4369 --publish 25672:25672 --publish 15671:15671 --publish 15672:15672 \</span><br><span class="line">rabbitmq:management</span><br></pre></td></tr></table></figure></p>
<p><a href="http://127.0.0.1:15672/#" target="_blank" rel="noopener">http://127.0.0.1:15672/#</a> /</p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>未归档</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring-Javassit/AspectJ/AOP</title>
    <url>/2015/11/20/0052-Spring-Javassit-AspectJ-AOP/</url>
    <content><![CDATA[<h1 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h1><p>基于 jvm 的静态语言的动态实现一般有几种方法， 其中分两大类，jvm 的动态代理和字节码编程。其中 jvm 动态代理 proxydynmic 面对接口编程，字节码编程主要对应的包是 cglib 和 javassit，cglib 性能很好，有很多约束条件，如需要默认的初始化构造方法。javassit 相对来说更加好用，由于 classloader 默认一个类只能够加载一次，也需要 agent 支持或者自定义 classloader。</p>
<h1 id="代理类"><a href="#代理类" class="headerlink" title="代理类"></a>代理类</h1><p>1.5之后的特性, JVM级别做了AOP支持，核心Instrumentation接口。<br>使用<br>-javaagent:daemon.jar </p>
<h1 id="字节码增强"><a href="#字节码增强" class="headerlink" title="字节码增强"></a>字节码增强</h1><p><img src="http://img.sandseasoft.com/image/c/b2/50383d59d486d145365d6fd0e2db6.png" alt></p>
<ul>
<li>cglib</li>
<li>javaassit</li>
</ul>
<h1 id="一些工具"><a href="#一些工具" class="headerlink" title="一些工具"></a>一些工具</h1><ul>
<li>Btree</li>
</ul>
<p><a href="https://github.com/jbachorik/btrace2" target="_blank" rel="noopener">https://github.com/jbachorik/btrace2</a><br><a href="http://www.iteye.com/topic/1005918" target="_blank" rel="noopener">http://www.iteye.com/topic/1005918</a></p>
<ul>
<li>beanutils</li>
</ul>
<h1 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h1><p>动态代理类生成的对象会占用PermGen 内存，而PermGen内存是极难回收的，吃完就会 OOM。<br> spring 的反射是基于 cglib 的，aop 也是基于 cglib 的，那么如果PermGen 内存溢出请检查反射是否使用不当，或者性能问题导致代理类无法及时释放。</p>
<p>claasloader 要求同一个类只能注册一次， 如果需要做到类重载那么需要自定义一个 classloader。</p>
<p><img src="http://img.sandseasoft.com/image/6/bb/2a5ab206a6c4103f666017b41604c.png" alt></p>
<h1 id="Javassist-使用"><a href="#Javassist-使用" class="headerlink" title="Javassist 使用"></a>Javassist 使用</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public class JavassistDemo1 &#123;</span><br><span class="line"></span><br><span class="line">  /**</span><br><span class="line">   * 动态构造对象</span><br><span class="line">   */</span><br><span class="line">  @Test</span><br><span class="line">  public void demo() throws NotFoundException, CannotCompileException, ClassNotFoundException, IllegalAccessException,</span><br><span class="line">                            InstantiationException, NoSuchMethodException, InvocationTargetException, IOException &#123;</span><br><span class="line">    ClassPool cp = ClassPool.getDefault();</span><br><span class="line">    //另一种方法,当 classpool 没有被引用的时候,会被释放</span><br><span class="line">//    ClassPool cp = new ClassPool(true);</span><br><span class="line">    Loader loader = new Loader(cp);</span><br><span class="line"></span><br><span class="line">    CtClass ctClass = cp.makeClass(&quot;com.raycloud.express.monitor.javassist.sample.ExpDemo&quot;);</span><br><span class="line"></span><br><span class="line">    StringBuffer body = null;</span><br><span class="line">    //参数  1：属性类型  2：属性名称  3：所属类CtClass</span><br><span class="line">    CtField ctField = new CtField(cp.get(&quot;java.lang.String&quot;), &quot;name&quot;, ctClass);</span><br><span class="line">    ctField.setModifiers(Modifier.PRIVATE);</span><br><span class="line">    //设置name属性的get set方法</span><br><span class="line">    ctClass.addMethod(CtNewMethod.setter(&quot;setName&quot;, ctField));</span><br><span class="line">    ctClass.addMethod(CtNewMethod.getter(&quot;getName&quot;, ctField));</span><br><span class="line">    ctClass.addField(ctField, CtField.Initializer.constant(&quot;default&quot;));</span><br><span class="line"></span><br><span class="line">    //参数  1：参数类型   2：所属类CtClass</span><br><span class="line">    CtConstructor ctConstructor = new CtConstructor(new CtClass[]&#123;&#125;, ctClass);</span><br><span class="line">    body = new StringBuffer();</span><br><span class="line">    body.append(&quot;&#123;\n name=\&quot;me\&quot;;\n&#125;&quot;);</span><br><span class="line">    ctConstructor.setBody(body.toString());</span><br><span class="line">    ctClass.addConstructor(ctConstructor);</span><br><span class="line"></span><br><span class="line">    //参数：  1：返回类型  2：方法名称  3：传入参数类型  4：所属类CtClass</span><br><span class="line">    CtMethod ctMethod = new CtMethod(CtClass.voidType, &quot;execute&quot;, new CtClass[]&#123;&#125;, ctClass);</span><br><span class="line">    ctMethod.setModifiers(Modifier.PUBLIC);</span><br><span class="line">//    ctMethod.insertBefore(&quot;&#123; System.out.println($0); System.out.println($2); &#125;&quot;);</span><br><span class="line"></span><br><span class="line">    body = new StringBuffer();</span><br><span class="line">    body.append(&quot;&#123;\n System.out.println(name);&quot;);</span><br><span class="line">    body.append(&quot;\n System.out.println(\&quot;execute ok\&quot;);&quot;);</span><br><span class="line">    body.append(&quot;\n return ;&quot;);</span><br><span class="line">    body.append(&quot;\n&#125;&quot;);</span><br><span class="line">    ctMethod.setBody(body.toString());</span><br><span class="line">    ctClass.addMethod(ctMethod);</span><br><span class="line">    Class&lt;?&gt; c = ctClass.toClass();</span><br><span class="line">    Object o = c.newInstance();</span><br><span class="line">    Method method = o.getClass().getMethod(&quot;execute&quot;, new Class[]&#123;&#125;);</span><br><span class="line">    //调用字节码生成类的execute方法</span><br><span class="line">    method.invoke(o, new Object[]&#123;&#125;);</span><br><span class="line"></span><br><span class="line">    //写文件,该类冻结</span><br><span class="line">    ctClass.debugWriteFile();</span><br><span class="line">    //生成类加载到对应的 classloader, 该类冻结</span><br><span class="line">    ctClass.setName(&quot;ExpDemo$$Impl&quot;);</span><br><span class="line">    Class clazz = ctClass.toClass();</span><br><span class="line">    ctClass.toClass(loader);</span><br><span class="line"></span><br><span class="line">    clazz.getMethod(&quot;show&quot;).invoke(clazz.newInstance(), &quot;hello&quot;);</span><br><span class="line">    ctClass.defrost();  // 解冻一个类，对应freeze方法</span><br><span class="line"></span><br><span class="line">    //释放内存,踢出类</span><br><span class="line">    ctClass.detach();</span><br><span class="line">    ClassPool.doPruning = true;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public class JavassistDemo2 &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  /**</span><br><span class="line">   * 拦截器</span><br><span class="line">   */</span><br><span class="line">  @Test</span><br><span class="line">  public void demo() throws NotFoundException, CannotCompileException, ClassNotFoundException, IllegalAccessException,</span><br><span class="line">                            InstantiationException, NoSuchMethodException, InvocationTargetException &#123;</span><br><span class="line">    // 实例化代理类工厂</span><br><span class="line">    ProxyFactory factory = new ProxyFactory();</span><br><span class="line"></span><br><span class="line">    //设置父类，ProxyFactory将会动态生成一个类，继承该父类</span><br><span class="line">    factory.setSuperclass(TestProxy.class);</span><br><span class="line"></span><br><span class="line">    //设置过滤器，判断哪些方法调用需要被拦截</span><br><span class="line">    factory.setFilter(new MethodFilter() &#123;</span><br><span class="line">      @Override</span><br><span class="line">      public boolean isHandled(Method m) &#123;</span><br><span class="line">        return m.getName().startsWith(&quot;get&quot;);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    Class&lt;?&gt; clazz = factory.createClass();</span><br><span class="line">    TestProxy proxy = (TestProxy) clazz.newInstance();</span><br><span class="line">    ((ProxyObject) proxy).setHandler(new MethodHandler() &#123;</span><br><span class="line">      @Override</span><br><span class="line">      public Object invoke(Object self, Method thisMethod, Method proceed, Object[] args) throws Throwable &#123;</span><br><span class="line">        //拦截后前置处理，改写name属性的内容</span><br><span class="line">        //实际情况可根据需求修改</span><br><span class="line">        System.out.println(thisMethod.getName() + &quot;被调用&quot;);</span><br><span class="line">        try &#123;</span><br><span class="line">          Object ret = proceed.invoke(self, args);</span><br><span class="line">          System.out.println(&quot;返回值: &quot; + ret);</span><br><span class="line">          return ret;</span><br><span class="line">        &#125; finally &#123;</span><br><span class="line">          System.out.println(thisMethod.getName() + &quot;调用完毕&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    proxy.setName(&quot;Alvin&quot;);</span><br><span class="line">    proxy.setValue(&quot;1000&quot;);</span><br><span class="line">    proxy.getName();</span><br><span class="line">    proxy.getValue();</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public class JavassistDemo3 &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  /**</span><br><span class="line">   * 获取接口</span><br><span class="line">   */</span><br><span class="line">  @Test</span><br><span class="line">  public void test() throws NotFoundException &#123;</span><br><span class="line">    // 获取默认类型池对象</span><br><span class="line">    ClassPool classPool = ClassPool.getDefault();</span><br><span class="line"></span><br><span class="line">    // 获取指定的类型</span><br><span class="line">    CtClass ctClass = classPool.get(&quot;java.lang.String&quot;);</span><br><span class="line"></span><br><span class="line">    System.out.println(ctClass.getName());  // 获取类名</span><br><span class="line">    System.out.println(&quot;\tpackage &quot; + ctClass.getPackageName());    // 获取包名</span><br><span class="line">    System.out</span><br><span class="line">        .print(&quot;\t&quot; + Modifier.toString(ctClass.getModifiers()) + &quot; class &quot; + ctClass.getSimpleName());   // 获取限定符和简要类名</span><br><span class="line">    System.out.print(&quot; extends &quot; + ctClass.getSuperclass().getName());  // 获取超类</span><br><span class="line">    // 获取接口</span><br><span class="line">    if (ctClass.getInterfaces() != null) &#123;</span><br><span class="line">      System.out.print(&quot; implements &quot;);</span><br><span class="line">      boolean first = true;</span><br><span class="line">      for (CtClass c : ctClass.getInterfaces()) &#123;</span><br><span class="line">        if (first) &#123;</span><br><span class="line">          first = false;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">          System.out.print(&quot;, &quot;);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.print(c.getName());</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  /**</span><br><span class="line">   * 获取方法参数</span><br><span class="line">   */</span><br><span class="line">  @Test</span><br><span class="line">  public void demo() throws NotFoundException, CannotCompileException, ClassNotFoundException, IllegalAccessException,</span><br><span class="line">                            InstantiationException, NoSuchMethodException, InvocationTargetException &#123;</span><br><span class="line"></span><br><span class="line">    ClassLoader classLoader = ClassPool.getDefault().getClassLoader();</span><br><span class="line">    // 获取要修改的类</span><br><span class="line">    Class&lt;?&gt; clazz = classLoader.loadClass(&quot;edu.alvin.reflect.TestLib&quot;);</span><br><span class="line"></span><br><span class="line">    // 实例化类型池</span><br><span class="line">    ClassPool classPool = ClassPool.getDefault();</span><br><span class="line">//    classPool.appendClassPath(clazz);</span><br><span class="line">    CtClass ctClass = classPool.get(clazz.getName());</span><br><span class="line"></span><br><span class="line">    // 获取方法</span><br><span class="line">    CtMethod</span><br><span class="line">        method =</span><br><span class="line">        ctClass</span><br><span class="line">            .getDeclaredMethod(&quot;show&quot;);</span><br><span class="line">    // 判断是否为静态方法</span><br><span class="line">    int staticIndex = Modifier.isStatic(method.getModifiers()) ? 0 : 1;</span><br><span class="line"></span><br><span class="line">    // 获取方法的参数</span><br><span class="line">    MethodInfo methodInfo = method.getMethodInfo();</span><br><span class="line">    CodeAttribute codeAttribute = methodInfo.getCodeAttribute();</span><br><span class="line">    LocalVariableAttribute</span><br><span class="line">        localVariableAttribute =</span><br><span class="line">        (LocalVariableAttribute) codeAttribute.getAttribute(LocalVariableAttribute.tag);</span><br><span class="line"></span><br><span class="line">    for (int i = 0; i &lt; method.getParameterTypes().length; i++) &#123;</span><br><span class="line">      System.out.println(&quot;第&quot; + (i + 1) + &quot;个参数名称为: &quot; + localVariableAttribute.variableName(staticIndex + i));</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">  Loader loader = new Loader();</span><br><span class="line"></span><br><span class="line">  CtClass ctClass = ClassPool.getDefault().get(&quot;com.raycloud.express.monitor.javassist.sample.ExpDemo&quot;);</span><br><span class="line">  CtClass xxx = ClassPool.getDefault().get(&quot;com.raycloud.express.monitor.javassist.sample.SupExpDemo&quot;);</span><br><span class="line">  ctClass.setSuperclass(xxx);</span><br><span class="line"></span><br><span class="line">  String needChangeName = &quot;setName&quot;;</span><br><span class="line">  CtMethod needChangeMethod = ctClass.getDeclaredMethod(needChangeName);</span><br><span class="line">  String newName = needChangeName + &quot;$impl&quot;;</span><br><span class="line">  needChangeMethod.setName(newName);</span><br><span class="line">  CtMethod newMethod = CtNewMethod.copy(needChangeMethod, needChangeName, ctClass, null);</span><br><span class="line"></span><br><span class="line">  //主要的注入代码</span><br><span class="line">  StringBuffer body = new StringBuffer();</span><br><span class="line">  body.append(&quot;&#123;\nlong start = System.currentTimeMillis();\n&quot;);</span><br><span class="line">  //调用原有代码，类似于method();($$)表示所有的参数</span><br><span class="line">  body.append(newName + &quot;($$);\n&quot;);</span><br><span class="line">  body.append(&quot;System.out.println(\&quot;Call to method &quot;</span><br><span class="line">              + needChangeName</span><br><span class="line">              + &quot; took \&quot; +\n (System.currentTimeMillis()-start) + &quot;</span><br><span class="line">              + &quot;\&quot; ms.\&quot;);\n&quot;);</span><br><span class="line"></span><br><span class="line">  body.append(&quot;&#125;&quot;);</span><br><span class="line">  //替换新方法</span><br><span class="line">  newMethod.setBody(body.toString());</span><br><span class="line">  //增加新方法</span><br><span class="line">  ctClass.addMethod(newMethod);</span><br><span class="line">  //类已经更改，注意不能使用A a=new A();，因为在同一个classloader中，不允许装载同一个类两次</span><br><span class="line">  ctClass.debugWriteFile();</span><br><span class="line">  ExpDemo expDemo = (ExpDemo) ctClass.toClass(loader).newInstance();</span><br><span class="line">  expDemo.setName(&quot;xxx&quot;);</span><br><span class="line">&#125; catch (CannotCompileException e) &#123;</span><br><span class="line">  e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//也就是说这个类加载器里面的这个对象全部都被改变了</span><br><span class="line">ExpDemo b = new ExpDemo();</span><br><span class="line">b.setName(&quot;xxx&quot;);</span><br></pre></td></tr></table></figure>
<h1 id="引用资料"><a href="#引用资料" class="headerlink" title="引用资料"></a>引用资料</h1><p><a href="https://blog.newrelic.com/2014/09/29/diving-bytecode-manipulation-creating-audit-log-asm-javassist/" target="_blank" rel="noopener">https://blog.newrelic.com/2014/09/29/diving-bytecode-manipulation-creating-audit-log-asm-javassist/</a></p>
<p><a href="http://zhxing.iteye.com/blog/1703305" target="_blank" rel="noopener">http://zhxing.iteye.com/blog/1703305</a></p>
<p><a href="http://yonglin4605.iteye.com/blog/1396494" target="_blank" rel="noopener">http://yonglin4605.iteye.com/blog/1396494</a></p>
<h1 id="AspectJ"><a href="#AspectJ" class="headerlink" title="AspectJ"></a>AspectJ</h1><p>cglib 需要做字节码修改必须要有一个默认的构造方法.</p>
<p>写一个切面<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@Component</span><br><span class="line">@Aspect</span><br><span class="line">public class SimpleAspect &#123;</span><br><span class="line"></span><br><span class="line">  @Pointcut(&quot;execution(* com.quicloud.*Controller*.*(..))&quot;)</span><br><span class="line">  public void pointCut() &#123;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  @After(&quot;pointCut()&quot;)</span><br><span class="line">  public void after(JoinPoint joinPoint) &#123;</span><br><span class="line">    System.out.println(&quot;after aspect executed&quot;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  @Before(&quot;pointCut() &amp;&amp; exp()&quot;)</span><br><span class="line">  public void before(JoinPoint joinPoint) &#123;</span><br><span class="line">    //如果需要这里可以取出参数进行处理</span><br><span class="line">    //Object[] args = joinPoint.getArgs();</span><br><span class="line">    System.out.println(&quot;before aspect executing&quot;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  @AfterReturning(pointcut = &quot;pointCut()&quot;, returning = &quot;returnVal&quot;)</span><br><span class="line">  public void afterReturning(JoinPoint joinPoint, Object returnVal) &#123;</span><br><span class="line">    System.out.println(&quot;afterReturning executed, return result is &quot;</span><br><span class="line">                       + returnVal);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  @Around(&quot;pointCut()&quot;)</span><br><span class="line">  public void around(ProceedingJoinPoint pjp) throws Throwable &#123;</span><br><span class="line">    System.out.println(&quot;around start..&quot;);</span><br><span class="line">    try &#123;</span><br><span class="line">      pjp.proceed();</span><br><span class="line">    &#125; catch (Throwable ex) &#123;</span><br><span class="line">      System.out.println(&quot;error in around&quot;);</span><br><span class="line">      throw ex;</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println(&quot;around end&quot;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  @AfterThrowing(pointcut = &quot;pointCut()&quot;, throwing = &quot;error&quot;)</span><br><span class="line">  public void afterThrowing(JoinPoint jp, Throwable error) &#123;</span><br><span class="line">    System.out.println(&quot;error:&quot; + error);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>配置<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;beans xmlns:aop=&quot;http://www.springframework.org/schema/aop&quot;       xsi:schemaLocation=&quot;http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd&quot;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;aop:aspectj-autoproxy/&gt;</span><br><span class="line">&lt;/beans&gt;</span><br></pre></td></tr></table></figure></p>
<p>pom.xml<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.aspectj&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;aspectjweaver&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;1.8.7&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure></p>
<p><a href="http://docs.spring.io/spring/docs/2.5.x/reference/aop.html#" target="_blank" rel="noopener">http://docs.spring.io/spring/docs/2.5.x/reference/aop.html#</a> aop-choosing</p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>Search ElasticSearch</title>
    <url>/2015/12/07/0078-Search%20ElasticSearch/</url>
    <content><![CDATA[<p>简介</p>
<ul>
<li>节点（Node）：节点是一个ES的实例，一般一台主机上部署一个节点-</li>
<li>集群（Cluster）：集群由若干节点组成，和任意节点的通信等价于和集群的  通信</li>
<li>分片（Shard）：一个索引会分成多个分片存储，分片数量在索引建立后不可更改</li>
<li>副本（Replica）：副本是分片的一个拷贝，目的在于提高系统的容错性和搜索的效率</li>
<li>索引（Index）：类似数据库的库</li>
<li>类型（Type）：类似数据库的表</li>
<li>文档（Document）：类似数据库的行，包含一个或多个Field</li>
<li>字段（Field）：搜索的最小单元，可通过Mapping定义不同的属性（比如可否被搜索）</li>
</ul>
<h2 id="基本-CRUD"><a href="#基本-CRUD" class="headerlink" title="基本 CRUD"></a>基本 CRUD</h2><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>启动锁定内存<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ES_MIN_MEM=8.5g</span><br><span class="line">ES_MAX_MEM=8.5g</span><br><span class="line">ES_HEAP_SIZE=8G</span><br></pre></td></tr></table></figure></p>
<p>配置<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 名称</span><br><span class="line">cluster.name: my-application</span><br><span class="line"># 节点名称</span><br><span class="line">node.name: node-2</span><br><span class="line"># 是否保存数据</span><br><span class="line">node.data: true</span><br><span class="line">node.master: true</span><br><span class="line"># 分片副本</span><br><span class="line">index.number_of_shards:5 </span><br><span class="line">index.number_of_replicas:1</span><br><span class="line"># 单播节点发现</span><br><span class="line">discovery.zen.ping.unicast.hosts: [&quot;x.x.x.x&quot;, &quot;[::1]&quot;]</span><br><span class="line"># 锁内存</span><br><span class="line">bootstrap.mlockall:true</span><br><span class="line"># 是否禁止 http 访问</span><br><span class="line">http.enabled</span><br><span class="line"># 如果需要开启动态脚本查询，严禁使用 root 启动 es</span><br><span class="line">script.groovy.sandbox.enabled: true</span><br><span class="line">script.inline: on</span><br><span class="line">script.indexed: on</span><br><span class="line">script.search: on</span><br><span class="line">script.engine.groovy.inline.aggs: on</span><br><span class="line"># 慢日志设置 logger.yml 那边要手动开启</span><br><span class="line">index.search.slowlog.level: TRACE</span><br><span class="line"></span><br><span class="line">index.search.slowlog.threshold.query.warn: 10s</span><br><span class="line">index.search.slowlog.threshold.query.info: 5s</span><br><span class="line">index.search.slowlog.threshold.query.debug: 2s</span><br><span class="line">index.search.slowlog.threshold.query.trace: 500ms</span><br><span class="line"></span><br><span class="line">index.search.slowlog.threshold.fetch.warn: 1s</span><br><span class="line">index.search.slowlog.threshold.fetch.info: 800ms</span><br><span class="line">index.search.slowlog.threshold.fetch.debug: 500ms</span><br><span class="line">index.search.slowlog.threshold.fetch.trace: 200ms</span><br><span class="line"></span><br><span class="line"># 关闭自动创建索引、</span><br><span class="line">action.auto_create_index: false</span><br></pre></td></tr></table></figure></p>
<h2 id="集群"><a href="#集群" class="headerlink" title="集群"></a>集群</h2><p>集群策略基本上就是一个负载点暴露地址，2N+1个数据集群。<br>node.master=true/node.data=false<br>node.master=false/node.data=true<br>node.master=false/node.data=true<br><img src="http://img.sandseasoft.com/image/1/12/8aef70686cb67591b510f8e052f44.png" alt></p>
<h2 id="暴露api"><a href="#暴露api" class="headerlink" title="暴露api"></a>暴露api</h2><ul>
<li>_settings  全局设置</li>
<li>_templates 动态模板设定</li>
<li>_cluster  集群操作</li>
<li>_mappings 索引的 mapping 设定</li>
<li>_cat 监控数据</li>
<li>_bluk 批量更新端口</li>
</ul>
<h2 id="DSL"><a href="#DSL" class="headerlink" title="DSL"></a>DSL</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">curl -XPOST http://127.0.0.1:9200/films/md/ -d &apos;&#123; &quot;name&quot;:&quot;hei yi ren&quot;, &quot;tag&quot;: &quot;bad&quot;, &quot;post_date&quot;:&quot;2015-10-29T14:12:12&quot;&#125;&apos;  </span><br><span class="line">curl -XDELETE http://127.0.0.1:9200/films  </span><br><span class="line">curl -XPUT http://127.0.0.1:9200/films/md/1 -d &apos;&#123;&quot;name&quot;:&quot;hei yi ren&quot;, &quot;tag&quot;: &quot;good&quot;&#125;&apos;  </span><br><span class="line">curl http://127.0.0.1:9200/_search?pretty=true  </span><br><span class="line">curl http://127.0.0.1:9200/films/_search  </span><br><span class="line">curl http://127.0.0.1:9200/films/md/_search?pretty=true  </span><br><span class="line">curl http://127.0.0.1:9200/films/md/_search?q=tag:good</span><br></pre></td></tr></table></figure>
<p>复杂查询</p>
<p>user:(“xxx” OR “Xxxx”) AND NOT xxx:f?~t*;<br>rtt:&gt;300<br>rtt:[100 to 300]<br><em>exists</em>:user<br><em>missing</em>:user</p>
<p>更复杂的聚集查询<br><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations.html" target="_blank" rel="noopener">https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations.html</a></p>
<p>script 查询<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">doc[&apos;clientip&apos;].value</span><br></pre></td></tr></table></figure></p>
<h2 id="mapping配置"><a href="#mapping配置" class="headerlink" title="mapping配置"></a>mapping配置</h2><ul>
<li>当前字段设置doc_values，不能使用分词，数据直接刷磁盘。</li>
<li>es 不支持索引的 rename mapping更改操作，只能 reindex</li>
<li><p>假如你在基准测试中得到单机写入性能在 10000 eps，那么开启一个副本后所能达到的 eps 就只有 5000 了。还想写入 10000 eps 的话，就需要加一倍机器。</p>
</li>
<li><p>创建一份索引</p>
</li>
</ul>
<p>put /trace_v1<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;settings&quot;: &#123;</span><br><span class="line">    &quot;index.number_of_shards&quot;: 10,</span><br><span class="line">    &quot;index.number_of_replicas&quot;: 1,</span><br><span class="line">    &quot;refresh_interval&quot;: &quot;5s&quot;,</span><br><span class="line">    &quot;index.translog.flush_threshold_ops&quot;: 100000,</span><br><span class="line">    &quot;index.store.compress.stored&quot;: true,</span><br><span class="line">    &quot;index.query.default_field&quot;: &quot;sms&quot;,</span><br><span class="line">    &quot;index.cache.field.type&quot;: &quot;soft&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;mappings&quot;: &#123;</span><br><span class="line">    &quot;_default_&quot;: &#123;</span><br><span class="line">      &quot;_all&quot;: &#123;</span><br><span class="line">        &quot;enabled&quot;: false</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;loadbalancer&quot;: &#123;</span><br><span class="line">      &quot;_ttl&quot;: &#123;</span><br><span class="line">        &quot;enabled&quot;: true,</span><br><span class="line">        &quot;default&quot;: &quot;7d&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;logs&quot;: &#123;</span><br><span class="line">      &quot;properties&quot;: &#123;</span><br><span class="line">        &quot;spendTime&quot;: &#123;</span><br><span class="line">          &quot;type&quot;: &quot;long&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;waitTime&quot;: &#123;</span><br><span class="line">          &quot;type&quot;: &quot;long&quot;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;dynamic_templates&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">          &quot;not_a&quot;: &#123;</span><br><span class="line">            &quot;match&quot;: &quot;event*&quot;,</span><br><span class="line">            &quot;match_mapping_type&quot;: &quot;string&quot;,</span><br><span class="line">            &quot;mapping&quot;: &#123;</span><br><span class="line">              &quot;type&quot;: &quot;string&quot;,</span><br><span class="line">              &quot;index&quot;: &quot;not_analyzed&quot;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          &quot;not_b&quot;: &#123;</span><br><span class="line">            &quot;match&quot;: &quot;num*&quot;,</span><br><span class="line">            &quot;match_mapping_type&quot;: &quot;string&quot;,</span><br><span class="line">            &quot;mapping&quot;: &#123;</span><br><span class="line">              &quot;type&quot;: &quot;long&quot;,</span><br><span class="line">              &quot;index&quot;: &quot;not_analyzed&quot;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          &quot;not_c&quot;: &#123;</span><br><span class="line">            &quot;match&quot;: &quot;double*&quot;,</span><br><span class="line">            &quot;match_mapping_type&quot;: &quot;string&quot;,</span><br><span class="line">            &quot;mapping&quot;: &#123;</span><br><span class="line">              &quot;type&quot;: &quot;double&quot;,</span><br><span class="line">              &quot;index&quot;: &quot;not_analyzed&quot;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          &quot;not_all&quot;: &#123;</span><br><span class="line">            &quot;match&quot;: &quot;*&quot;,</span><br><span class="line">            &quot;match_mapping_type&quot;: &quot;string&quot;,</span><br><span class="line">            &quot;mapping&quot;: &#123;</span><br><span class="line">              &quot;index&quot;: &quot;not_analyzed&quot;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>metrics<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;settings&quot;: &#123;</span><br><span class="line">    &quot;index.number_of_shards&quot;: 10,</span><br><span class="line">    &quot;index.number_of_replicas&quot;: 1,</span><br><span class="line">    &quot;refresh_interval&quot;: &quot;5s&quot;,</span><br><span class="line">    &quot;index.translog.flush_threshold_ops&quot;: 100000,</span><br><span class="line">    &quot;index.store.compress.stored&quot;: true</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;mappings&quot;: &#123;</span><br><span class="line">    &quot;_default_&quot;: &#123;</span><br><span class="line">      &quot;_all&quot;: &#123;</span><br><span class="line">        &quot;enabled&quot;: false</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;loadbalancer&quot;: &#123;</span><br><span class="line">      &quot;_ttl&quot;: &#123;</span><br><span class="line">        &quot;enabled&quot;: true,</span><br><span class="line">        &quot;default&quot;: &quot;7d&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;logs&quot;: &#123;</span><br><span class="line">      &quot;properties&quot;: &#123;</span><br><span class="line">        &quot;host&quot;: &#123;</span><br><span class="line">          &quot;type&quot;: &quot;string&quot;,</span><br><span class="line">          &quot;index&quot;: &quot;not_analyzed&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;message&quot;: &#123;</span><br><span class="line">          &quot;type&quot;: &quot;string&quot;,</span><br><span class="line">          &quot;index&quot;: &quot;not_analyzed&quot;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p><img src="http://img.sandseasoft.com/image/a/8d/00f6416f73b78268990d25073ddce.png" alt><br><img src="http://img.sandseasoft.com/image/4/90/c73ee8e8f0bd11668d0d57ac37fef.png" alt><br><img src="http://img.sandseasoft.com/image/d/40/767720b2fd6a25d217879ded73e76.png" alt><br><img src="http://img.sandseasoft.com/image/2/ae/fe76ca25635f97f221aba2a7ec9ca.png" alt></p>
<ul>
<li>更新索引</li>
</ul>
<p>如上文所说，当索引的 mapping 是无法更新的，只能 rebuild。<br>一般的设计方法是，给某个索引设定别名，重新设计一套索引然后更新别名指向。原先的数据让其同步。</p>
<p>同步数据方法一<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import pyes</span><br><span class="line">conn = pyes.es.ES(&quot;http://10.xx.xx.xx:8305/&quot;)</span><br><span class="line">search = pyes.query.MatchAllQuery().search(bulk_read=1000)</span><br><span class="line">hits = conn.search(search, &apos;store_v1&apos;, &apos;client&apos;, scan=True, scroll=&quot;30m&quot;, model=lambda _,hit: hit)</span><br><span class="line">for hit in hits:</span><br><span class="line">     # print hit</span><br><span class="line">     conn.index(hit[&apos;_source&apos;], &apos;store_v2&apos;, &apos;client&apos;, hit[&apos;_id&apos;], bulk=True)</span><br><span class="line">conn.flush()</span><br></pre></td></tr></table></figure></p>
<p>同步数据方法二<br>logstash 同步<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">input &#123;</span><br><span class="line">  elasticsearch &#123;</span><br><span class="line">    hosts =&gt; [ &quot;192.168.0.2&quot; ]</span><br><span class="line">    port =&gt; &quot;9200&quot;</span><br><span class="line">    index =&gt; &quot;old_index&quot;</span><br><span class="line">    size =&gt; 500</span><br><span class="line">    scroll =&gt; &quot;5m&quot;</span><br><span class="line">    docinfo =&gt; true</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">filter &#123;</span><br><span class="line">  mutate &#123;</span><br><span class="line">    remove_field =&gt; [ &quot;@timestamp&quot;, &quot;@version&quot; ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">output &#123;</span><br><span class="line">  elasticsearch &#123;</span><br><span class="line">    host =&gt; &quot;192.168.0.2&quot;</span><br><span class="line">    port =&gt; &quot;9200&quot;</span><br><span class="line">    protocol =&gt; &quot;http&quot;</span><br><span class="line">    index =&gt; &quot;%&#123;[@metadata][_index]&#125;&quot;</span><br><span class="line">    index_type =&gt; &quot;%&#123;[@metadata][_type]&#125;&quot;</span><br><span class="line">    document_id =&gt; &quot;%&#123;[@metadata][_id]&#125;&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>更新别名</p>
<p>post /_aliases<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;actions&quot;: [</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;remove&quot;: &#123;</span><br><span class="line">        &quot;alias&quot;: &quot;trace&quot;,</span><br><span class="line">        &quot;index&quot;: &quot;trace_v1&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;add&quot;: &#123;</span><br><span class="line">        &quot;alias&quot;: &quot;trace&quot;,</span><br><span class="line">        &quot;index&quot;: &quot;trace_v2&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>设定分词器、过滤器<br>PUT /my_index</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;settings&quot;: &#123;</span><br><span class="line">        &quot;analysis&quot;: &#123;</span><br><span class="line">            &quot;char_filter&quot;: &#123;</span><br><span class="line">                &quot;&amp;_to_and&quot;: &#123;</span><br><span class="line">                    &quot;type&quot;: &quot;mapping&quot;,</span><br><span class="line">                    &quot;mappings&quot;: [&quot;&amp;=&gt; and &quot;]</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;filter&quot;: &#123;</span><br><span class="line">                &quot;my_stopwords&quot;: &#123;</span><br><span class="line">                    &quot;type&quot;: &quot;stop&quot;,</span><br><span class="line">                    &quot;stopwords&quot;: [&quot;the&quot;, &quot;a&quot;]</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;analyzer&quot;: &#123;</span><br><span class="line">                &quot;my_analyzer&quot;: &#123;</span><br><span class="line">                    &quot;type&quot;: &quot;custom&quot;,</span><br><span class="line">                    &quot;char_filter&quot;: [&quot;html_strip&quot;, &quot;&amp;_to_and&quot;],</span><br><span class="line">                    &quot;tokenizer&quot;: &quot;standard&quot;,</span><br><span class="line">                    &quot;filter&quot;: [&quot;lowercase&quot;, &quot;my_stopwords&quot;]</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>完成索引重建</p>
<ul>
<li>删除7天前索引<br>/info  delete<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;match&quot;: &#123;</span><br><span class="line">      &quot;logtime&quot;: &quot;[* to now-7d]&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="插件安装"><a href="#插件安装" class="headerlink" title="插件安装"></a>插件安装</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">bin/plugin install lmenezes/elasticsearch-kopf  </span><br><span class="line">bin/plugin install mobz/elasticsearch-head</span><br></pre></td></tr></table></figure>
<h2 id="同步mysql-database"><a href="#同步mysql-database" class="headerlink" title="同步mysql database"></a>同步mysql database</h2><p><a href="https://github.com/jprante/elasticsearch-jdbc" target="_blank" rel="noopener">https://github.com/jprante/elasticsearch-jdbc</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 解压到 lib 文件夹下</span><br><span class="line">http://xbib.org/repository/org/xbib/elasticsearch/plugin/elasticsearch-river-jdbc/1.5.0.5/elasticsearch-river-jdbc-1.5.0.5-plugin.zip </span><br><span class="line"></span><br><span class="line"># 请求同步数据库, 注意要设定主键，会增量同步</span><br><span class="line">curl -XPUT &apos;http://localhost:9200/_river/who_jdbc_river/_meta&apos; -d &apos;&#123;</span><br><span class="line">    &quot;type&quot;: &quot;jdbc&quot;,</span><br><span class="line">    &quot;jdbc&quot;: &#123;</span><br><span class="line">        &quot;driver&quot;: &quot;com.mysql.jdbc.Driver&quot;,</span><br><span class="line">        &quot;url&quot;: &quot;jdbc:mysql://localhost:3306/profile&quot;,</span><br><span class="line">        &quot;user&quot;: &quot;root&quot;,</span><br><span class="line">        &quot;password&quot;: &quot;root&quot;,</span><br><span class="line">        &quot;sql&quot;: &quot;select id as _id,name,login_name from user&quot;,</span><br><span class="line">        &quot;index&quot;: &quot;profile&quot;,</span><br><span class="line">        &quot;type&quot;: &quot;user&quot;,</span><br><span class="line">        &quot;bulk_size&quot;: 100,</span><br><span class="line">        &quot;max_bulk_requests&quot;: 30,</span><br><span class="line">        &quot;bulk_timeout&quot;: &quot;10s&quot;,</span><br><span class="line">        &quot;flush_interval&quot;: &quot;5s&quot;,</span><br><span class="line">        &quot;schedule&quot;: &quot;0 0-59 0-23 ? * *&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;&apos;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">## 删除相关索引</span><br><span class="line">curl -XDELETE &apos;192.168.1.116:9200/_river/userinfo/_meta&apos;</span><br><span class="line">curl -XDELETE &apos;192.168.1.116:9200/_river/userinfo/_status&apos;</span><br></pre></td></tr></table></figure>
<h2 id="运维索引Curator"><a href="#运维索引Curator" class="headerlink" title="运维索引Curator"></a>运维索引Curator</h2><p><a href="https://www.elastic.co/guide/en/elasticsearch/client/curator/current/index.html" target="_blank" rel="noopener">https://www.elastic.co/guide/en/elasticsearch/client/curator/current/index.html</a><br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pip install elasticsearch-curator</span><br><span class="line">curator delete/show indices --index trace --older-than 7 --time-unit days --timestring %Y.%m.%d</span><br></pre></td></tr></table></figure></p>
<h2 id="备份恢复"><a href="#备份恢复" class="headerlink" title="备份恢复"></a>备份恢复</h2><p>参考</p>
<p><a href="http://keenwon.com/1393.html" target="_blank" rel="noopener">http://keenwon.com/1393.html</a><br><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/backup.html" target="_blank" rel="noopener">https://www.elastic.co/guide/en/elasticsearch/reference/current/backup.html</a><br><a href="http://kibana.logstash.es/" target="_blank" rel="noopener">http://kibana.logstash.es/</a></p>
<h2 id="集群控制"><a href="#集群控制" class="headerlink" title="集群控制"></a>集群控制</h2><p>POST _cluster/reroute<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;commands&quot;: [</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;move&quot;: &#123;</span><br><span class="line">        &quot;index&quot;: &quot;test&quot;,</span><br><span class="line">        &quot;shard&quot;: 0,</span><br><span class="line">        &quot;from_node&quot;: &quot;node1&quot;,</span><br><span class="line">        &quot;to_node&quot;: &quot;node2&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;cancel&quot;: &#123;</span><br><span class="line">        &quot;index&quot;: &quot;test&quot;,</span><br><span class="line">        &quot;shard&quot;: 0,</span><br><span class="line">        &quot;node&quot;: &quot;node1&quot;,</span><br><span class="line">        &quot;allow_primary&quot;: true</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;allocate&quot;: &#123;</span><br><span class="line">        &quot;index&quot;: &quot;test&quot;,</span><br><span class="line">        &quot;shard&quot;: 1,</span><br><span class="line">        &quot;node&quot;: &quot;node3&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="插件安装-1"><a href="#插件安装-1" class="headerlink" title="插件安装"></a>插件安装</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">bin/plugin install lmenezes/elasticsearch-kopf</span><br><span class="line">bin/plugin install head</span><br><span class="line">bin/plugin install elasticsearch/watcher/latest</span><br></pre></td></tr></table></figure>
<h2 id="TODO"><a href="#TODO" class="headerlink" title="TODO"></a>TODO</h2><p>白名单权限http-basic 不支持2.1版本，需要做插件兼容</p>
<h2 id="配置详解"><a href="#配置详解" class="headerlink" title="配置详解"></a>配置详解</h2><p><a href="http://kibana.logstash.es/" target="_blank" rel="noopener">http://kibana.logstash.es/</a></p>
<p>elastalert<br>packetbeat</p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>store</tag>
      </tags>
  </entry>
  <entry>
    <title>API-Nginx-Lua</title>
    <url>/2016/02/26/0109-API-Nginx-Lua/</url>
    <content><![CDATA[<h1 id="发行版"><a href="#发行版" class="headerlink" title="发行版"></a>发行版</h1><ul>
<li>Tengine <a href="https://github.com/alibaba/tengine" target="_blank" rel="noopener">https://github.com/alibaba/tengine</a></li>
<li>OpenResty <a href="http://openresty.org/cn/installation.html" target="_blank" rel="noopener">http://openresty.org/cn/installation.html</a></li>
</ul>
<h1 id="API-GATEWAY"><a href="#API-GATEWAY" class="headerlink" title="API-GATEWAY"></a>API-GATEWAY</h1><ul>
<li><a href="https://github.com/sumory/orange" target="_blank" rel="noopener">https://github.com/sumory/orange</a></li>
<li><a href="https://github.com/Mashape/kong" target="_blank" rel="noopener">https://github.com/Mashape/kong</a></li>
</ul>
<h1 id="编译安装"><a href="#编译安装" class="headerlink" title="编译安装"></a>编译安装</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line">ln -s &#123;绝对路径&#125; /usr/bin/nginx</span><br><span class="line">nginx</span><br><span class="line">nginx -s stop/reload/start</span><br></pre></td></tr></table></figure>
<h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ps  -ef | grep nginx</span><br><span class="line">nginx -s start</span><br><span class="line">nginx -s reload</span><br><span class="line"># 查看配置信息</span><br><span class="line">nginx -t </span><br><span class="line"># 查看版本</span><br><span class="line">nginx -v</span><br></pre></td></tr></table></figure>
<h1 id="正则"><a href="#正则" class="headerlink" title="正则"></a>正则</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">location  = / &#123;</span><br><span class="line">  #  精确匹配 / ，主机名后面不能带任何字符串</span><br><span class="line">  [ configuration A ] </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">location  / &#123;</span><br><span class="line">  #  因为所有的地址都以 / 开头，所以这条规则将匹配到所有请求</span><br><span class="line">  #  但是正则和最长字符串会优先匹配</span><br><span class="line">  [ configuration B ] </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">location /documents/ &#123;</span><br><span class="line">  #  匹配任何以 /documents/ 开头的地址，匹配符合以后，还要继续往下搜索</span><br><span class="line">  #  只有后面的正则表达式没有匹配到时，这一条才会采用这一条</span><br><span class="line">  [ configuration C ] </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">location ~ /documents/Abc &#123;</span><br><span class="line">  #  匹配任何以 /documents/ 开头的地址，匹配符合以后，还要继续往下搜索</span><br><span class="line">  #  只有后面的正则表达式没有匹配到时，这一条才会采用这一条</span><br><span class="line">  [ configuration CC ] </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">location ^~ /images/ &#123;</span><br><span class="line">  #  匹配任何以 /images/ 开头的地址，匹配符合以后，停止往下搜索正则，采用这一条。</span><br><span class="line">  [ configuration D ] </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">location ~* \.(gif|jpg|jpeg)$ &#123;</span><br><span class="line">  #  匹配所有以 gif,jpg或jpeg 结尾的请求</span><br><span class="line">  #  然而，所有请求 /images/ 下的图片会被 config D 处理，因为 ^~ 到达不了这一条正则</span><br><span class="line">  [ configuration E ] </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">location /images/ &#123;</span><br><span class="line">  #  字符匹配到 /images/，继续往下，会发现 ^~ 存在</span><br><span class="line">  [ configuration F ] </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">location /images/abc &#123;</span><br><span class="line">  #  最长字符匹配到 /images/abc，继续往下，会发现 ^~ 存在</span><br><span class="line">  #  F与G的放置顺序是没有关系的</span><br><span class="line">  [ configuration G ] </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">location ~ /images/abc/ &#123;</span><br><span class="line">  #  只有去掉 config D 才有效：先最长匹配 config G 开头的地址，继续往下搜索，匹配到这一条正则，采用</span><br><span class="line">    [ configuration H ] </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">location ~* /js/.*/\.js</span><br></pre></td></tr></table></figure>
<h1 id="配置Nginx-conf"><a href="#配置Nginx-conf" class="headerlink" title="配置Nginx.conf"></a>配置Nginx.conf</h1><h2 id="自用配置"><a href="#自用配置" class="headerlink" title="自用配置"></a>自用配置</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name zuoyun.me;</span><br><span class="line">    rewrite ^(.*)$  https://$host$1 permanent;</span><br><span class="line">    # return 301 https://$host$request_uri;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">server&#123;</span><br><span class="line">    listen              443 ssl spdy;</span><br><span class="line">    server_name zuoyun.me;</span><br><span class="line">    ssl on;</span><br><span class="line">    ssl_certificate     /root/cert/1_zuoyun.me_bundle.crt;</span><br><span class="line">    ssl_certificate_key /root/cert/2_zuoyun.me.key;</span><br><span class="line"></span><br><span class="line">    ssl_session_cache    shared:SSL:10m;</span><br><span class="line">    ssl_session_timeout  10m;</span><br><span class="line"></span><br><span class="line">    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;</span><br><span class="line">    ssl_stapling on;</span><br><span class="line"></span><br><span class="line">    ssl_ciphers  HIGH:!aNULL:!MD5;</span><br><span class="line">    ssl_prefer_server_ciphers  on;</span><br><span class="line"></span><br><span class="line">    add_header Strict-Transport-Security &quot;max-age=63072000; includeSubdomains; preload&quot;;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        proxy_pass http://localhost:2368;</span><br><span class="line">        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">        proxy_set_header Host $http_host;</span><br><span class="line">        proxy_set_header X-Forwarded-Proto $scheme;</span><br><span class="line">        proxy_buffering off;</span><br><span class="line">        #  客户端上传文件大小</span><br><span class="line">        client_max_body_size    10m;</span><br><span class="line">        #  限流</span><br><span class="line">        limit_rate 300k;</span><br><span class="line">        #  限制每个 ip 最大连接数</span><br><span class="line">        limit_conn ctohome_zone 2;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">add_header &apos;Access-Control-Allow-Origin&apos; &apos;*&apos;;</span><br><span class="line">add_header &apos;Access-Control-Allow-Credentials&apos; &apos;true&apos;;</span><br><span class="line">add_header &apos;Access-Control-Allow-Methods&apos; &apos;*&apos;;</span><br><span class="line"></span><br><span class="line">add_header Access-Control-Allow-Origin *;</span><br><span class="line">location / &#123;</span><br><span class="line">    if ($request_method = &apos;OPTIONS&apos;) &#123; </span><br><span class="line">        add_header Access-Control-Allow-Origin *; </span><br><span class="line">        add_header Access-Control-Allow-Methods GET,POST,PUT,DELETE,OPTIONS;</span><br><span class="line">        return 204; </span><br><span class="line">    &#125;</span><br><span class="line">    index index.php;</span><br><span class="line">    try_files $uri @rewriteapp;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="详解Nginx-conf"><a href="#详解Nginx-conf" class="headerlink" title="详解Nginx.conf"></a>详解Nginx.conf</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 运行用户</span><br><span class="line">user www-data;    </span><br><span class="line"># 启动进程,通常设置成和cpu的数量相等</span><br><span class="line">worker_processes  1;</span><br><span class="line"></span><br><span class="line"># 全局错误日志及PID文件</span><br><span class="line">error_log  /var/log/nginx/error.log;</span><br><span class="line">pid        /var/run/nginx.pid;</span><br><span class="line"></span><br><span class="line"># 工作模式及连接数上限</span><br><span class="line">events &#123;</span><br><span class="line">    use   epoll;             # epoll是多路复用IO(I/O Multiplexing)中的一种方式,但是仅用于linux2.6以上内核,可以大大提高nginx的性能</span><br><span class="line">    worker_connections  1024;# 单个后台worker process进程的最大并发链接数</span><br><span class="line">    #  multi_accept on; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 设定http服务器，利用它的反向代理功能提供负载均衡支持</span><br><span class="line">http &#123;</span><br><span class="line">     # 设定mime类型,类型由mime.type文件定义</span><br><span class="line">    include       /etc/nginx/mime.types;</span><br><span class="line">    default_type  application/octet-stream;</span><br><span class="line">    # 设定日志格式</span><br><span class="line">    access_log    /var/log/nginx/access.log;</span><br><span class="line"></span><br><span class="line">    # sendfile 指令指定 nginx 是否调用 sendfile 函数（zero copy 方式）来输出文件，对于普通应用，</span><br><span class="line">    # 必须设为 on,如果用来进行下载等应用磁盘IO重负载应用，可设置为 off，以平衡磁盘与网络I/O处理速度，降低系统的uptime.</span><br><span class="line">    sendfile        on;</span><br><span class="line">    # tcp_nopush     on;</span><br><span class="line"></span><br><span class="line">    # 连接超时时间</span><br><span class="line">    # keepalive_timeout  0;</span><br><span class="line">    keepalive_timeout  65;</span><br><span class="line">    tcp_nodelay        on;</span><br><span class="line">    </span><br><span class="line">    # 开启gzip压缩</span><br><span class="line">    gzip  on;</span><br><span class="line">    gzip_disable &quot;MSIE [1-6]\.(?!.*SV1)&quot;;</span><br><span class="line"></span><br><span class="line">    # 设定请求缓冲</span><br><span class="line">    client_header_buffer_size    1k;</span><br><span class="line">    large_client_header_buffers  4 4k;</span><br><span class="line"></span><br><span class="line">    include /etc/nginx/conf.d/*.conf;</span><br><span class="line">    include /etc/nginx/sites-enabled/*;</span><br><span class="line"></span><br><span class="line">    # 设定负载均衡的服务器列表</span><br><span class="line">     upstream mysvr &#123;</span><br><span class="line">    # weigth参数表示权值，权值越高被分配到的几率越大</span><br><span class="line">    # 本机上的Squid开启3128端口</span><br><span class="line">    server 192.168.8.1:3128 weight=5;</span><br><span class="line">    server 192.168.8.2:80  weight=1;</span><br><span class="line">    server 192.168.8.3:80  weight=6;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   server &#123;</span><br><span class="line">    # 侦听80端口</span><br><span class="line">        listen       80;</span><br><span class="line">        # 定义使用www.xx.com访问</span><br><span class="line">        server_name  www.xx.com;</span><br><span class="line"></span><br><span class="line">        # 设定本虚拟主机的访问日志</span><br><span class="line">        access_log  logs/www.xx.com.access.log  main;</span><br><span class="line"></span><br><span class="line">    # 默认请求</span><br><span class="line">    location / &#123;</span><br><span class="line">          root   /root;      # 定义服务器的默认网站根目录位置</span><br><span class="line">          index index.php index.html index.htm;   # 定义首页索引文件的名称</span><br><span class="line"></span><br><span class="line">          fastcgi_pass  www.xx.com;</span><br><span class="line">         fastcgi_param  SCRIPT_FILENAME  $document_root/$fastcgi_script_name; </span><br><span class="line">          include /etc/nginx/fastcgi_params;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    #  定义错误提示页面</span><br><span class="line">    error_page   500 502 503 504 /50x.html;  </span><br><span class="line">        location = /50x.html &#123;</span><br><span class="line">        root   /root;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    # 静态文件，nginx自己处理</span><br><span class="line">    location ~ ^/(images|javascript|js|css|flash|media|static)/ &#123;</span><br><span class="line">        root /var/www/virtual/htdocs;</span><br><span class="line">        # 过期30天，静态文件不怎么更新，过期可以设大一点，如果频繁更新，则可以设置得小一点。</span><br><span class="line">        expires 30d;</span><br><span class="line">    &#125;</span><br><span class="line">    # PHP 脚本请求全部转发到 FastCGI处理. 使用FastCGI默认配置.</span><br><span class="line">    location ~ \.php$ &#123;</span><br><span class="line">        root /root;</span><br><span class="line">        fastcgi_pass 127.0.0.1:9000;</span><br><span class="line">        fastcgi_index index.php;</span><br><span class="line">        fastcgi_param SCRIPT_FILENAME /home/www/www$fastcgi_script_name;</span><br><span class="line">        include fastcgi_params;</span><br><span class="line">    &#125;</span><br><span class="line">    # 设定查看Nginx状态的地址</span><br><span class="line">    location /NginxStatus &#123;</span><br><span class="line">        stub_status            on;</span><br><span class="line">        access_log              on;</span><br><span class="line">        auth_basic              &quot;NginxStatus&quot;;</span><br><span class="line">        auth_basic_user_file  conf/htpasswd;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location ~* \.(gif|jpg|png)$ &#123;</span><br><span class="line">       valid_referers none blocked server_names;</span><br><span class="line">       if ($invalid_referer) &#123;</span><br><span class="line">          return 403;</span><br><span class="line">       &#125;</span><br><span class="line">     &#125;</span><br><span class="line">     </span><br><span class="line">    # 禁止访问 .htxxx 文件</span><br><span class="line">    location ~ /\.ht &#123;</span><br><span class="line">        deny all;</span><br><span class="line">    &#125;</span><br><span class="line">     </span><br><span class="line">     &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="负载均衡配置"><a href="#负载均衡配置" class="headerlink" title="负载均衡配置"></a>负载均衡配置</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 设定http服务器，利用它的反向代理功能提供负载均衡支持</span><br><span class="line">http &#123;</span><br><span class="line">    # 省略上文有的一些配置节点</span><br><span class="line">    # ....</span><br><span class="line">    # 设定负载均衡的服务器列表</span><br><span class="line">     upstream mysvr &#123;</span><br><span class="line">    # weigth参数表示权值，权值越高被分配到的几率越大</span><br><span class="line">    server 192.168.8.1x:3128 weight=5;# 本机上的Squid开启3128端口</span><br><span class="line">    server 192.168.8.2x:80  weight=1;</span><br><span class="line">    server 192.168.8.3x:80  weight=6;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">   # 第一个虚拟服务器</span><br><span class="line">   server &#123;</span><br><span class="line">    # 侦听192.168.8.x的80端口</span><br><span class="line">        listen       80;</span><br><span class="line">        server_name  192.168.8.x;</span><br><span class="line"></span><br><span class="line">      # 对aspx后缀的进行负载均衡请求</span><br><span class="line">    location ~ .*\.aspx$ &#123;</span><br><span class="line"></span><br><span class="line">         root   /root;      # 定义服务器的默认网站根目录位置</span><br><span class="line">          index index.php index.html index.htm;   # 定义首页索引文件的名称</span><br><span class="line"></span><br><span class="line">          proxy_pass  http://mysvr ;# 请求转向mysvr 定义的服务器列表</span><br><span class="line"></span><br><span class="line">          # 以下是一些反向代理的配置可删除.</span><br><span class="line"></span><br><span class="line">          proxy_redirect off;</span><br><span class="line"></span><br><span class="line">          # 后端的Web服务器可以通过X-Forwarded-For获取用户真实IP</span><br><span class="line">          proxy_set_header Host $host;</span><br><span class="line">          proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">          client_max_body_size 10m;    # 允许客户端请求的最大单文件字节数</span><br><span class="line">          client_body_buffer_size 128k;  # 缓冲区代理缓冲用户端请求的最大字节数，</span><br><span class="line">          proxy_connect_timeout 90;  # nginx跟后端服务器连接超时时间(代理连接超时)</span><br><span class="line">          proxy_send_timeout 90;        # 后端服务器数据回传时间(代理发送超时)</span><br><span class="line">          proxy_read_timeout 90;         # 连接成功后，后端服务器响应时间(代理接收超时)</span><br><span class="line">          proxy_buffer_size 4k;             # 设置代理服务器（nginx）保存用户头信息的缓冲区大小</span><br><span class="line">          proxy_buffers 4 32k;               # proxy_buffers缓冲区，网页平均在32k以下的话，这样设置</span><br><span class="line">          proxy_busy_buffers_size 64k;    # 高负荷下缓冲大小（proxy_buffers*2）</span><br><span class="line">          proxy_temp_file_write_size 64k;  # 设定缓存文件夹大小，大于这个值，将从upstream服务器传</span><br><span class="line"></span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">     &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="OpenResty-相关"><a href="#OpenResty-相关" class="headerlink" title="OpenResty 相关"></a>OpenResty 相关</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">location / &#123;</span><br><span class="line">    content_by_lua_block&#123;</span><br><span class="line">      ngx.say(&quot;hello world&quot;)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">  listen       80;</span><br><span class="line">  server_name www.baidu.com;</span><br><span class="line">  location / &#123;</span><br><span class="line">     auth_basic &quot;secret&quot;;</span><br><span class="line">     auth_basic_user_file /data/nginx/db/passwd.db;</span><br><span class="line">     proxy_pass http://localhost:5601;</span><br><span class="line">     proxy_set_header Host $host:5601;</span><br><span class="line">     proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">     proxy_set_header Via &quot;nginx&quot;;</span><br><span class="line">  &#125;</span><br><span class="line">  access_log off;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p>1.<a href="http://www.cnblogs.com/xiaogangqq123/archive/2011/03/02/1969006.html" target="_blank" rel="noopener">http://www.cnblogs.com/xiaogangqq123/archive/2011/03/02/1969006.html</a><br>2.<a href="https://segmentfault.com/a/1190000000447180" target="_blank" rel="noopener">https://segmentfault.com/a/1190000000447180</a><br>3.<a href="https://segmentfault.com/a/1190000002797606" target="_blank" rel="noopener">https://segmentfault.com/a/1190000002797606</a><br>4.<a href="https://segmentfault.com/a/1190000004688125" target="_blank" rel="noopener">https://segmentfault.com/a/1190000004688125</a><br>5.<a href="https://www.gitbook.com/book/moonbingbing/openresty-best-practices" target="_blank" rel="noopener">https://www.gitbook.com/book/moonbingbing/openresty-best-practices</a><br>6.<a href="https://wenjs.me/p/note-of-nginx-configure" target="_blank" rel="noopener">https://wenjs.me/p/note-of-nginx-configure</a></p>
<h1 id="扩展"><a href="#扩展" class="headerlink" title="扩展"></a>扩展</h1><h2 id="API-GateWay"><a href="#API-GateWay" class="headerlink" title="API-GateWay"></a>API-GateWay</h2><p>1.<a href="https://github.com/sumory/orange" target="_blank" rel="noopener">https://github.com/sumory/orange</a><br>2.<a href="https://github.com/Mashape/kong" target="_blank" rel="noopener">https://github.com/Mashape/kong</a></p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>devops</tag>
      </tags>
  </entry>
  <entry>
    <title>Oauth Shiro Usage</title>
    <url>/2016/03/10/0120-Oauth%20Shiro%20Usage/</url>
    <content><![CDATA[<h3 id="官网"><a href="#官网" class="headerlink" title="官网"></a>官网</h3><p><a href="http://shiro.apache.org/" target="_blank" rel="noopener">http://shiro.apache.org/</a></p>
<h3 id="架构"><a href="#架构" class="headerlink" title="架构"></a>架构</h3><p><img src="http://img.sandseasoft.com/image/e/88/be4e36b79102864554476e69c4483.png" alt></p>
<p><img src="http://img.blog.csdn.net/20160114233958301" alt></p>
<ul>
<li>Subject 当前用户操作 </li>
<li>SecurityManager 用于管理所有的Subject </li>
<li>Realms 用于进行权限信息的验证，也是我们需要自己实现的。<br>对象解释</li>
</ul>
<ul>
<li>Authentication：身份认证/登录，验证用户是不是拥有相应的身份；</li>
<li>Authorization：授权，即权限验证，验证某个已认证的用户是否拥有某个权限；即判断用户是否能做事情，常见的如：验证某个用户是否拥有某个角色。或者细粒度的验证某个用户对某个资源是否具有某个权限；</li>
<li>Session Manager：会话管理，即用户登录后就是一次会话，在没有退出之前，它的所有信息都在会话中；会话可以是普通JavaSE环境的，也可以是如Web环境的；</li>
<li>Cryptography：加密，保护数据的安全性，如密码加密存储到数据库，而不是明文存储；<br>Web Support：Web支持，可以非常容易的集成到Web环境；</li>
<li>Caching：缓存，比如用户登录后，其用户信息、拥有的角色/权限不必每次去查，这样可以提高效率；</li>
<li>Concurrency：shiro支持多线程应用的并发验证，即如在一个线程中开启另一个线程，能把权限自动传播过去；</li>
<li>Testing：提供测试支持；</li>
<li>Run As：允许一个用户假装为另一个用户（如果他们允许）的身份进行访问；</li>
<li>Remember Me：记住我，这个是非常常见的功能，即一次登录后，下次再来的话不用登录了。</li>
</ul>
<h3 id="RBAC模型"><a href="#RBAC模型" class="headerlink" title="RBAC模型"></a>RBAC模型</h3><p>角色扮演的权限模型</p>
<h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p><a href="http://shiro.apache.org/10-minute-tutorial.html" target="_blank" rel="noopener">http://shiro.apache.org/10-minute-tutorial.html</a></p>
<p>集成Shiro核心内容:</p>
<ol>
<li>ShiroFilterFactory，Shiro过滤器工程类，具体的实现类是：<br>ShiroFilterFactoryBean，此实现类是依赖于SecurityManager安全管理器。主要配置Filter就好。</li>
<li>SecurityManager，Shiro的安全管理，主要是身份认证的管理，缓存管理，cookie管理，所以在实际开发中我们主要是和SecurityManager进行打交道的。</li>
<li>Realm,用于身份信息权限信息的验证。开发时集成AuthorizingRealm，重写两个方法:doGetAuthenticationInfo(获取即将需要认真的信息)、doGetAuthorizationInfo(获取通过认证后的权限信息)。</li>
<li>HashedCredentialsMatcher，凭证匹配器，用于告诉Shiro在认证时通过什么方式(算法)来匹配密码。默认(storedCredentialsHexEncoded=false)Base64编码，可以修改为(storedCredentialsHexEncoded=true)Hex编码。</li>
<li>LifecycleBeanPostProcessor，Shiro生命周期处理器，保证实现了Shiro内部lifecycle函数的bean执行。<br>开启Shiro的注解功能(如@RequiresRoles,@RequiresPermissions),需借助SpringAOP扫描使用Shiro注解的类,并在必要时进行安全逻辑验证，需要配置两个bean(DefaultAdvisorAutoProxyCreator(可选)和AuthorizationAttributeSourceAdvisor)实现此功能。<br>6 . 其它的就是缓存管理，记住登录、验证码、分布式系统共享Session之类的，这些大部分都是需要自己进行的实现，其中缓存管理，记住登录比较简单实现，并需要注入到SecurityManager让Shiro的安全管理器进行管理就好了。</li>
</ol>
<h3 id="依赖关系"><a href="#依赖关系" class="headerlink" title="依赖关系"></a>依赖关系</h3><p><a href="http://shiro.apache.org/download.html" target="_blank" rel="noopener">http://shiro.apache.org/download.html</a></p>
<h3 id="表字段"><a href="#表字段" class="headerlink" title="表字段"></a>表字段</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">USE `test`;</span><br><span class="line"></span><br><span class="line">/*Table structure for table `t_permission` */</span><br><span class="line"></span><br><span class="line">DROP TABLE IF EXISTS `t_permission`;</span><br><span class="line"></span><br><span class="line">CREATE TABLE `t_permission` (</span><br><span class="line">  `id` int(11) NOT NULL AUTO_INCREMENT,</span><br><span class="line">  `permissionname` varchar(32) DEFAULT NULL,</span><br><span class="line">  `role_id` int(11) DEFAULT NULL,</span><br><span class="line">  KEY `id` (`id`)</span><br><span class="line">) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8;</span><br><span class="line"></span><br><span class="line">/*Data for the table `t_permission` */</span><br><span class="line"></span><br><span class="line">insert  into `t_permission`(`id`,`permissionname`,`role_id`) values (1,&apos;add&apos;,2),(2,&apos;del&apos;,1),(3,&apos;update&apos;,2),(4,&apos;query&apos;,3),(5,&apos;user:query&apos;,1),(6,&apos;user:edit&apos;,2);</span><br><span class="line"></span><br><span class="line">/*Table structure for table `t_role` */</span><br><span class="line"></span><br><span class="line">DROP TABLE IF EXISTS `t_role`;</span><br><span class="line"></span><br><span class="line">CREATE TABLE `t_role` (</span><br><span class="line">  `id` int(11) NOT NULL AUTO_INCREMENT,</span><br><span class="line">  `rolename` varchar(32) DEFAULT NULL,</span><br><span class="line">  KEY `id` (`id`)</span><br><span class="line">) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8;</span><br><span class="line"></span><br><span class="line">/*Data for the table `t_role` */</span><br><span class="line"></span><br><span class="line">insert  into `t_role`(`id`,`rolename`) values (1,&apos;admin&apos;),(2,&apos;manager&apos;),(3,&apos;normal&apos;);</span><br><span class="line"></span><br><span class="line">/*Table structure for table `t_user` */</span><br><span class="line"></span><br><span class="line">DROP TABLE IF EXISTS `t_user`;</span><br><span class="line"></span><br><span class="line">CREATE TABLE `t_user` (</span><br><span class="line">  `id` int(11) NOT NULL AUTO_INCREMENT,</span><br><span class="line">  `username` varchar(32) DEFAULT NULL,</span><br><span class="line">  `password` varchar(32) DEFAULT NULL,</span><br><span class="line">  PRIMARY KEY (`id`)</span><br><span class="line">) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8;</span><br><span class="line"></span><br><span class="line">/*Data for the table `t_user` */</span><br><span class="line"></span><br><span class="line">insert  into `t_user`(`id`,`username`,`password`) values (1,&apos;tom&apos;,&apos;123456&apos;),(2,&apos;jack&apos;,&apos;123456&apos;),(3,&apos;rose&apos;,&apos;123456&apos;);</span><br><span class="line"></span><br><span class="line">/*Table structure for table `t_user_role` */</span><br><span class="line"></span><br><span class="line">DROP TABLE IF EXISTS `t_user_role`;</span><br><span class="line"></span><br><span class="line">CREATE TABLE `t_user_role` (</span><br><span class="line">  `user_id` int(11) DEFAULT NULL,</span><br><span class="line">  `role_id` int(11) DEFAULT NULL</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">insert  into `t_user_role`(`user_id`,`role_id`) values (1,1),(1,3),(2,2),(2,3),(3,3);</span><br></pre></td></tr></table></figure>
<p>ShiroConfiguration.java<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@Configuration</span><br><span class="line">public class ShiroConfiguration &#123;</span><br><span class="line"></span><br><span class="line">  private static final Logger logger = LoggerFactory.getLogger(ShiroConfiguration.class);</span><br><span class="line"></span><br><span class="line">  /**</span><br><span class="line">   * Shiro的Web过滤器Factory 命名:shiroFilter&lt;br /&gt;</span><br><span class="line">   */</span><br><span class="line">  @Bean(name = &quot;shiroFilter&quot;)</span><br><span class="line">  public ShiroFilterFactoryBean shiroFilterFactoryBean(</span><br><span class="line">      org.apache.shiro.web.mgt.DefaultWebSecurityManager securityManager) &#123;</span><br><span class="line">    logger.info(&quot;注入Shiro的Web过滤器--&gt;shiroFilter&quot;, ShiroFilterFactoryBean.class);</span><br><span class="line">    ShiroFilterFactoryBean shiroFilterFactoryBean = new ShiroFilterFactoryBean();</span><br><span class="line"></span><br><span class="line">    //Shiro的核心安全接口,这个属性是必须的</span><br><span class="line">    shiroFilterFactoryBean.setSecurityManager(securityManager);</span><br><span class="line">    //要求登录时的链接(可根据项目的URL进行替换),非必须的属性,默认会自动寻找Web工程根目录下的&quot;/login.jsp&quot;页面</span><br><span class="line">    shiroFilterFactoryBean.setLoginUrl(&quot;/login&quot;);</span><br><span class="line">    //登录成功后要跳转的连接,逻辑也可以自定义，例如返回上次请求的页面</span><br><span class="line">    shiroFilterFactoryBean.setSuccessUrl(&quot;/index&quot;);</span><br><span class="line">    //用户访问未对其授权的资源时,所显示的连接</span><br><span class="line">    shiroFilterFactoryBean.setUnauthorizedUrl(&quot;/pages/403&quot;);</span><br><span class="line">        /*定义shiro过滤器,例如实现自定义的FormAuthenticationFilter，需要继承FormAuthenticationFilter</span><br><span class="line">        **本例中暂不自定义实现，在下一节实现验证码的例子中体现</span><br><span class="line">        */</span><br><span class="line"></span><br><span class="line">        /*定义shiro过滤链  Map结构</span><br><span class="line">         * Map中key(xml中是指value值)的第一个&apos;/&apos;代表的路径是相对于HttpServletRequest.getContextPath()的值来的</span><br><span class="line">         * anon：它对应的过滤器里面是空的,什么都没做,这里.do和.jsp后面的*表示参数,比方说login.jsp?main这种</span><br><span class="line">         * authc：该过滤器下的页面必须验证后才能访问,它是Shiro内置的一个拦截器org.apache.shiro.web.filter.authc.FormAuthenticationFilter</span><br><span class="line">         */</span><br><span class="line">    Map&lt;String, String&gt; filterChainDefinitionMap = new LinkedHashMap&lt;String, String&gt;();</span><br><span class="line">    // 配置退出过滤器,其中的具体的退出代码Shiro已经替我们实现了</span><br><span class="line">    filterChainDefinitionMap.put(&quot;/logout&quot;, &quot;logout&quot;);</span><br><span class="line"></span><br><span class="line">    // &lt;!-- 过滤链定义，从上向下顺序执行，一般将 /**放在最为下边 --&gt;:这是一个坑呢，一不小心代码就不好使了;</span><br><span class="line">    // &lt;!-- authc:所有url都必须认证通过才可以访问; anon:所有url都都可以匿名访问--&gt;</span><br><span class="line">    filterChainDefinitionMap.put(&quot;/webui/**&quot;, &quot;anon&quot;);</span><br><span class="line">    filterChainDefinitionMap.put(&quot;/webjars/**&quot;, &quot;anon&quot;);</span><br><span class="line">    filterChainDefinitionMap.put(&quot;/login&quot;, &quot;anon&quot;);</span><br><span class="line">    filterChainDefinitionMap.put(&quot;/**&quot;, &quot;authc&quot;);</span><br><span class="line"></span><br><span class="line">    shiroFilterFactoryBean.setFilterChainDefinitionMap(filterChainDefinitionMap);</span><br><span class="line"></span><br><span class="line">    return shiroFilterFactoryBean;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  /**</span><br><span class="line">   * 不指定名字的话，自动创建一个方法名第一个字母小写的bean</span><br><span class="line">   */</span><br><span class="line">  @Bean</span><br><span class="line">  public DefaultWebSecurityManager securityManager() &#123;</span><br><span class="line">    logger.info(&quot;注入Shiro的Web过滤器--&gt;securityManager&quot;, ShiroFilterFactoryBean.class);</span><br><span class="line">    DefaultWebSecurityManager securityManager = new DefaultWebSecurityManager();</span><br><span class="line">    securityManager.setRealm(userRealm());</span><br><span class="line">    return securityManager;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  /**</span><br><span class="line">   * Shiro Realm 继承自AuthorizingRealm的自定义Realm,即指定Shiro验证用户登录的类为自定义的</span><br><span class="line">   */</span><br><span class="line">  @Bean</span><br><span class="line">  public UserRealm userRealm() &#123;</span><br><span class="line">    UserRealm userRealm = new UserRealm();</span><br><span class="line">    //告诉realm,使用credentialsMatcher加密算法类来验证密文</span><br><span class="line">    userRealm.setCredentialsMatcher(new SimpleCredentialsMatcher());</span><br><span class="line">    userRealm.setCachingEnabled(false);</span><br><span class="line">    return userRealm;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  /**</span><br><span class="line">   * 凭证匹配器 （由于我们的密码校验交给Shiro的SimpleAuthenticationInfo进行处理了 所以我们需要修改下doGetAuthenticationInfo中的代码; ） 可以扩展凭证匹配器，实现</span><br><span class="line">   * 输入密码错误次数后锁定等功能，下一次</span><br><span class="line">   */</span><br><span class="line">  @Bean(name = &quot;credentialsMatcher&quot;)</span><br><span class="line">  public HashedCredentialsMatcher hashedCredentialsMatcher() &#123;</span><br><span class="line">    HashedCredentialsMatcher hashedCredentialsMatcher = new HashedCredentialsMatcher();</span><br><span class="line">    return hashedCredentialsMatcher;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  /**</span><br><span class="line">   * Shiro生命周期处理器</span><br><span class="line">   */</span><br><span class="line">  @Bean</span><br><span class="line">  public LifecycleBeanPostProcessor lifecycleBeanPostProcessor() &#123;</span><br><span class="line">    return new LifecycleBeanPostProcessor();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  /**</span><br><span class="line">   * 开启Shiro的注解(如@RequiresRoles,@RequiresPermissions),需借助SpringAOP扫描使用Shiro注解的类,并在必要时进行安全逻辑验证</span><br><span class="line">   * 配置以下两个bean(DefaultAdvisorAutoProxyCreator(可选)和AuthorizationAttributeSourceAdvisor)即可实现此功能</span><br><span class="line">   */</span><br><span class="line">  @Bean</span><br><span class="line">  @DependsOn(&#123;&quot;lifecycleBeanPostProcessor&quot;&#125;)</span><br><span class="line">  public DefaultAdvisorAutoProxyCreator advisorAutoProxyCreator() &#123;</span><br><span class="line">    DefaultAdvisorAutoProxyCreator advisorAutoProxyCreator = new DefaultAdvisorAutoProxyCreator();</span><br><span class="line">    advisorAutoProxyCreator.setProxyTargetClass(true);</span><br><span class="line">    return advisorAutoProxyCreator;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  @Bean</span><br><span class="line">  public AuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor() &#123;</span><br><span class="line">    AuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor = new AuthorizationAttributeSourceAdvisor();</span><br><span class="line">    authorizationAttributeSourceAdvisor.setSecurityManager(securityManager());</span><br><span class="line">    return authorizationAttributeSourceAdvisor;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>UserRealm.java<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public class UserRealm extends AuthorizingRealm &#123;</span><br><span class="line"></span><br><span class="line">  @Override</span><br><span class="line">  protected AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals) &#123;</span><br><span class="line">    String currentLoginName = (String) principals.getPrimaryPrincipal();</span><br><span class="line">    List&lt;String&gt; userRoles = new ArrayList&lt;String&gt;();</span><br><span class="line">    List&lt;String&gt; userPermissions = new ArrayList&lt;String&gt;();</span><br><span class="line">    //从数据库中获取当前登录用户的详细信息</span><br><span class="line">//    User user = userService.findByLoginName(currentLoginName);</span><br><span class="line">//    if(null != user)&#123;</span><br><span class="line">    //获取当前用户下所有ACL权限列表  待续。。。</span><br><span class="line">    //获取当前用户下拥有的所有角色列表</span><br><span class="line">//      List&lt;Role&gt; roles = roleService.findByUserId(user.getId());</span><br><span class="line">//      for (int i = 0; i &lt; roles.size(); i++) &#123;</span><br><span class="line">//        userRoles.add(roles.get(i).getCode());</span><br><span class="line">//      &#125;</span><br><span class="line">//    &#125;else&#123;</span><br><span class="line">//      throw new AuthorizationException();</span><br><span class="line">//    &#125;</span><br><span class="line">    userRoles.add(&quot;admin&quot;);</span><br><span class="line">    userPermissions.add(&quot;1&quot;);</span><br><span class="line">    System.out.println(&quot;####### 获取角色：&quot; + userRoles);</span><br><span class="line">    System.out.println(&quot;####### 获取权限：&quot; + userPermissions);</span><br><span class="line">    //为当前用户设置角色和权限</span><br><span class="line">    SimpleAuthorizationInfo authorizationInfo = new SimpleAuthorizationInfo();</span><br><span class="line">    authorizationInfo.addRoles(userRoles);</span><br><span class="line">    authorizationInfo.addStringPermissions(userPermissions);</span><br><span class="line">    return authorizationInfo;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  /**</span><br><span class="line">   * 验证当前登录的Subject LoginController.login()方法中执行Subject.login()时 执行此方法</span><br><span class="line">   */</span><br><span class="line">  @Override</span><br><span class="line">  protected AuthenticationInfo doGetAuthenticationInfo(</span><br><span class="line">      AuthenticationToken authcToken) throws AuthenticationException &#123;</span><br><span class="line">    System.out.println(&quot;### 【开始认证[SessionId]】&quot; + SecurityUtils.getSubject().getSession().getId());</span><br><span class="line">    String loginName = (String) authcToken.getPrincipal();</span><br><span class="line">    System.out.println(JSON.toJSONString(authcToken));</span><br><span class="line">//    User user = userService.findByLoginName(loginName);</span><br><span class="line">//    if (user == null) &#123;</span><br><span class="line">//      throw new UnknownAccountException();//没找到帐号</span><br><span class="line">//    &#125;</span><br><span class="line">    //交给AuthenticatingRealm使用CredentialsMatcher进行密码匹配，如果觉得人家的不好可以自定义实现</span><br><span class="line">    SimpleAuthenticationInfo authenticationInfo = new SimpleAuthenticationInfo(</span><br><span class="line">        &quot;admin&quot;, //用户名</span><br><span class="line">        &quot;sercet&quot;, //密码</span><br><span class="line">        getName()  //realm name</span><br><span class="line">    );</span><br><span class="line">    return authenticationInfo;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>controller<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@RestController</span><br><span class="line">@SpringBootApplication</span><br><span class="line">public class App &#123;</span><br><span class="line"></span><br><span class="line">  final static Logger logger = LoggerFactory.getLogger(App.class);</span><br><span class="line"></span><br><span class="line">  public static void main(String[] args) &#123;</span><br><span class="line">    SpringApplication.run(App.class);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  @RequestMapping(&quot;/demo&quot;)</span><br><span class="line">  @RequiresRoles(&quot;admin&quot;)</span><br><span class="line">  @RequiresPermissions(&quot;1&quot;)</span><br><span class="line">  public Object demo() &#123;</span><br><span class="line">    return &quot;测试页面&quot;;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  @RequestMapping(&quot;/logout&quot;)</span><br><span class="line">  public Object logout() &#123;</span><br><span class="line">    return &quot;logout&quot;;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  @RequestMapping(&quot;/login&quot;)</span><br><span class="line">  public Object login(String password) &#123;</span><br><span class="line">    //当前Subject</span><br><span class="line">    org.apache.shiro.subject.Subject currentUser = SecurityUtils.getSubject();</span><br><span class="line">    //传递token给shiro的realm</span><br><span class="line">    UsernamePasswordToken token = new UsernamePasswordToken(&quot;admin&quot;, password, false);</span><br><span class="line">    try &#123;</span><br><span class="line">      currentUser.login(token);</span><br><span class="line">      return &quot;welcome&quot;;</span><br><span class="line">    &#125; catch (AuthenticationException e) &#123;//登录失败</span><br><span class="line">      return e.getMessage();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h3><p><a href="https://www.gitbook.com/book/waylau/apache-shiro-1-2-x-reference/details" target="_blank" rel="noopener">https://www.gitbook.com/book/waylau/apache-shiro-1-2-x-reference/details</a></p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>mysql</title>
    <url>/2016/03/16/0125-mysql/</url>
    <content><![CDATA[<p>概述</p>
<p>   本文通过一个实际例子，说明如何使用工具来分析生产环境上的慢查询，并对慢查询进行优化。</p>
<p>发现问题</p>
<pre><code>在生产环境上发现机器load比较高，io %util用满，但是mysql的查询、删除和更新语句数很小 （使用orzdba工具，参考 Linux主机和MySQL监控工具 ------ orzdba），如下
</code></pre><p> ——– —–load-avg—- —cpu-usage— —swap— ————————-io-usage———————–                     -QPS- -TPS-         -Hit%- ——threads—— —–bytes—-<br>  time  |  1m    5m   15m |usr sys idl iow|   si   so|   r/s    w/s    rkB/s    wkB/s  queue await svctm %util|  ins   upd   del    sel   iud|     lor    hit| run  con  cre  cac|   recv   send|<br>17:52:54| 3.65  4.08  3.98|  5   1  84  10|    0    0|  114.0   27.5  2154.3    680.1   8.0   61.1   6.8  96.6|    0     0     0      2     0|    3361  97.08|  60  111    0    0|     1k   2.3m|<br>17:52:55| 3.65  4.08  3.98|  9   2  80   9|    0    0|   97.2  139.0  2632.3   2422.4 108.4  225.7   4.1  95.7|    0     1     0      1     1|   29049  99.99|  61  111    0    0|    801   2.0m|<br>17:52:56| 3.60  4.07  3.97|  3   2  83  12|    0    0|  102.0  176.5  2717.6   2384.3  89.0  445.4   3.4  95.9|    0     0     0      1     0|       0 100.00|  60  111    0    0|    837   2.9m|<br>17:52:57| 3.60  4.07  3.97|  4   2  84  10|    0    0|  218.5  178.1  6305.5   3121.3  39.2  150.7   2.3  91.8|    0     1     0      1     1|   29034  99.99|  60  111    0    0|     1k   6.0m|<br>17:52:58| 3.60  4.07  3.97|  5   2  84   9|    0    0|  358.4    0.0  9580.4      0.0   2.6    7.2   2.5  88.1|    0     0     0      2     0|       0 100.00|  60  112    1    0|    815   8.5m|<br>17:52:59| 3.60  4.07  3.97| 12   2  76  10|    0    0|  277.4   31.3  5575.6    949.5  32.5   21.8   3.0  91.9|    0     1     0      1     1|  115825  98.45|  61  112    0    0|     2k   5.2m|<br>17:53:00| 3.60  4.07  3.97|  2   1  87  10|    0    0|    2.0  245.5     7.8   2480.2 150.2  503.7   4.1 100.0|    0     1     0      1     1|   29034  99.99|  62  112    0    0|    800    17k|<br>17:53:01| 3.55  4.05  3.97|  1   1  87  11|    0    0|    1.0  207.3     3.9   4227.7 142.0  674.9   4.8  99.9|    0     0     0      1     0|       0 100.00|  62  112    0    0|    716     1k|<br>17:53:02| 3.55  4.05  3.97|  1   1  79  19|    0    0|    2.0  214.2     7.8   3282.2 141.7  625.1   4.6  99.9|    0     0     0      1     0|       0 100.00|  62  112    0    0|     1k     3k|<br>17:53:03| 3.55  4.05  3.97|  1   1  75  24|    0    0|    2.0  310.4     7.8   3748.3 146.5  563.0   3.2 100.0|    0     0     0      1     0|       0 100.00|  62  112    0    0|    716     1k|<br>17:53:04| 3.55  4.05  3.97|  2   1  75  22|    0    0|    2.9  389.3    11.7   4331.7 137.4  381.2   2.5 100.0|    0     0     0      1     0|       0 100.00|  62  112    0    0|    716     1k|<br>17:53:05| 3.55  4.05  3.97|  2   1  86  11|    0    0|   17.6  120.3    70.4   2988.8  19.2  234.4   7.2 100.0|    0     0     0      3     0|      26  80.77|  60  112    0    0|     1k     4k|<br>17:53:06| 3.35  4.00  3.95|  6   1  81  11|    0    0|  224.7   51.8  3563.4    347.7   4.6   34.1   3.5  96.5|    0     0     0      1     0|       0 100.00|  60  112    0    0|    816   2.3m|<br>17:53:07| 3.35  4.00  3.95|  8   1  71  20|    0    0|   85.1  154.5  1228.4   2754.0 100.6  279.6   4.1  97.6|    0     1     0      1     1|      10  60.00|  61  112    0    0|    896   1.2m|<br>17:53:08| 3.35  4.00  3.95|  5   1  78  16|    0    0|   34.4  330.8  1024.8   3372.8 118.8  417.7   4.4 100.0|    0     3     0      2     3|   58120  99.96|  64  112    0    0|     4k   498k|<br>——– —–load-avg—- —cpu-usage— —swap— ————————-io-usage———————–                     -QPS- -TPS-         -Hit%- ——threads—— —–bytes—-<br>    再使用top命令，发现mysql的cpu使用率最高，因此估计是mysql有慢查询导致。</p>
<p>慢查询分析</p>
<pre><code>默认情况下mysql没有开启慢查询，需要手动开启。注意在处理完问题后也要手工关闭该选项，否则性能会受一些影响。
</code></pre><ol>
<li>登录mysql</li>
</ol>
<p>mysql -uroot -p密码</p>
<ol start="2">
<li>查询是否开启慢查询 （log_slow_queries是否为ON）</li>
</ol>
<p>show variables like ‘%slow%’;<br>+———————+————————————+<br>| Variable_name       | Value                              |<br>+———————+————————————+<br>| log_slow_queries    | OFF                                |<br>| slow_launch_time    | 2                                  |<br>| slow_query_log      | OFF                                |<br>| slow_query_log_file | /var/mysql/data/uhz002798-slow.log |<br>+———————+————————————+<br>4 rows in set (0.01 sec)</p>
<ol start="3">
<li>开启慢查询（不需要重启数据库）</li>
</ol>
<p>set global log_slow_queries=ON ;<br>/usr/local/mysql/bin/mysqldumpslow -s c -t 10 /var/mysql/data/uhz002798-slow.log<br>h5. <em>mysqldumpslow命令</em>/usr/local/mysql/bin/mysqldumpslow -s c -t 10 /var/mysql/data/uhz002798-slow.log<br>该命令会输出记录次数最多的10条SQL语句，其中：</p>
<pre><code>-s, 是表示按照何种方式排序，c、t、l、r分别是按照记录次数、时间、查询时间、返回的记录数来排序，ac、at、al、ar，表示相应的倒叙；
-t, 是top n的意思，即为返回前面多少条的数据；
-g, 后边可以写一个正则匹配模式，大小写不敏感的；
慢查询日志文件路径见mysql参数 slow_query_log_file
 查询结果如下：
</code></pre><p>[root@uhz002798 data]#  /usr/local/mysql/bin/mysqldumpslow -s c -t 10 /var/mysql/data/uhz002798-slow.log</p>
<p>Count: 1  Time=138.15s (138s)  Lock=0.00s (0s)  Rows=0.0 (0), root[root]@localhost<br>  update check_error_item_4  set status=’S’ where numIid=’S’</p>
<p>Count: 1  Time=25.57s (25s)  Lock=0.00s (0s)  Rows=0.0 (0), root[root]@localhost<br>  delete from check_error_item_1 where taskId=N</p>
<p>Count: 1  Time=133.27s (133s)  Lock=0.00s (0s)  Rows=0.0 (0), root[root]@localhost<br>  delete from check_error_item_4 where taskId=N</p>
<p>Count: 1  Time=151.91s (151s)  Lock=0.00s (0s)  Rows=0.0 (0), root[root]@localhost<br>  delete from check_error_item_3 where taskId=N<br>     Count：语句的执行次数<br>     Time： 语句的执行时间<br>     Lock： 锁时间</p>
<ol start="4">
<li><p>分析查询结果</p>
<p> 我们可以用explain来查看sql执行计划，但是explain命令只能分析select语句，上面的delete和update语句怎么办？  我们将update和delete语句转为select语句进行分析：</p>
</li>
</ol>
<p>update check_error_item_4  set status=’S’ where numIid=’S’<br>    改为select语句，并加上explain</p>
<p>explain select * from check_error_item_4 where numIid=’S’;<br>    分析结果</p>
<p>+—-+————-+——————–+——+—————+——+———+——+———+————-+<br>| id | select_type | table              | type | possible_keys | key  | key_len | ref  | rows    | Extra       |<br>+—-+————-+——————–+——+—————+——+———+——+———+————-+<br>|  1 | SIMPLE      | check_error_item_4 | ALL  | NULL          | NULL | NULL    | NULL | 8141292 | Using where |<br>+—-+————-+——————–+——+—————+——+———+——+———+————-+<br>1 row in set (0.00 sec)<br>    分析结果的type为ALL，表明这条语句导致了全表扫描。 通过查询该表的数据量，发现该表有913万条记录（1.7G大小）。对这么大的表做全表扫描必定是非常耗费IO的。</p>
<pre><code>下面通过SHOW INDEX命令查看该表的索引情况，确定该表并没有根据numIid字段建索引：
</code></pre><p> mysql&gt; SHOW INDEX FROM check_error_item_4;<br>+——————–+————+———-+————–+————-+———–+————-+———-+——–+——+————+———+—————+<br>| Table              | Non_unique | Key_name | Seq_in_index | Column_name | Collation | Cardinality | Sub_part | Packed | Null | Index_type | Comment | Index_comment |<br>+——————–+————+———-+————–+————-+———–+————-+———-+——–+——+————+———+—————+<br>| check_error_item_4 |          0 | PRIMARY  |            1 | keyId       | A         |     8240568 |     NULL | NULL   |      | BTREE      |         |               |<br>| check_error_item_4 |          1 | Index_2  |            1 | taskId      | A         |       32064 |     NULL | NULL   | YES  | BTREE      |         |               |<br>+——————–+————+———-+————–+————-+———–+————-+———-+——–+——+————+———+—————+<br>2 rows in set (0.57 sec)<br>    建索引（注意该表很大，建索引可能需要十几分钟到半小时不等，需要在业务空闲时操作）</p>
<p>ALTER TABLE <code>check_error_item_4</code> ADD INDEX <code>idx_numiid</code> (<code>num_iid</code>) ;<br>    接下来看一下这条delete语句。</p>
<p>delete from check_error_item_4 where taskId=N<br>    该表的taskId已经建了索引，但是通过分析语句后，发现该语句的执行计划还是全表扫描。 使用desc tableName查看taskId字段类型，原来该字段类型为varchar，但在sql中没有使用引号。 通过两个执行计划，我们可以看出其中的差别：</p>
<p> mysql&gt; explain select * from check_error_item_4 where taskId = 90;<br>+—-+————-+——————–+——+—————+——+———+——+———+————-+<br>| id | select_type | table              | type | possible_keys | key  | key_len | ref  | rows    | Extra       |<br>+—-+————-+——————–+——+—————+——+———+——+———+————-+<br>|  1 | SIMPLE      | check_error_item_4 | ALL  | Index_2       | NULL | NULL    | NULL | 8295386 | Using where |<br>+—-+————-+——————–+——+—————+——+———+——+———+————-+<br>1 row in set (0.00 sec)</p>
<p>mysql&gt; explain select * from check_error_item_4 where taskId = ‘90’;<br>+—-+————-+——————–+——+—————+———+———+——-+——+————-+<br>| id | select_type | table              | type | possible_keys | key     | key_len | ref   | rows | Extra       |<br>+—-+————-+——————–+——+—————+———+———+——-+——+————-+<br>|  1 | SIMPLE      | check_error_item_4 | ref  | Index_2       | Index_2 | 138     | const |    8 | Using where |<br>+—-+————-+——————–+——+—————+———+———+——-+——+————-+<br>1 row in set (0.08 sec)<br>    解决的方法很简单，修改程序为sql语句的taskId值加上引号即可。</p>
<p>参考</p>
<p>用命令查看数据库中表的数据行数和表占用空间大小（对于Innodb引擎的表，数据行数不准，仅供参考）<br>select table_name, <code>ENGINE</code>, TABLE_ROWS, DATA_LENGTH/1024/1024 as DATA_LENGTH  from information_schema.<code>TABLES</code> where TABLE_SCHEMA=’数据库名’;<br>SHOW INDEX 命令返回信息的含义 Table 表的名称。<br>    Non_unique   如果索引不能包括重复词，则为0。如果可以，则为1。</p>
<pre><code>Key_name     索引的名称。

Seq_in_index 索引中的列序列号，从1开始。

Column_name  列名称。

Collation    列以什么方式存储在索引中。在MySQLSHOW INDEX语法中，有值&apos;A&apos;（升序）或NULL（无分类）。

Cardinality  索引中唯一值的数目的估计值。通过运行ANALYZE TABLE或myisamchk -a可以更新。基数根据被存储为整数的统计数据来计数，所以即使对于小型表，该值也没有必要是精确的。基数越大，当进行联合时，MySQL使用该索引的机会就越大。
    Cardinality会有如下的含义：
    1. 列值代表的是此列中存储的唯一值的个数（如果此列为primary key 则值为记录的行数）
    2. 列值只是个估计值，并不准确。
    3. 列值不会自动更新，需要通过Analyze table来更新一张表或者mysqlcheck -Aa来进行更新整个数据库。
    4. 列值的大小影响Join时是否选用这个Index的判断。
    5. 创建Index时，MyISAM的表Cardinality的值为null，InnoDB的表Cardinality的值大概为行数。
    6. MyISAM与InnoDB对于Cardinality的计算方式不同
        更多参考该文章 http://www.mysqlperformanceblog.com/2008/09/03/analyze-myisam-vs-innodb/

Sub_part 如果列只是被部分地编入索引，则为被编入索引的字符的数目。如果整列被编入索引，则为NULL。

Packed 指示关键字如何被压缩。如果没有被压缩，则为NULL。

Null 如果列含有NULL，则含有YES。如果没有，则该列含有NO。

Index_type 用过的索引方法（BTREE, FULLTEXT, HASH, RTREE）。

Comment 多种评注。
</code></pre><p>结束….</p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>未归档</tag>
      </tags>
  </entry>
  <entry>
    <title>Guide Java</title>
    <url>/2017/01/11/0189-Guide%20Java/</url>
    <content><![CDATA[<h3 id="速成三步"><a href="#速成三步" class="headerlink" title="速成三步"></a>速成三步</h3><ul>
<li><a href="https://learnxinyminutes.com/docs/java/" target="_blank" rel="noopener">https://learnxinyminutes.com/docs/java/</a></li>
<li><a href="https://spring.io/guides" target="_blank" rel="noopener">https://spring.io/guides</a></li>
<li><a href="https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/" target="_blank" rel="noopener">https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/</a></li>
</ul>
<h3 id="Java-Guide"><a href="#Java-Guide" class="headerlink" title="Java Guide"></a>Java Guide</h3><p>一、基础篇<br>JVM<br>JVM 内存结构<br>堆、栈、方法区、直接内存、堆和栈区别</p>
<p>Java 内存模型<br>内存可见性、重排序、顺序一致性、volatile、锁、final</p>
<p>垃圾回收<br>内存分配策略、垃圾收集器（ G1 ）、GC 算法、GC 参数、对象存活的判定</p>
<p>JVM 参数及调优<br>Java 对象模型<br>oop-klass、对象头</p>
<p>HotSpot<br>即时编译器、编译优化</p>
<p>类加载机制<br>classLoader、类加载过程、双亲委派（破坏双亲委派）、模块化（ jboss modules、osgi、jigsaw ）</p>
<p>虚拟机性能监控与故障处理工具<br>jps, jstack, jmap、jstat, jconsole, jinfo, jhat, javap, btrace、TProfiler</p>
<p>编译与反编译<br>javac、javap、jad、CRF</p>
<p>Java 基础知识<br>阅读源代码<br>String、Integer、Long、Enum、BigDecimal、ThreadLocal、ClassLoader &amp; URLClassLoader、ArrayList &amp; LinkedList、HashMap &amp; LinkedHashMap &amp; TreeMap &amp; CouncurrentHashMap、HashSet &amp; LinkedHashSet &amp; TreeSet</p>
<p>Java 中各种变量类型<br>熟悉 Java String 的使用，熟悉 String 的各种函数<br>JDK 6 和 JDK 7 中 substring 的原理及区别、</p>
<p>replaceFirst、replaceAll、replace 区别、</p>
<p>String 对“+”的重载、</p>
<p>String.valueOf 和 Integer.toString 的区别、</p>
<p>字符串的不可变性</p>
<p>自动拆装箱<br>Integer 的缓存机制</p>
<p>熟悉 Java 中各种关键字<br>transient、instanceof、volatile、synchronized、final、static、const 原理及用法。</p>
<p>集合类<br>常用集合类的使用、ArrayList 和 LinkedList 和 Vector 的区别 、SynchronizedList 和 Vector 的区别、HashMap、HashTable、ConcurrentHashMap 区别、Java 8 中 stream 相关用法、apache 集合处理工具类的使用、不同版本的 JDK 中 HashMap 的实现的区别以及原因</p>
<p>枚举<br>枚举的用法、枚举与单例、Enum 类</p>
<p>Java IO&amp;Java NIO，并学会使用<br>bio、nio 和 aio 的区别、三种 IO 的用法与原理、netty</p>
<p>Java 反射与 javassist<br>反射与工厂模式、 java.lang.reflect.*</p>
<p>Java 序列化<br>什么是序列化与反序列化、为什么序列化、序列化底层原理、序列化与单例模式、protobuf、为什么说序列化并不安全</p>
<p>注解<br>元注解、自定义注解、Java 中常用注解使用、注解与反射的结合</p>
<p>JMS<br>什么是 Java 消息服务、JMS 消息传送模型</p>
<p>JMX<br>java.lang.management.<em>、 javax.management.</em></p>
<p>泛型<br>泛型与继承、类型擦除、泛型中 K T V E ？ object 等的含义、泛型各种用法</p>
<p>单元测试<br>junit、mock、mockito、内存数据库（ h2 ）</p>
<p>正则表达式<br>java.lang.util.regex.*</p>
<p>常用的 Java 工具库<br>commons.lang, commons.*… guava-libraries netty</p>
<p>什么是 API&amp;SPI<br>异常<br>异常类型、正确处理异常、自定义异常</p>
<p>时间处理<br>时区、时令、Java 中时间 API</p>
<p>编码方式<br>解决乱码问题、常用编码方式</p>
<p>语法糖<br>Java 中语法糖原理、解语法糖</p>
<p>Java 并发编程<br>什么是线程，与进程的区别<br>阅读源代码，并学会使用<br>Thread、Runnable、Callable、ReentrantLock、ReentrantReadWriteLock、Atomic*、Semaphore、CountDownLatch、、ConcurrentHashMap、Executors</p>
<p>线程池<br>自己设计线程池、submit() 和 execute()</p>
<p>线程安全<br>死锁、死锁如何排查、Java 线程调度、线程安全和内存模型的关系</p>
<p>锁<br>CAS、乐观锁与悲观锁、数据库相关锁机制、分布式锁、偏向锁、轻量级锁、重量级锁、monitor、锁优化、锁消除、锁粗化、自旋锁、可重入锁、阻塞锁、死锁</p>
<p>死锁<br>volatile<br>happens-before、编译器指令重排和 CPU 指令重</p>
<p>synchronized<br>synchronized 是如何实现的？ synchronized 和 lock 之间关系、不使用 synchronized 如何实现一个线程安全的单例</p>
<p>sleep 和 wait<br>wait 和 notify<br>notify 和 notifyAll<br>ThreadLocal<br>写一个死锁的程序<br>写代码来解决生产者消费者问题<br>守护线程<br>守护线程和非守护线程的区别以及用法</p>
<p>二、 进阶篇<br>Java 底层知识<br>字节码、class 文件格式<br>CPU 缓存，L1，L2，L3 和伪共享<br>尾递归<br>位运算<br>用位运算实现加、减、乘、除、取余</p>
<p>设计模式<br>了解 23 种设计模式<br>会使用常用设计模式<br>单例、策略、工厂、适配器、责任链。</p>
<p>实现 AOP<br>实现 IOC<br>不用 synchronized 和 lock，实现线程安全的单例模式<br>nio 和 reactor 设计模式<br>网络编程知识<br>tcp、udp、http、https 等常用协议<br>三次握手与四次关闭、流量控制和拥塞控制、OSI 七层模型、tcp 粘包与拆包</p>
<p>http/1.0 http/1.1 http/2 之前的区别<br>Java RMI，Socket，HttpClient<br>cookie 与 session<br>cookie 被禁用，如何实现 session</p>
<p>用 Java 写一个简单的静态文件的 HTTP 服务器<br>实现客户端缓存功能，支持返回 304 实现可并发下载一个文件 使用线程池处理客户端请求 使用 nio 处理客户端请求 支持简单的 rewrite 规则 上述功能在实现的时候需要满足“开闭原则”</p>
<p>了解 nginx 和 apache 服务器的特性并搭建一个对应的服务器<br>用 Java 实现 FTP、SMTP 协议<br>进程间通讯的方式<br>什么是 CDN ？如果实现？<br>什么是 DNS ？<br>反向代理<br>框架知识<br>Servlet 线程安全问题<br>Servlet 中的 filter 和 listener<br>Hibernate 的缓存机制<br>Hiberate 的懒加载<br>Spring Bean 的初始化<br>Spring 的 AOP 原理<br>自己实现 Spring 的 IOC<br>Spring MVC<br>Spring Boot2.0<br>Spring Boot 的 starter 原理，自己实现一个 starter</p>
<p>三、 高级篇<br>新技术<br>Java 8<br>lambda 表达式、Stream API、</p>
<p>Java 9<br>Jigsaw、Jshell、Reactive Streams</p>
<p>Java 10<br>局部变量类型推断、G1 的并行 Full GC、ThreadLocal 握手机制</p>
<p>Spring 5<br>响应式编程</p>
<p>Spring Boot 2.0<br>性能优化<br>使用单例、使用 Future 模式、使用线程池、选择就绪、减少上下文切换、减少锁粒度、数据压缩、结果缓存</p>
<p>线上问题分析<br>dump 获取<br>线程 Dump、内存 Dump、gc 情况</p>
<p>dump 分析<br>分析死锁、分析内存泄露</p>
<p>自己编写各种 outofmemory，stackoverflow 程序<br>HeapOutOfMemory、Young OutOfMemory、MethodArea OutOfMemory、ConstantPool OutOfMemory、DirectMemory OutOfMemory、Stack OutOfMemory Stack OverFlow</p>
<p>常见问题解决思路<br>内存溢出、线程死锁、类加载冲突</p>
<p>使用工具尝试解决以下问题，并写下总结<br>当一个 Java 程序响应很慢时如何查找问题、</p>
<p>当一个 Java 程序频繁 FullGC 时如何解决问题、</p>
<p>如何查看垃圾回收日志、</p>
<p>当一个 Java 应用发生 OutOfMemory 时该如何解决、</p>
<p>如何判断是否出现死锁、</p>
<p>如何判断是否存在内存泄露</p>
<p>编译原理知识<br>编译与反编译<br>Java 代码的编译与反编译<br>Java 的反编译工具<br>词法分析，语法分析（ LL 算法，递归下降算法，LR 算法），语义分析，运行时环境，中间代码，代码生成，代码优化<br>操作系统知识<br>Linux 的常用命令<br>进程同步<br>缓冲区溢出<br>分段和分页<br>虚拟内存与主存<br>数据库知识<br>MySql 执行引擎<br>MySQL 执行计划<br>如何查看执行计划，如何根据执行计划进行 SQL 优化</p>
<p>SQL 优化<br>事务<br>事务的隔离级别、事务能不能实现锁的功能</p>
<p>数据库锁<br>行锁、表锁、使用数据库锁实现乐观锁、</p>
<p>数据库主备搭建<br>binlog<br>内存数据库<br>h2</p>
<p>常用的 nosql 数据库<br>redis、memcached</p>
<p>分别使用数据库锁、NoSql 实现分布式锁<br>性能调优<br>数据结构与算法知识<br>简单的数据结构<br>栈、队列、链表、数组、哈希表、</p>
<p>树<br>二叉树、字典树、平衡树、排序树、B 树、B+树、R 树、多路树、红黑树</p>
<p>排序算法<br>各种排序算法和时间复杂度 深度优先和广度优先搜索 全排列、贪心算法、KMP 算法、hash 算法、海量数据处理</p>
<p>大数据知识<br>Zookeeper<br>基本概念、常见用法</p>
<p>Solr，Lucene，ElasticSearch<br>在 linux 上部署 solr，solrcloud，，新增、删除、查询索引</p>
<p>Storm，流式计算，了解 Spark，S4<br>在 linux 上部署 storm，用 zookeeper 做协调，运行 storm hello world，local 和 remote 模式运行调试 storm topology。</p>
<p>Hadoop，离线计算<br>HDFS、MapReduce</p>
<p>分布式日志收集 flume，kafka，logstash<br>数据挖掘，mahout<br>网络安全知识<br>什么是 XSS<br>XSS 的防御</p>
<p>什么是 CSRF<br>什么是注入攻击<br>SQL 注入、XML 注入、CRLF 注入</p>
<p>什么是文件上传漏洞<br>加密与解密<br>MD5，SHA1、DES、AES、RSA、DSA</p>
<p>什么是 DOS 攻击和 DDOS 攻击<br>memcached 为什么可以导致 DDos 攻击、什么是反射型 DDoS</p>
<p>SSL、TLS，HTTPS<br>如何通过 Hash 碰撞进行 DOS 攻击<br>用 openssl 签一个证书部署到 apache 或 nginx<br>四、架构篇<br>分布式<br>数据一致性、服务治理、服务降级</p>
<p>分布式事务<br>2PC、3PC、CAP、BASE、 可靠消息最终一致性、最大努力通知、TCC</p>
<p>Dubbo<br>服务注册、服务发现，服务治理</p>
<p>分布式数据库<br>怎样打造一个分布式数据库、什么时候需要分布式数据库、mycat、otter、HBase</p>
<p>分布式文件系统<br>mfs、fastdfs</p>
<p>分布式缓存<br>缓存一致性、缓存命中率、缓存冗余</p>
<p>微服务<br>SOA、康威定律</p>
<p>ServiceMesh<br>Docker &amp; Kubernets<br>Spring Boot<br>Spring Cloud<br>高并发<br>分库分表<br>CDN 技术<br>消息队列<br>ActiveMQ</p>
<p>监控<br>监控什么<br>CPU、内存、磁盘 I/O、网络 I/O 等</p>
<p>监控手段<br>进程监控、语义监控、机器资源监控、数据波动</p>
<p>监控数据采集<br>日志、埋点</p>
<p>Dapper<br>负载均衡<br>tomcat 负载均衡、Nginx 负载均衡</p>
<p>DNS<br>DNS 原理、DNS 的设计</p>
<p>CDN<br>数据一致性</p>
<p>五、 扩展篇<br>云计算<br>IaaS、SaaS、PaaS、虚拟化技术、openstack、Serverlsess</p>
<p>搜索引擎<br>Solr、Lucene、Nutch、Elasticsearch</p>
<p>权限管理<br>Shiro</p>
<p>区块链<br>哈希算法、Merkle 树、公钥密码算法、共识算法、Raft 协议、Paxos 算法与 Raft 算法、拜占庭问题与算法、消息认证码与数字签名</p>
<p>常用框架<br>TensorFlow、DeepLearning4J</p>
<p>其他语言<br>Groovy、Python、Go、NodeJs、Swift、Rust</p>
<p>六、 推荐书籍<br>《深入理解 Java 虚拟机》<br>《 Effective Java 》<br>《深入分析 Java Web 技术内幕》<br>《大型网站技术架构》<br>《代码整洁之道》<br>《Head First 设计模式》<br>《maven 实战》<br>《区块链原理、设计与应用》<br>《Java 并发编程实战》<br>《鸟哥的 Linux 私房菜》<br>《从 Paxos 到 Zookeeper 》<br>《架构即未来》</p>
<h3 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h3><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>阅读jdk相关源码了解基础底层实现</p>
<h2 id="引导"><a href="#引导" class="headerlink" title="引导"></a>引导</h2><h3 id="聊-String"><a href="#聊-String" class="headerlink" title="聊 String"></a>聊 String</h3><p>Q ==和equls 区别？<br>A 一个是地址引用，一个是值引用</p>
<p>Q String/StringBuilder/StringBuffer<br>A 不安全直至垃圾回收、线程不安全、线程安全</p>
<h3 id="聊List"><a href="#聊List" class="headerlink" title="聊List"></a>聊List</h3><p>首先List常见的实现是ArrayList和 LinkedList，其中ArrayList实际上就是int[]一个数组，LinkedList是一个双向列表</p>
<h3 id="聊Map"><a href="#聊Map" class="headerlink" title="聊Map"></a>聊Map</h3><p>HashMap是一个树结构，其中核心代码如下， 可以看出<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">    final int hash;</span><br><span class="line">    final K key;</span><br><span class="line">    V value;</span><br><span class="line">    Node&lt;K,V&gt; next;</span><br><span class="line"></span><br><span class="line">static final int hash(Object key) &#123;</span><br><span class="line">    int h;</span><br><span class="line">    return (key == null) ? 0 : (h = key.hashCode()) ^ (h &gt;&gt;&gt; 16);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">final V putVal(int hash, K key, V value, boolean onlyIfAbsent,</span><br><span class="line">               boolean evict) &#123;</span><br><span class="line">    Node&lt;K,V&gt;[] tab; Node&lt;K,V&gt; p; int n, i;</span><br><span class="line">    if ((tab = table) == null || (n = tab.length) == 0)</span><br><span class="line">        n = (tab = resize()).length;</span><br><span class="line">    if ((p = tab[i = (n - 1) &amp; hash]) == null)</span><br><span class="line">        tab[i] = newNode(hash, key, value, null);</span><br><span class="line">    else &#123;</span><br><span class="line">        Node&lt;K,V&gt; e; K k;</span><br><span class="line">        if (p.hash == hash &amp;&amp;</span><br><span class="line">            ((k = p.key) == key || (key != null &amp;&amp; key.equals(k))))</span><br><span class="line">            e = p;</span><br><span class="line">        else if (p instanceof TreeNode)</span><br><span class="line">            e = ((TreeNode&lt;K,V&gt;)p).putTreeVal(this, tab, hash, key, value);</span><br><span class="line">        else &#123;</span><br><span class="line">            for (int binCount = 0; ; ++binCount) &#123;</span><br><span class="line">                if ((e = p.next) == null) &#123;</span><br><span class="line">                    p.next = newNode(hash, key, value, null);</span><br><span class="line">                    if (binCount &gt;= TREEIFY_THRESHOLD - 1) // -1 for 1st</span><br><span class="line">                        treeifyBin(tab, hash);</span><br><span class="line">                    break;</span><br><span class="line">                &#125;</span><br><span class="line">                if (e.hash == hash &amp;&amp;</span><br><span class="line">                    ((k = e.key) == key || (key != null &amp;&amp; key.equals(k))))</span><br><span class="line">                    break;</span><br><span class="line">                p = e;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        if (e != null) &#123; // existing mapping for key</span><br><span class="line">            V oldValue = e.value;</span><br><span class="line">            if (!onlyIfAbsent || oldValue == null)</span><br><span class="line">                e.value = value;</span><br><span class="line">            afterNodeAccess(e);</span><br><span class="line">            return oldValue;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ++modCount;</span><br><span class="line">    if (++size &gt; threshold)</span><br><span class="line">        resize();</span><br><span class="line">    afterNodeInsertion(evict);</span><br><span class="line">    return null;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="聊Set"><a href="#聊Set" class="headerlink" title="聊Set"></a>聊Set</h3><p>Q Set<br>A 这里只谈<code>HashSet&lt;E&gt;</code> 实际上用<code>map&lt;E,Object&gt;</code>集合实现的见如下代码<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public boolean add(E e) &#123;</span><br><span class="line">    return map.put(e, new Object())==null;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>tryghost</category>
      </categories>
      <tags>
        <tag>未归档</tag>
      </tags>
  </entry>
  <entry>
    <title>Bigdata Hadoop Guide</title>
    <url>/2020/12/26/Bigdata%20Hadoop%20Guide/</url>
    <content><![CDATA[<h1 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h1><h1 id="Architecture"><a href="#Architecture" class="headerlink" title="Architecture"></a>Architecture</h1><h1 id="Feautre"><a href="#Feautre" class="headerlink" title="Feautre"></a>Feautre</h1><h1 id="Concept"><a href="#Concept" class="headerlink" title="Concept"></a>Concept</h1><h1 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h1><ul>
<li><a href="https://spark.apache.org/docs/latest/spark-standalone.html" target="_blank" rel="noopener">Standalone Deploy Mode</a>: simplest way to deploy Spark on a private cluster</li>
<li><a href="https://spark.apache.org/docs/latest/running-on-yarn.html" target="_blank" rel="noopener">Hadoop YARN</a></li>
<li><a href="https://spark.apache.org/docs/latest/running-on-kubernetes.html" target="_blank" rel="noopener">Kubernetes</a></li>
</ul>
<h2 id="Standalone"><a href="#Standalone" class="headerlink" title="Standalone"></a>Standalone</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ignore</span><br></pre></td></tr></table></figure>
<h2 id="Hadoop-YARN"><a href="#Hadoop-YARN" class="headerlink" title="Hadoop YARN"></a>Hadoop YARN</h2><h2 id="Step-1"><a href="#Step-1" class="headerlink" title="Step 1"></a>Step 1</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> setting host</span></span><br><span class="line">hostname bigserver1 # master</span><br><span class="line">hostname bigserver2 # node</span><br><span class="line"><span class="meta">#</span><span class="bash"> setting each node</span></span><br><span class="line">vim /etc/hosts</span><br><span class="line">192.168.1.14 bigserver1  </span><br><span class="line">192.168.1.15 bigserver2</span><br><span class="line"><span class="meta">#</span><span class="bash"> install java</span></span><br><span class="line">apt install openjdk-8-jre-headless</span><br><span class="line"><span class="meta">#</span><span class="bash"> copy hadoop *.files</span></span><br><span class="line">tar -zxvf hadoop-3.2.1.tar.gz  </span><br><span class="line">mkdir /bigdata  </span><br><span class="line">mv hadoop-3.2.1 /bigdata/hadoop  </span><br><span class="line">mkdir -pv /bigdata/hadoop/&#123;tmp,var,dfs,logs&#125;  </span><br><span class="line">mkdir -pv /bigdata/hadoop/dfs/&#123;name,data&#125; </span><br><span class="line"><span class="meta">#</span><span class="bash"> backup</span></span><br><span class="line">cd /bigdata/hadoop/etc</span><br><span class="line">cp -r hadoop hadoop_bak</span><br><span class="line"><span class="meta">#</span><span class="bash"> ssh-copy-id</span></span><br><span class="line">ssh-keygen -t rsa</span><br><span class="line">ssh-copy-id -i ~/.ssh/id_rsa.pub jik1992@bigserver2</span><br></pre></td></tr></table></figure>
<h2 id="Step2"><a href="#Step2" class="headerlink" title="Step2"></a>Step2</h2><p><code>http://hadoop.apache.org/docs/r3.2.1/</code></p>
<ul>
<li>/etc/hadoop/hadoop-env.sh</li>
<li>/etc/hadoop/yarn-env.sh</li>
<li>/etc/hadoop/core-site.xml</li>
<li>/etc/hadoop/hdfs-site.xml</li>
<li>/etc/hadoop/mapred-site.xml</li>
<li>/etc/hadoop/yarn-site.xml</li>
<li>/etc/hadoop/slaves</li>
</ul>
<h3 id="hadoop-env-sh-yarn-env-sh"><a href="#hadoop-env-sh-yarn-env-sh" class="headerlink" title="hadoop-env.sh/yarn-env.sh"></a>hadoop-env.sh/yarn-env.sh</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> setting hadoop-env.sh</span></span><br><span class="line">echo "export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64" &gt;&gt; ~/.bashrc  </span><br><span class="line">source ~/.bashrc  </span><br><span class="line">vim hadoop-env.sh</span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">export</span> JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64</span></span><br></pre></td></tr></table></figure>
<h3 id="core-site"><a href="#core-site" class="headerlink" title="core-site"></a>core-site</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> setting core-site</span></span><br><span class="line">vim /hadoop/core-site.xml</span><br><span class="line">&lt;property&gt;  </span><br><span class="line">   &lt;name&gt;hadoop.tmp.dir&lt;/name&gt;  </span><br><span class="line">   &lt;value&gt;/bigdata/hadoop/tmp&lt;/value&gt;  </span><br><span class="line">&lt;/property&gt;  </span><br><span class="line">&lt;property&gt;  </span><br><span class="line">   &lt;name&gt;fs.default.name&lt;/name&gt;  </span><br><span class="line">   &lt;value&gt;hdfs://bigserver1:9000&lt;/value&gt;  </span><br><span class="line">&lt;/property&gt;</span><br></pre></td></tr></table></figure>
<h3 id="hdfs-site-xml"><a href="#hdfs-site-xml" class="headerlink" title="hdfs-site.xml"></a>hdfs-site.xml</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># setting hdfs-site.xml</span><br><span class="line">&lt;property&gt;  </span><br><span class="line">   &lt;name&gt;dfs.name.dir&lt;/name&gt;  </span><br><span class="line">   &lt;value&gt;/bigdata/hadoop/dfs/name&lt;/value&gt;  </span><br><span class="line">&lt;/property&gt;  </span><br><span class="line">&lt;property&gt;  </span><br><span class="line">   &lt;name&gt;dfs.data.dir&lt;/name&gt;  </span><br><span class="line">   &lt;value&gt;/bigdata/hadoop/dfs/data&lt;/value&gt;  </span><br><span class="line">&lt;/property&gt;  </span><br><span class="line">&lt;property&gt;  </span><br><span class="line">   &lt;name&gt;dfs.replication&lt;/name&gt;  </span><br><span class="line">   &lt;value&gt;2&lt;/value&gt;  </span><br><span class="line">&lt;/property&gt;  </span><br><span class="line">&lt;property&gt;  </span><br><span class="line">   &lt;name&gt;dfs.permissions&lt;/name&gt;  </span><br><span class="line">   &lt;value&gt;false&lt;/value&gt;  </span><br><span class="line">&lt;/property&gt;</span><br></pre></td></tr></table></figure>
<h3 id="mapred-site-xml"><a href="#mapred-site-xml" class="headerlink" title="mapred-site.xml"></a>mapred-site.xml</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> mapred-site.xml</span></span><br><span class="line">&lt;property&gt;  </span><br><span class="line">   &lt;name&gt;mapred.job.tracker&lt;/name&gt;  </span><br><span class="line">   &lt;value&gt;bigserver1:49001&lt;/value&gt;  </span><br><span class="line">&lt;/property&gt;  </span><br><span class="line">&lt;property&gt;  </span><br><span class="line">   &lt;name&gt;mapred.local.dir&lt;/name&gt;  </span><br><span class="line">   &lt;value&gt;/bigdata/hadoop/var&lt;/value&gt;  </span><br><span class="line">&lt;/property&gt;  </span><br><span class="line">&lt;property&gt;  </span><br><span class="line">   &lt;name&gt;mapreduce.framework.name&lt;/name&gt;  </span><br><span class="line">   &lt;value&gt;yarn&lt;/value&gt;  </span><br><span class="line">&lt;/property&gt;  </span><br><span class="line">&lt;property&gt;</span><br><span class="line">&lt;name&gt;yarn.app.mapreduce.am.env&lt;/name&gt;</span><br><span class="line">&lt;value&gt;HADOOP_MAPRED_HOME=/bigdata/hadoop/&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line">&lt;property&gt;</span><br><span class="line">&lt;name&gt;mapreduce.map.env&lt;/name&gt;</span><br><span class="line">&lt;value&gt;HADOOP_MAPRED_HOME=/bigdata/hadoop/&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line"></span><br><span class="line">&lt;property&gt;</span><br><span class="line">&lt;name&gt;mapreduce.reduce.env&lt;/name&gt;</span><br><span class="line">&lt;value&gt;HADOOP_MAPRED_HOME=/bigdata/hadoop/&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br></pre></td></tr></table></figure>
<h3 id="yarn-site-xml"><a href="#yarn-site-xml" class="headerlink" title="yarn-site.xml"></a>yarn-site.xml</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># yarn-site.xml</span><br><span class="line">&lt;property&gt;  </span><br><span class="line">   &lt;name&gt;yarn.resourcemanager.hostname&lt;/name&gt;  </span><br><span class="line">   &lt;value&gt;bigserver1&lt;/value&gt;  </span><br><span class="line">&lt;/property&gt;  </span><br><span class="line">&lt;property&gt;  </span><br><span class="line">   &lt;name&gt;yarn.resourcemanager.address&lt;/name&gt;  </span><br><span class="line">   &lt;value&gt;$&#123;yarn.resourcemanager.hostname&#125;:8032&lt;/value&gt;  </span><br><span class="line">&lt;/property&gt;  </span><br><span class="line">&lt;property&gt;  </span><br><span class="line">   &lt;name&gt;yarn.resourcemanager.scheduler.address&lt;/name&gt;  </span><br><span class="line">   &lt;value&gt;$&#123;yarn.resourcemanager.hostname&#125;:8030&lt;/value&gt;  </span><br><span class="line">&lt;/property&gt;  </span><br><span class="line">&lt;property&gt;  </span><br><span class="line">   &lt;name&gt;yarn.resourcemanager.webapp.address&lt;/name&gt;  </span><br><span class="line">   &lt;value&gt;$&#123;yarn.resourcemanager.hostname&#125;:8088&lt;/value&gt;  </span><br><span class="line">&lt;/property&gt;  </span><br><span class="line">&lt;property&gt;  </span><br><span class="line">   &lt;name&gt;yarn.resourcemanager.webapp.https.address&lt;/name&gt;  </span><br><span class="line">   &lt;value&gt;$&#123;yarn.resourcemanager.hostname&#125;:8090&lt;/value&gt;  </span><br><span class="line">&lt;/property&gt;  </span><br><span class="line">&lt;property&gt;  </span><br><span class="line">   &lt;name&gt;yarn.resourcemanager.resource-tracker.address&lt;/name&gt;  </span><br><span class="line">   &lt;value&gt;$&#123;yarn.resourcemanager.hostname&#125;:8031&lt;/value&gt;  </span><br><span class="line">&lt;/property&gt;  </span><br><span class="line">&lt;property&gt;  </span><br><span class="line">   &lt;name&gt;yarn.resourcemanager.admin.address&lt;/name&gt;  </span><br><span class="line">   &lt;value&gt;$&#123;yarn.resourcemanager.hostname&#125;:8033&lt;/value&gt;  </span><br><span class="line">&lt;/property&gt;  </span><br><span class="line">&lt;property&gt;  </span><br><span class="line">   &lt;name&gt;yarn.nodemanager.aux-services&lt;/name&gt;  </span><br><span class="line">   &lt;value&gt;mapreduce_shuffle&lt;/value&gt;  </span><br><span class="line">&lt;/property&gt;  </span><br><span class="line">&lt;property&gt;  </span><br><span class="line">   &lt;name&gt;yarn.nodemanager.vmem-check-enabled&lt;/name&gt;  </span><br><span class="line">   &lt;value&gt;false&lt;/value&gt;  </span><br><span class="line">&lt;/property&gt;</span><br></pre></td></tr></table></figure>
<h2 id="Step3"><a href="#Step3" class="headerlink" title="Step3"></a>Step3</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> sync files to node server</span></span><br><span class="line">rsync -rvl /bigdata/ jik1992@bigserver2:/bigdata/</span><br><span class="line">rsync -rvl /bigdata/hadoop/etc/ jik1992@bigserver2:/bigdata/hadoop/etc/</span><br><span class="line"><span class="meta">#</span><span class="bash"> setting worker</span></span><br><span class="line">vim worker</span><br><span class="line">bigserver2</span><br><span class="line"><span class="meta">#</span><span class="bash"> checked &amp; 初始化成功后，会/bigdata/hadoop/dfs/name多出一个current文件夹</span></span><br><span class="line">cd /bigdata/hadoop/bin/ &amp;&amp; ./hadoop namenode -format  </span><br><span class="line"><span class="meta">#</span><span class="bash"> ResourceManager/NodeManager/NameNode/SecondaryNameNode/DataNode</span></span><br><span class="line">./start-all.sh   | ./start-dfs.sh ./start-yarn.sh</span><br><span class="line"><span class="meta">#</span><span class="bash"> checked </span></span><br><span class="line">http://192.168.1.14:9870/</span><br><span class="line">http://192.168.1.14:8088/</span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">test</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> calc Pi</span></span><br><span class="line">./hadoop jar ../share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi 10 10</span><br><span class="line"><span class="meta">#</span><span class="bash"> count words</span></span><br><span class="line">./hadoop fs -mkdir -p /test/input</span><br><span class="line">./hadoop fs -ls /</span><br><span class="line">echo "hello world"&gt;&gt; words.txt</span><br><span class="line">./hadoop fs -put words.txt /test/input</span><br><span class="line">./hadoop fs -ls /test/input</span><br><span class="line">./hadoop fs -get /test/input/words.txt ~/data</span><br><span class="line">./hadoop jar ../share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount /test/input /test/output</span><br><span class="line">./hadoop fs -get /test/output/ ~/data</span><br></pre></td></tr></table></figure>
<h2 id="Installation-Hive"><a href="#Installation-Hive" class="headerlink" title="Installation Hive"></a>Installation Hive</h2><h3 id="install-mysql"><a href="#install-mysql" class="headerlink" title="install mysql"></a>install mysql</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker run --name mysql-demo  -e MYSQL_ROOT_PASSWORD=jik920717 -p 3306:3306 -d mysql</span><br><span class="line">docker exec -it xxxx /bin/bash</span><br><span class="line">create user jik1992@'%' identified by 'xxxx';</span><br><span class="line">grant all privileges on *.* to jik1992@'%' with grant option;</span><br><span class="line">flush privileges;</span><br><span class="line"></span><br><span class="line">ALTER USER 'jik1992'@'%' IDENTIFIED BY 'password' PASSWORD EXPIRE NEVER; </span><br><span class="line">ALTER USER 'jik1992'@'%' IDENTIFIED WITH mysql_native_password BY 'jik920717';</span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure>
<h3 id="Setting-Profile"><a href="#Setting-Profile" class="headerlink" title="Setting Profile"></a>Setting Profile</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vim  /etc/profile</span><br><span class="line">export HIVE_HOME=/home/jik1992/ops/apache-hive-3.1.2-bin</span><br><span class="line">export PATH=$PATH:$HIVE_HOME/bin</span><br><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure>
<h3 id="Configuration"><a href="#Configuration" class="headerlink" title="Configuration"></a>Configuration</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> https://blog.csdn.net/qq_37076742/article/details/83547956</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> https://blog.csdn.net/l1028386804/article/details/88014099</span></span><br><span class="line">cp hive-env.sh.template hive-env.sh </span><br><span class="line">cp hive-default.xml.template hive-site.xml </span><br><span class="line">cp hive-log4j2.properties.template hive-log4j2.properties </span><br><span class="line">cp hive-exec-log4j2.properties.template hive-exec-log4j2.properties</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> setting hive-env.sh</span></span><br><span class="line">export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64</span><br><span class="line">export HADOOP_HOME=/bigdata/hadoop/</span><br><span class="line">export HIVE_HOME=/home/jik1992/ops/apache-hive-3.1.2-bin </span><br><span class="line">export HIVE_CONF_DIR=$HIVE_HOME/conf </span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> setting hive-site.xml</span></span><br><span class="line">&lt;property&gt; </span><br><span class="line">	&lt;name&gt;hive.exec.scratchdir&lt;/name&gt; </span><br><span class="line">	&lt;value&gt;/tmp/hive-$&#123;user.name&#125;&lt;/value&gt; </span><br><span class="line">&lt;/property&gt; </span><br><span class="line">&lt;property&gt; </span><br><span class="line">	&lt;name&gt;hive.exec.local.scratchdir&lt;/name&gt; </span><br><span class="line">	&lt;value&gt;/tmp/$&#123;user.name&#125;&lt;/value&gt;  </span><br><span class="line">&lt;/property&gt; </span><br><span class="line">&lt;property&gt; </span><br><span class="line">	&lt;name&gt;hive.downloaded.resources.dir&lt;/name&gt; </span><br><span class="line">	&lt;value&gt;/tmp/hive/resources&lt;/value&gt; </span><br><span class="line">&lt;/property&gt; </span><br><span class="line">&lt;property&gt; </span><br><span class="line">	&lt;name&gt; hive.querylog.location&lt;/name&gt; </span><br><span class="line">	&lt;value&gt;/tmp/$&#123;user.name&#125;&lt;/value&gt; </span><br><span class="line">&lt;/property&gt;</span><br><span class="line">&lt;property&gt; </span><br><span class="line">	&lt;name&gt;hive.server2.logging.operation.log.location&lt;/name&gt; </span><br><span class="line">	&lt;value&gt;/tmp/$&#123;user.name&#125;/operation_logs&lt;/value&gt; </span><br><span class="line">&lt;/property&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> copy mysql-connector-java-5.1.40-bin.jar /lib </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> setting hive-site.xml</span></span><br><span class="line">&lt;property&gt; </span><br><span class="line">	&lt;name&gt;javax.jdo.option.ConnectionURL&lt;/name&gt; </span><br><span class="line">	&lt;value&gt;jdbc:mysql://localhost:3306/hive?createDatabaseIfNotExist=true&amp;characterEncoding=UTF-8&amp;useSSL=false&lt;/value&gt; </span><br><span class="line">&lt;/property&gt; </span><br><span class="line">&lt;property&gt;</span><br><span class="line">	&lt;name&gt;javax.jdo.option.ConnectionDriverName&lt;/name&gt;</span><br><span class="line">	&lt;value&gt;com.mysql.jdbc.Driver&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line">&lt;property&gt;</span><br><span class="line">	&lt;name&gt;javax.jdo.option.ConnectionUserName&lt;/name&gt;</span><br><span class="line">	&lt;value&gt;jik1992&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line">&lt;property&gt;</span><br><span class="line">	&lt;name&gt;javax.jdo.option.ConnectionPassword&lt;/name&gt; </span><br><span class="line">	&lt;value&gt;jikxxxx&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> setting hive-site.xml</span></span><br><span class="line">  &lt;property&gt;</span><br><span class="line">    &lt;name&gt;system:java.io.tmpdir&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;/tmp/hive/java&lt;/value&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">  &lt;property&gt;</span><br><span class="line">    &lt;name&gt;system:user.name&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;$&#123;user.name&#125;&lt;/value&gt;</span><br><span class="line">  &lt;/property&gt;</span><br></pre></td></tr></table></figure>
<h3 id="create-HDFS"><a href="#create-HDFS" class="headerlink" title="create HDFS"></a>create HDFS</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">./hdfs dfs -mkdir /tmp </span><br><span class="line">./hdfs dfs -mkdir -p /usr/hive/warehouse </span><br><span class="line">./hdfs dfs -chmod g+w /tmp </span><br><span class="line">./hdfs dfs -chmod g+w /usr/hive/warehouse</span><br></pre></td></tr></table></figure>
<h3 id="Initial-DB"><a href="#Initial-DB" class="headerlink" title="Initial DB"></a>Initial DB</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span></span><br><span class="line">./schematool -dbType mysql -initSchema</span><br><span class="line"><span class="meta">#</span><span class="bash"> TEST</span></span><br><span class="line">./hive</span><br><span class="line">create table test_hive(id int, name string)  row format delimited fields terminated by '\t' stored as textfile;</span><br><span class="line">load data local inpath '/home/jik1992/ops/apache-hive-3.1.2-bin/test_tb.txt' into table test_hive; </span><br><span class="line">select * from test_hive;</span><br></pre></td></tr></table></figure>
<h1 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># setting core-site.xml</span><br><span class="line">&lt;property&gt;</span><br><span class="line">  &lt;name&gt;hadoop.proxyuser.root.groups&lt;/name&gt;</span><br><span class="line">  &lt;value&gt;*&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line">&lt;property&gt;</span><br><span class="line">  &lt;name&gt;hadoop.proxyuser.root.hosts&lt;/name&gt;</span><br><span class="line">  &lt;value&gt;*&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line"></span><br><span class="line"># settting hive-site.xml</span><br><span class="line">&lt;property&gt;</span><br><span class="line">    &lt;name&gt;beeline.hs2.connection.user&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;hive2&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line">&lt;property&gt;</span><br><span class="line">    &lt;name&gt;beeline.hs2.connection.password&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;hive2&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line">&lt;property&gt;</span><br><span class="line">    &lt;name&gt;beeline.hs2.connection.hosts&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;0.0.0.0:10000&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line">  </span><br><span class="line"># server</span><br><span class="line">nohup ./hiveserver2 &gt;/dev/null 2&gt;&amp;1 &amp;</span><br><span class="line"></span><br><span class="line"># </span><br><span class="line">./beeline </span><br><span class="line">!connect jdbc:hive2://bigserver1:10000</span><br></pre></td></tr></table></figure>
<h1 id="Quote"><a href="#Quote" class="headerlink" title="Quote"></a>Quote</h1><ul>
<li><p><a href="http://blog.51yip.com/hadoop/2013.html" target="_blank" rel="noopener">http://blog.51yip.com/hadoop/2013.html</a></p>
</li>
<li><p><a href="http://blog.51yip.com/hadoop/2019.html" target="_blank" rel="noopener">http://blog.51yip.com/hadoop/2019.html</a></p>
</li>
<li><p><a href="http://blog.51yip.com/hadoop/2351.html" target="_blank" rel="noopener">http://blog.51yip.com/hadoop/2351.html</a></p>
</li>
</ul>
]]></content>
      <categories>
        <category>big data</category>
      </categories>
      <tags>
        <tag>spark</tag>
        <tag>hadoop</tag>
        <tag>hive</tag>
      </tags>
  </entry>
  <entry>
    <title>Kubernete Guide</title>
    <url>/2020/12/11/Kubernetes%20Guide/</url>
    <content><![CDATA[<h1 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h1><h2 id="Feature"><a href="#Feature" class="headerlink" title="Feature"></a>Feature</h2><ul>
<li><p><strong>自我修复</strong></p>
</li>
<li><ul>
<li>在节点故障时重新启动失败的容器，替换和重新部署，保证预期的副本数量；杀死健康检查失败的容器，并且在未准备好之前不会处理客户端请求，确保线上服务不中断。</li>
</ul>
</li>
<li><p><strong>弹性伸缩</strong></p>
</li>
<li><ul>
<li>使用命令、UI或者基于CPU使用情况自动快速扩容和缩容应用程序实例，保证应用业务高峰并发时的高可用性；业务低峰时回收资源，以最小成本运行服务。</li>
</ul>
</li>
<li><p><strong>自动部署和回滚</strong></p>
</li>
<li><ul>
<li>K8S采用滚动更新策略更新应用，一次更新一个Pod，而不是同时删除所有Pod，如果更新过程中出现问题，将回滚更改，确保升级不受影响业务。</li>
</ul>
</li>
<li><p><strong>服务发现和负载均衡</strong></p>
</li>
<li><ul>
<li>K8S为多个容器提供一个统一访问入口（内部IP地址和一个DNS名称），并且负载均衡关联的所有容器，使得用户无需考虑容器IP问题。</li>
</ul>
</li>
<li><p><strong>机密和配置管理</strong></p>
</li>
<li><ul>
<li>管理机密数据和应用程序配置，而不需要把敏感数据暴露在镜像里，提高敏感数据安全性。并可以将一些常用的配置存储在K8S中，方便应用程序使用。</li>
</ul>
</li>
<li><p><strong>存储编排</strong></p>
</li>
<li><ul>
<li>挂载外部存储系统，无论是来自本地存储，公有云（如AWS），还是网络存储（如NFS、GlusterFS、Ceph）都作为集群资源的一部分使用，极大提高存储使用灵活性。</li>
</ul>
</li>
<li><p><strong>批处理</strong></p>
</li>
<li><ul>
<li>提供一次性任务，定时任务；满足批量数据处理和分析的场景。</li>
</ul>
</li>
</ul>
<h2 id="Architecture"><a href="#Architecture" class="headerlink" title="Architecture"></a>Architecture</h2><p><a href="https://kubernetes.io/zh/docs/concepts/overview/components/" target="_blank" rel="noopener">https://kubernetes.io/zh/docs/concepts/overview/components/</a></p>
<p><img src="https://d33wubrfki0l68.cloudfront.net/2475489eaf20163ec0f54ddc1d92aa8d4c87c96b/e7c81/images/docs/components-of-kubernetes.svg" alt="Kubernetes 组件"></p>
<ul>
<li>Contoller plane component<ul>
<li>Kube-apiserver -   一组维护用的restful接口, 提供了资源操作的唯一入口，并提供认证、授权、访问控制、API注册和发现等机制</li>
<li>etcd - highly-available key value store 保存了整个集群的状态</li>
<li>Kube-scheduler - scheduling decisions 负责资源的调度，按照预定的调度策略将Pod调度到相应的机器上</li>
<li>Kube-controller-manager 负责维护集群的状态，比如故障检测、自动扩展、滚动更新等；<ul>
<li>Node Controller</li>
<li>Replication Controller</li>
<li>Endpoints Controller</li>
<li>Service Account &amp; Token Controllers</li>
</ul>
</li>
</ul>
</li>
<li>Node<ul>
<li>kubelet - 每个节点运行的deamon 负责维护容器的生命周期，同时也负责Volume（CVI）和网络（CNI）的管理</li>
<li>kube-proxy - 网络代理 负责为Service提供cluster内部的服务发现和负载均衡</li>
</ul>
</li>
<li>Container Runtime 负责镜像管理以及Pod和容器的真正运行（CRI）<ul>
<li>docker - deprecated</li>
<li>containerd </li>
<li>CRI-O</li>
</ul>
</li>
<li>Addons<ul>
<li>DNS <ul>
<li>coreDNS</li>
</ul>
</li>
<li>Network<ul>
<li>Fannel</li>
<li>Calico</li>
<li>Weave Net</li>
</ul>
</li>
<li>Dashboard</li>
<li>Container Resouce Monitoring</li>
<li>Cluster-level Mertics/Loging</li>
<li>Ingress Controller 为服务提供外网入口</li>
</ul>
</li>
</ul>
<h1 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h1><h2 id="0x00-Docker-Installation"><a href="#0x00-Docker-Installation" class="headerlink" title="0x00 Docker Installation"></a>0x00 Docker Installation</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> removed old docker</span></span><br><span class="line">sudo apt-get purge docker-ce docker-ce-cli containerd.io</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> install docker by https://docs.docker.com/engine/install/centos/</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> docker installation: https://developer.aliyun.com/article/110806</span></span><br><span class="line">curl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> config aliyun mirror </span></span><br><span class="line">sudo tee /etc/docker/daemon.json &lt;&lt;-'EOF'</span><br><span class="line">&#123;</span><br><span class="line">  "registry-mirrors": ["https://9wakipqn.mirror.aliyuncs.com"]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">systemctl daemon-reload &amp;&amp; systemctl restart docker</span><br></pre></td></tr></table></figure>
<h2 id="Minikube-Installation"><a href="#Minikube-Installation" class="headerlink" title="Minikube Installation"></a>Minikube Installation</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> https://minikube.sigs.k8s.io/docs/start/</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> minikube installation: https://developer.aliyun.com/article/221687</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> https://github.com/AliyunContainerService/minikube</span></span><br><span class="line">minikube start  --image-mirror-country cn \</span><br><span class="line">                --registry-mirror=https://xxxx.mirror.aliyuncs.com \</span><br><span class="line">								--image-repository=registry.cn-hangzhou.aliyuncs.com/google_containers \</span><br><span class="line">                --vm-driver=docker \</span><br><span class="line">                --kubernetes-version=1.15.1 \</span><br><span class="line">                --cpus=4 --memory=2200mb</span><br><span class="line">minikube dashboard</span><br><span class="line"><span class="meta">#</span><span class="bash">after https://kubernetes.io/docs/tasks/tools/install-kubectl/</span></span><br><span class="line">kubectl create deployment hello-minikube --image=k8s.gcr.io/echoserver:1.4</span><br><span class="line">kubectl expose deployment hello-minikube --type=NodePort --port=8080</span><br><span class="line">minikube service hello-minikube</span><br></pre></td></tr></table></figure>
<h2 id="Kubernate-Installation"><a href="#Kubernate-Installation" class="headerlink" title="Kubernate Installation"></a>Kubernate Installation</h2><h3 id="Key-Point"><a href="#Key-Point" class="headerlink" title="Key Point"></a>Key Point</h3><ul>
<li>初始化master节点是不工作的，需要worker节点</li>
<li>kubeadm 后必须要有<strong>CNI</strong> 插件，比如 <strong>flannel</strong> 、<strong>calico</strong>，否则 nodes 会一直处于NotReady</li>
<li>kubeadm init 之前确认几步<ul>
<li>“kubeadm reset” if you have already created a previous cluster</li>
<li>Remove the “.kube” folder from the home or root directory</li>
<li>Disable swap permanently on the machine, especially if you are rebooting your linux system</li>
<li>And not to forget, install <a href="https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/create-cluster-kubeadm/#pod-network" target="_blank" rel="noopener">a pod network add-on</a> according to the instructions provided on the add on site (not Kubernetes site)</li>
<li>Follow the post initialization steps given on the command window by kubeadm.</li>
</ul>
</li>
</ul>
<h3 id="0x01-Install-kubelet-kubeadm-kubectl"><a href="#0x01-Install-kubelet-kubeadm-kubectl" class="headerlink" title="0x01 Install kubelet kubeadm kubectl"></a>0x01 Install kubelet kubeadm kubectl</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 添加并信任APT证书</span></span><br><span class="line">curl https://mirrors.aliyun.com/kubernetes/apt/doc/apt-key.gpg | sudo apt-key add -</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 添加源地址</span></span><br><span class="line">sudo add-apt-repository "deb https://mirrors.aliyun.com/kubernetes/apt/ kubernetes-xenial main"</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 更新源并安装最新版 kubenetes</span></span><br><span class="line">sudo apt update &amp;&amp; sudo apt install -y kubelet kubeadm kubectl</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 添加 completion，最好放入 .bashrc 中</span></span><br><span class="line">source &lt;(kubectl completion bash)</span><br><span class="line">source &lt;(kubeadm completion bash)</span><br></pre></td></tr></table></figure>
<h3 id="0x02-Close-swap"><a href="#0x02-Close-swap" class="headerlink" title="0x02 Close swap"></a>0x02 Close swap</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo swapoff -a  </span><br><span class="line">vim /etc/fstab</span><br><span class="line"><span class="meta">#</span><span class="bash"> swap default 0 0</span></span><br><span class="line">free -h # checked</span><br></pre></td></tr></table></figure>
<h3 id="0x03-Install-k8s"><a href="#0x03-Install-k8s" class="headerlink" title="0x03 Install k8s"></a>0x03 Install k8s</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> uninstall</span></span><br><span class="line">kubeadm reset</span><br><span class="line">kubeadm config images pull --image-repository='registry.cn-hangzhou.aliyuncs.com/google_containers'</span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">set</span> --pod-network-cidr <span class="keyword">for</span> fannel network plugins</span></span><br><span class="line">kubeadm init --pod-network-cidr=10.244.0.0/16 \</span><br><span class="line">						 --image-repository='registry.cn-hangzhou.aliyuncs.com/google_containers'</span><br><span class="line">						 </span><br><span class="line"><span class="meta">#</span><span class="bash"> added manager</span></span><br><span class="line">export KUBECONFIG=/etc/kubernetes/admin.conf</span><br><span class="line"><span class="meta">#</span><span class="bash"> or added <span class="keyword">for</span> cluster</span></span><br><span class="line">sudo cp /etc/kubernetes/admin.conf $HOME/</span><br><span class="line">sudo chown $(id -u):$(id -g) $HOME/admin.conf</span><br><span class="line">export KUBECONFIG=$HOME/admin.conf</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> added network plugin corsOS/kube-fannel.yml ref:https://github.com/coreos/flannel</span></span><br><span class="line">kubectl apply -f kube-flannel.yml</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> check nodes status</span></span><br><span class="line">kubectl get nodes</span><br><span class="line">kubectl get pod -o wide --server=192.168.101.229:8080</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> add other nodes</span></span><br><span class="line">sudo kubeadm join 192.168.101.229:6443 \</span><br><span class="line">		--token t05sp0.xxxx \</span><br><span class="line">    --discovery-token-ca-cert-hash sha256:a030d0f19911*******f0df45782ce0040a62d</span><br><span class="line"><span class="meta">#</span><span class="bash"> get new token</span></span><br><span class="line">kubeadm token create     </span><br><span class="line">kubeadm token list</span><br><span class="line"><span class="meta">#</span><span class="bash"> get ca-cert <span class="built_in">hash</span></span></span><br><span class="line">openssl x509 -pubkey -in /etc/kubernetes/pki/ca.crt | openssl rsa -pubin -outform der 2&gt;/dev/null | sha256sum | awk '&#123;print $1&#125;'</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Test</span></span><br><span class="line">kubectl taint nodes --all node-role.kubernetes.io/master-</span><br><span class="line">kubectl create deployment nginx --image=nginx</span><br><span class="line">kubectl expose deployment nginx --port=80 --type=NodePort</span><br><span class="line">kubectl get pods,svc</span><br><span class="line">curl http://192.168.101.233:32039</span><br></pre></td></tr></table></figure>
<h3 id="0x04-Install-Dashboard"><a href="#0x04-Install-Dashboard" class="headerlink" title="0x04 Install Dashboard"></a>0x04 Install Dashboard</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Dashboard https://github.com/kubernetes/dashboard</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> edit</span></span><br><span class="line">spec:</span><br><span class="line">   type: NodePort     # </span><br><span class="line">   ports:</span><br><span class="line">     - port: 443</span><br><span class="line">       targetPort: 8443</span><br><span class="line">       nodePort: 30001   #</span><br><span class="line">   selector:</span><br><span class="line">     k8s-app: kubernetes-dashboard</span><br><span class="line">&lt;&lt; EOF     </span><br><span class="line">kubectl apply -f dashboard.yml</span><br><span class="line"><span class="meta">#</span><span class="bash"> added user</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> https://github.com/kubernetes/dashboard/blob/master/docs/user/access-control/creating-sample-user.md</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> checkout token </span></span><br><span class="line">kubectl -n kubernetes-dashboard describe secret $(kubectl -n kubernetes-dashboard get secret | grep admin-user | awk '&#123;print $1&#125;')</span><br></pre></td></tr></table></figure>
<h3 id="Install-helm3"><a href="#Install-helm3" class="headerlink" title="Install helm3"></a>Install helm3</h3><p>yml file repo</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">snap install helm --classic</span><br><span class="line">helm repo add stable http://mirror.azure.cn/kubernetes/charts/</span><br><span class="line">helm repo list</span><br><span class="line">helm repo update</span><br><span class="line">helm search repo nginx-ingress</span><br><span class="line">helm install --set name=nginx-ingress stable/nginx-ingress --generate-name</span><br></pre></td></tr></table></figure>
<h3 id="Debug-k8s"><a href="#Debug-k8s" class="headerlink" title="Debug k8s"></a>Debug k8s</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> restart</span></span><br><span class="line">systemctl restart docker</span><br><span class="line">systemctl restart  kubelet</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">log</span> <span class="keyword">for</span> checking kubelet</span></span><br><span class="line">systemctl status  kubelet</span><br><span class="line">journalctl -u kubelet --all</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> check images needed pull</span></span><br><span class="line">kubeadm config images list</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> check kebe-system pods and loging</span></span><br><span class="line">kubectl get pods -n kube-system -o wide</span><br><span class="line">kubectl describe pods weave -n kube-system</span><br><span class="line">kubectl logs weave-net-gq9pn -p -c weave -n kube-system</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> permanmently delete some .yml pods</span></span><br><span class="line">kubectl get deployments --all-namespaces</span><br><span class="line">kubectl delete deployment xxx</span><br><span class="line"></span><br><span class="line">kubectl scale deployments/notepad --replicas=100</span><br><span class="line">kubectl set image deployments/notepad notepad=yhlben/notepad:new</span><br><span class="line">kubectl rollout undo deployments/notepad</span><br><span class="line"></span><br><span class="line">kubectl set image deployment/nginx-deployment nginx=nginx:1.9.1</span><br><span class="line">kubectl deployment "nginx-deployment" image updated</span><br></pre></td></tr></table></figure>
<h3 id="Docker-Private-Registry"><a href="#Docker-Private-Registry" class="headerlink" title="Docker Private Registry"></a>Docker Private Registry</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">    -p 5000:5000 \</span><br><span class="line">    -v /opt/data/registry:/var/lib/registry \</span><br><span class="line">    registry</span><br><span class="line"></span><br><span class="line">docker login 127.0.0.1:5000</span><br><span class="line">docker build -f x.dockerfile -t python:3.7-alpine</span><br><span class="line">docker tag python:3.7-alpine registry.container.sandseasoft.com/python:master</span><br><span class="line">docker push registry.container.sandseasoft.com/python:master</span><br></pre></td></tr></table></figure>
<h1 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h1><h2 id="Minikube"><a href="#Minikube" class="headerlink" title="Minikube"></a>Minikube</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">minikube by macos</span></span><br><span class="line">brew install minikube</span><br><span class="line">minikube stop</span><br><span class="line">minikube delete</span><br><span class="line"><span class="meta">#</span><span class="bash"> enviroment by macos</span></span><br><span class="line">minikube start --driver=hyperkit </span><br><span class="line">minikube addons enable ingress</span><br><span class="line">minikube service dashboard --url</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="built_in">test</span> NodePort</span></span><br><span class="line">kubectl create deployment web --image=gcr.io/google-samples/hello-app:1.0</span><br><span class="line">kubectl expose deployment web --type=NodePort --port=8080</span><br><span class="line">minikube service web --url</span><br></pre></td></tr></table></figure>
<h2 id="Kubenetes"><a href="#Kubenetes" class="headerlink" title="Kubenetes"></a>Kubenetes</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">kubectl </span></span><br><span class="line">kubectl get pods</span><br><span class="line">kubectl get service</span><br><span class="line">kubectl get ingress</span><br><span class="line">kubectl port-forward service/web 10001:8080</span><br><span class="line">kubectl get secrets</span><br><span class="line">kubectl describe service</span><br><span class="line">kubectl describe ingress</span><br><span class="line">kubectl describe pods</span><br><span class="line">kubectl delete services my-service</span><br><span class="line">kubectl rollout restart deployment my-service</span><br></pre></td></tr></table></figure>
<h2 id="Yml-configuration"><a href="#Yml-configuration" class="headerlink" title="Yml configuration"></a>Yml configuration</h2><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">my-service</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">NodePort</span> </span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">tomcat</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">80</span> </span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">8020</span> </span><br><span class="line">      <span class="attr">nodePort:</span> <span class="number">9000</span> </span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ReplicationController</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">tomcat</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">default</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">tomcat</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">tomcat</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">tomcat</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">"config"</span></span><br><span class="line">        <span class="attr">hostPath:</span></span><br><span class="line">          <span class="attr">path:</span> <span class="string">"/data/xxx"</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">forme</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">forme:k8s</span></span><br><span class="line">        <span class="attr">resources:</span></span><br><span class="line">          <span class="attr">limits:</span></span><br><span class="line">            <span class="attr">alpha.kubernetes.io/nvidia-gpu:</span> <span class="number">1</span></span><br><span class="line">            <span class="attr">cpu:</span> <span class="number">8</span></span><br><span class="line">            <span class="attr">memory:</span> <span class="string">4Gi</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">8020</span> </span><br><span class="line">        <span class="attr">volumeMounts:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">"config"</span></span><br><span class="line">          <span class="attr">mountPath:</span> <span class="string">"/home/docker/code"</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">networking.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">example-ingress</span></span><br><span class="line">  <span class="attr">annotations:</span></span><br><span class="line">    <span class="attr">nginx.ingress.kubernetes.io/rewrite-target:</span> <span class="string">/$1</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">host:</span> <span class="string">hello-world.info</span></span><br><span class="line">      <span class="attr">http:</span></span><br><span class="line">        <span class="attr">paths:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">path:</span> <span class="string">/</span></span><br><span class="line">            <span class="attr">pathType:</span> <span class="string">Prefix</span></span><br><span class="line">            <span class="attr">backend:</span></span><br><span class="line">              <span class="attr">service:</span></span><br><span class="line">                <span class="attr">name:</span> <span class="string">web</span></span><br><span class="line">                <span class="attr">port:</span></span><br><span class="line">                  <span class="attr">number:</span> <span class="number">8080</span></span><br></pre></td></tr></table></figure>
<h2 id="Docker-private-register"><a href="#Docker-private-register" class="headerlink" title="Docker private register"></a>Docker private register</h2><h2 id="Using-aliyun"><a href="#Using-aliyun" class="headerlink" title="Using aliyun"></a>Using aliyun</h2><ul>
<li><p>去<code>容器镜像服务</code> 设置个人版仓库和密码</p>
</li>
<li><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker login --username=jik**@163.com registry.cn-shanghai.aliyuncs.com</span><br><span class="line">docker pull registry.cn-shenzhen.aliyuncs.com/jik1992/test:latest</span><br><span class="line">cat ~/.docker/config.json</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> create secret </span></span><br><span class="line">kubectl create secret docker-registry registry-secret \</span><br><span class="line">    --docker-server=registry.cn-shenzhen.aliyuncs.com \</span><br><span class="line">    --docker-username=jik1992 \</span><br><span class="line">    --docker-password=jik920717 \</span><br><span class="line">    -n default</span><br><span class="line">    </span><br><span class="line"><span class="meta">#</span><span class="bash"> edit .yml</span></span><br><span class="line">   spec:</span><br><span class="line">      serviceAccountName: test</span><br><span class="line">      imagePullSecrets:</span><br><span class="line">      - name: registry-secret #!important</span><br><span class="line">      containers:</span><br><span class="line">      - name: test</span><br><span class="line">        image: registry.cn-shenzhen.aliyuncs.com/jik1992/test:latest</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h1 id="Quate"><a href="#Quate" class="headerlink" title="Quate"></a>Quate</h1><ul>
<li><a href="https://yeasy.gitbook.io/docker_practice/" target="_blank" rel="noopener">https://yeasy.gitbook.io/docker_practice/</a></li>
<li><a href="https://www.cnblogs.com/double-dong/p/11483670.html" target="_blank" rel="noopener">https://www.cnblogs.com/double-dong/p/11483670.html</a></li>
<li><a href="https://kubernetes.io/zh/docs/home/" target="_blank" rel="noopener">https://kubernetes.io/zh/docs/home/</a></li>
<li><a href="https://kubernetes.io/zh/docs/tasks/configure-pod-container/pull-image-private-registry/" target="_blank" rel="noopener">https://kubernetes.io/zh/docs/tasks/configure-pod-container/pull-image-private-registry/</a></li>
<li><a href="https://kubernetes.io/docs/tasks/access-application-cluster/ingress-minikube/" target="_blank" rel="noopener">https://kubernetes.io/docs/tasks/access-application-cluster/ingress-minikube/</a></li>
<li><a href="https://sysadmins.co.za/https-using-letsencrypt-and-traefik-with-k3s/" target="_blank" rel="noopener">https://sysadmins.co.za/https-using-letsencrypt-and-traefik-with-k3s/</a></li>
</ul>
]]></content>
      <categories>
        <category>ops</category>
      </categories>
      <tags>
        <tag>docker</tag>
        <tag>kubernete</tag>
        <tag>minikube</tag>
      </tags>
  </entry>
  <entry>
    <title>MCU Ardunio Codes</title>
    <url>/2020/02/25/MCU%20Arduino%20Codes/</url>
    <content><![CDATA[<h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>​    目前拿到的MCU有ESP8266、ESP32 、Arduino Nano、ESP 8266 01 四块，都能够基于ardunio做传感器实验</p>
<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gc98zjrr7gj30u60lctba.jpg" alt></p>
<h1 id="使用IDE"><a href="#使用IDE" class="headerlink" title="使用IDE"></a>使用IDE</h1><h2 id="Clion"><a href="#Clion" class="headerlink" title="Clion"></a>Clion</h2><ol>
<li><p>install Arduino IDE</p>
</li>
<li><p>install CP210x driver</p>
</li>
<li><p>install VScode , PlatformIO Plugin</p>
</li>
<li><p>new sketch file , set c++ 14 , buard 9600, run [project]-upload</p>
<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gc9571cmcwj317g0qygn4.jpg" alt></p>
</li>
</ol>
<h2 id="PlatformIO-VSCode-recommend"><a href="#PlatformIO-VSCode-recommend" class="headerlink" title="PlatformIO VSCode (recommend)"></a>PlatformIO VSCode (recommend)</h2><ol>
<li>install vscode</li>
<li>install platformio plugin</li>
<li>new sketch , arduino nano amega318/9600 buard</li>
<li>use build/upload/monitor</li>
<li>configure <code>platformio.ini</code> ,set <code>lib_deps</code></li>
</ol>
<h2 id="Arduino-Cli"><a href="#Arduino-Cli" class="headerlink" title="Arduino Cli"></a>Arduino Cli</h2><ul>
<li><a href="https://github.com/arduino/arduino-cli" target="_blank" rel="noopener">https://github.com/arduino/arduino-cli</a></li>
</ul>
<h2 id="Others"><a href="#Others" class="headerlink" title="Others"></a>Others</h2><ul>
<li>design <code>https://fritzing.org/download/</code></li>
</ul>
<h1 id="场景"><a href="#场景" class="headerlink" title="场景"></a>场景</h1><ul>
<li><a href="https://www.w3cschool.cn/arduino" target="_blank" rel="noopener">https://www.w3cschool.cn/arduino</a></li>
</ul>
<h2 id="引脚"><a href="#引脚" class="headerlink" title="引脚"></a>引脚</h2><p><img src="https://atts.w3cschool.cn/attachments/tuploads/arduino/board_description.jpg" alt="Arduino UNO板"></p>
<p><img src="https://tva1.sinaimg.cn/large/00831rSTgy1gcbbqdypi4j31e50u042v.jpg" alt></p>
<p>用例</p>
<ul>
<li><a href="https://github.com/jik1992/training_arduino" target="_blank" rel="noopener">https://github.com/jik1992/training_arduino</a></li>
<li><a href="https://github.com/arduino/arduino-cli" target="_blank" rel="noopener">https://github.com/arduino/arduino-cli</a></li>
</ul>
<h3 id="常用语法"><a href="#常用语法" class="headerlink" title="常用语法"></a>常用语法</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">()</span></span>&#123;</span><br><span class="line">  #引脚使用</span><br><span class="line">	pinMode(<span class="number">13</span>, OUTPUT);</span><br><span class="line">	digitalWrite(pin, value) </span><br><span class="line">  <span class="meta">#random</span></span><br><span class="line">	randomSeed(analogRead(<span class="number">0</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="meta">#others</span></span><br><span class="line">  delay(<span class="number">1000</span>); </span><br><span class="line">  </span><br><span class="line">  #COM串口通信</span><br><span class="line">  Serial.begin(<span class="number">9600</span>);</span><br><span class="line">  Serial.println(sensorValue);</span><br><span class="line">  Serial.read();</span><br><span class="line">  <span class="keyword">int</span> sensorValue = analogRead(A0);</span><br><span class="line">  Serial.println(sensorValue);</span><br><span class="line"></span><br><span class="line">  #PWM</span><br><span class="line">  #analogRead values go from <span class="number">0</span> to <span class="number">1023</span>, analogWrite values 	from <span class="number">0</span> to <span class="number">255</span></span><br><span class="line">  <span class="meta">#https:<span class="comment">//www.arduino.cc/reference/en/language/functions/analog-io/analogwrite/</span></span></span><br><span class="line">  val = analogRead(analogPin);  <span class="comment">// read the input pin</span></span><br><span class="line">  analogWrite(ledPin, val / <span class="number">4</span>); </span><br><span class="line">  </span><br><span class="line">  randNumber = random(<span class="number">10</span>, <span class="number">20</span>);<span class="comment">// print a random number from 10 to 19</span></span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="常用库"><a href="#常用库" class="headerlink" title="常用库"></a>常用库</h1><h2 id="DHT11"><a href="#DHT11" class="headerlink" title="DHT11"></a>DHT11</h2><ul>
<li><a href="https://platformio.org/lib/show/19/DHT sensor library/examples" target="_blank" rel="noopener">https://platformio.org/lib/show/19/DHT%20sensor%20library/examples</a></li>
</ul>
<p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gcab3qgmtaj30xc0hhdh2.jpg" alt></p>
<h3 id="U8g2-OLED"><a href="#U8g2-OLED" class="headerlink" title="U8g2 OLED"></a>U8g2 OLED</h3><p>U8G2_SSD1306_128X64_NONAME_1_HW_I2C</p>
<ul>
<li><a href="https://github.com/olikraus/u8g2" target="_blank" rel="noopener">https://github.com/olikraus/u8g2</a></li>
</ul>
<p><img src="https://startingelectronics.org/tutorials/arduino/modules/OLED-128x64-I2C-display/arduino-oled-connection.jpg" alt="How to Connect the Geekcreit 0.96 Inch OLED I2C Display to Arduino - Wiring Diagram"></p>
<h2 id="Clock-DS3231"><a href="#Clock-DS3231" class="headerlink" title="Clock DS3231"></a>Clock DS3231</h2><ul>
<li><a href="https://platformio.org/lib/show/1197/RTCLib/examples" target="_blank" rel="noopener">https://platformio.org/lib/show/1197/RTCLib/examples</a></li>
</ul>
<p><img src="https://i2.wp.com/randomnerdtutorials.com/wp-content/uploads/2016/10/rtc.png?resize=714%2C393&amp;ssl=1" alt="img"></p>
<h2 id="SG90"><a href="#SG90" class="headerlink" title="SG90"></a>SG90</h2><ul>
<li><a href="https://platformio.org/lib/show/883/Servo?utm_source=platformio&amp;utm_medium=piohome" target="_blank" rel="noopener">https://platformio.org/lib/show/883/Servo?utm_source=platformio&amp;utm_medium=piohome</a></li>
</ul>
<p><img src="https://www.electronics-lab.com/wp-content/uploads/2018/05/servo_bb-schematics.png" alt="img"></p>
<h2 id="JoyStick"><a href="#JoyStick" class="headerlink" title="JoyStick"></a>JoyStick</h2><h3 id="Connection"><a href="#Connection" class="headerlink" title="Connection"></a>Connection</h3><ul>
<li>VCC -&gt; 5V</li>
<li>GND -&gt; GND</li>
<li>VRx -&gt; A0</li>
<li>VRy -&gt; A1</li>
<li>SW -&gt; D2</li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> VRx = A0;</span><br><span class="line"><span class="keyword">int</span> VRy = A1;</span><br><span class="line"><span class="keyword">int</span> SW = <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> xPosition = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> yPosition = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> SW_state = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> mapX = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> mapY = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  Serial.begin(<span class="number">9600</span>); </span><br><span class="line">  </span><br><span class="line">  pinMode(VRx, INPUT);</span><br><span class="line">  pinMode(VRy, INPUT);</span><br><span class="line">  pinMode(SW, INPUT_PULLUP); </span><br><span class="line">  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  xPosition = analogRead(VRx);</span><br><span class="line">  yPosition = analogRead(VRy);</span><br><span class="line">  SW_state = digitalRead(SW);</span><br><span class="line">  mapX = <span class="built_in">map</span>(xPosition, <span class="number">0</span>, <span class="number">1023</span>, <span class="number">-512</span>, <span class="number">512</span>);</span><br><span class="line">  mapY = <span class="built_in">map</span>(yPosition, <span class="number">0</span>, <span class="number">1023</span>, <span class="number">-512</span>, <span class="number">512</span>);</span><br><span class="line">  </span><br><span class="line">  Serial.print(<span class="string">"X: "</span>);</span><br><span class="line">  Serial.print(mapX);</span><br><span class="line">  Serial.print(<span class="string">" | Y: "</span>);</span><br><span class="line">  Serial.print(mapY);</span><br><span class="line">  Serial.print(<span class="string">" | Button: "</span>);</span><br><span class="line">  Serial.println(SW_state);</span><br><span class="line"></span><br><span class="line">  delay(<span class="number">100</span>);</span><br><span class="line">  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="MPU6050"><a href="#MPU6050" class="headerlink" title="MPU6050"></a>MPU6050</h2><ul>
<li><a href="https://platformio.org/lib/show/221/MPU6050?utm_source=platformio&amp;utm_medium=piohome" target="_blank" rel="noopener">https://platformio.org/lib/show/221/MPU6050?utm_source=platformio&amp;utm_medium=piohome</a></li>
</ul>
<p><img src="https://howtomechatronics.com/wp-content/uploads/2019/04/Arduino-and-MPU6050-Circuit-Diagram.png" alt="Arduino and MPU6050 Circuit Diagram" style="zoom:80%;"></p>
<h2 id><a href="#" class="headerlink" title=" "></a> </h2><h2 id="Buzzer"><a href="#Buzzer" class="headerlink" title="Buzzer"></a>Buzzer</h2><h3 id="Connection-1"><a href="#Connection-1" class="headerlink" title="Connection"></a>Connection</h3><ul>
<li>VCC</li>
<li>D4</li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Arduino.h&gt;</span></span></span><br><span class="line"><span class="keyword">int</span> pinBuzzer = <span class="number">4</span>; <span class="comment">//管脚D3连接到蜂鸣器模块的信号脚</span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  pinMode(pinBuzzer, OUTPUT); <span class="comment">//设置pinBuzzer脚为输出状态</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123; </span><br><span class="line">   <span class="keyword">long</span> frequency = <span class="number">300</span>; <span class="comment">//频率, 单位Hz</span></span><br><span class="line"> </span><br><span class="line">   <span class="comment">//用tone()函数发出频率为frequency的波形</span></span><br><span class="line">   tone(pinBuzzer, frequency );</span><br><span class="line">   delay(<span class="number">1000</span>); <span class="comment">//等待1000毫秒</span></span><br><span class="line">   </span><br><span class="line">   noTone(pinBuzzer);<span class="comment">//停止发声</span></span><br><span class="line">   delay(<span class="number">2000</span>); <span class="comment">//等待2000毫秒</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://hackster.imgix.net/uploads/attachments/495697/F3DDJQ4IAP6UGTG.png?auto=compress%2Cformat&amp;w=680&amp;h=510&amp;fit=max" alt="img"></p>
<h1 id="IR-sensor"><a href="#IR-sensor" class="headerlink" title="IR sensor"></a>IR sensor</h1><ul>
<li><a href="https://platformio.org/lib/show/4/IRremote?utm_source=platformio&amp;utm_medium=piohome" target="_blank" rel="noopener">https://platformio.org/lib/show/4/IRremote?utm_source=platformio&amp;utm_medium=piohome</a></li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;IRremote.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> RECV_PIN = <span class="number">11</span>;</span><br><span class="line"></span><br><span class="line"><span class="function">IRrecv <span class="title">irrecv</span><span class="params">(RECV_PIN)</span></span>;</span><br><span class="line">decode_results results;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  Serial.begin(<span class="number">9600</span>);</span><br><span class="line">  Serial.println(<span class="string">"Enabling IRin"</span>);</span><br><span class="line">  irrecv.enableIRIn(); <span class="comment">// Start the receiver</span></span><br><span class="line">  Serial.println(<span class="string">"Enabled IRin"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">IRsend irsend;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (irrecv.decode(&amp;results)) &#123;</span><br><span class="line">    Serial.println(results.value, HEX);</span><br><span class="line">    irrecv.resume(); <span class="comment">// Receive the next value</span></span><br><span class="line">  &#125;</span><br><span class="line">  delay(<span class="number">100</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">		irsend.sendSony(<span class="number">0x4AB0F7B6</span>, <span class="number">12</span>);</span><br><span class="line">		delay(<span class="number">40</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://www.yiboard.com/data/attachment/forum/201908/17/145506ev5e97e4h94x2h2m.png" alt="img" style="zoom:80%;"></p>
<h1 id="BigSound"><a href="#BigSound" class="headerlink" title="BigSound"></a>BigSound</h1><ul>
<li>D0 ( Digital output ) –&gt; Digital 3</li>
<li>+ –&gt; 5V</li>
<li>G ( ground ) –&gt; GND</li>
<li>AO ( Analog output ) –&gt; Analog 0</li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> Analog_Pin = A0; </span><br><span class="line"><span class="keyword">int</span> Digital_Pin = <span class="number">3</span>; </span><br><span class="line">  </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  pinMode(Analog_Pin, INPUT);</span><br><span class="line">  pinMode(Digital_Pin, INPUT);</span><br><span class="line">       </span><br><span class="line">  Serial.begin (<span class="number">9600</span>); </span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">float</span> Analog;</span><br><span class="line">  <span class="keyword">int</span> Digital;</span><br><span class="line">    </span><br><span class="line"> </span><br><span class="line">  Analog = analogRead (Analog_Pin);</span><br><span class="line">  Digital = digitalRead (Digital_Pin);</span><br><span class="line">    </span><br><span class="line"> </span><br><span class="line">  Serial.print(<span class="string">"Analog voltage :"</span>); </span><br><span class="line">  Serial.print(Analog, <span class="number">4</span>);  </span><br><span class="line">  Serial.print(<span class="string">"V, "</span>);</span><br><span class="line">  Serial.print(<span class="string">"Limit :"</span>);</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">if</span>(Digital==<span class="number">1</span>)</span><br><span class="line">  &#123;</span><br><span class="line">      Serial.println(<span class="string">" reached "</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">      Serial.println(<span class="string">" Not yet reached "</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  Serial.println(<span class="string">"----------------------------------------------------------------"</span>);</span><br><span class="line">  delay (<span class="number">200</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Blink"><a href="#Blink" class="headerlink" title="Blink"></a>Blink</h3><p><a href="https://github.com/blinker-iot/blinker-doc" target="_blank" rel="noopener">https://github.com/blinker-iot/blinker-doc</a></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BLINKER_WIFI</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Blinker.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> auth[] = <span class="string">"0a54e5d24068"</span>;</span><br><span class="line"><span class="keyword">char</span> ssid[] = <span class="string">"Home_901"</span>;</span><br><span class="line"><span class="keyword">char</span> pswd[] = <span class="string">"Aa123456"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 新建组件对象</span></span><br><span class="line"><span class="function">BlinkerButton <span class="title">Button1</span><span class="params">(<span class="string">"btn-abc"</span>)</span></span>;</span><br><span class="line"><span class="function">BlinkerNumber <span class="title">Number1</span><span class="params">(<span class="string">"num-abc"</span>)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> counter = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 按下按键即会执行该函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">button1_callback</span><span class="params">(<span class="keyword">const</span> String &amp; state)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    BLINKER_LOG(<span class="string">"get button state: "</span>, state);</span><br><span class="line">    digitalWrite(LED_BUILTIN, !digitalRead(LED_BUILTIN));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 如果未绑定的组件被触发，则会执行其中内容</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dataRead</span><span class="params">(<span class="keyword">const</span> String &amp; data)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    BLINKER_LOG(<span class="string">"Blinker readString: "</span>, data);</span><br><span class="line">    counter++;</span><br><span class="line">    Number1.print(counter);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 初始化串口</span></span><br><span class="line">    Serial.begin(<span class="number">115200</span>);</span><br><span class="line">    BLINKER_DEBUG.stream(Serial);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 初始化有LED的IO</span></span><br><span class="line">    pinMode(LED_BUILTIN, OUTPUT);</span><br><span class="line">    digitalWrite(LED_BUILTIN, HIGH);</span><br><span class="line">    <span class="comment">// 初始化blinker</span></span><br><span class="line">    Blinker.begin(auth, ssid, pswd);</span><br><span class="line">    Blinker.attachData(dataRead);</span><br><span class="line"></span><br><span class="line">    Button1.attach(button1_callback);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Blinker.run();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Relay"><a href="#Relay" class="headerlink" title="## Relay"></a>## Relay</h3><p><img src="https://tva1.sinaimg.cn/large/0082zybpgy1gc840jxmucj30rs0fsta8.jpg" alt></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">   Relay</span></span><br><span class="line"><span class="comment">   继电器控制，通过串口控制继电器开关LED灯</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">int</span> incomedate = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> relayPin = <span class="number">13</span>; <span class="comment">//继电器引脚</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  pinMode(relayPin, OUTPUT);</span><br><span class="line">  Serial.begin(<span class="number">9600</span>); <span class="comment">//设置串口波特率9600</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (Serial.available() &gt; <span class="number">0</span>)<span class="comment">//串口接收到数据</span></span><br><span class="line">  &#123;</span><br><span class="line">    incomedate = Serial.read();<span class="comment">//获取串口接收到的数据</span></span><br><span class="line">    <span class="keyword">if</span> (incomedate == <span class="string">'H'</span>)</span><br><span class="line">    &#123;</span><br><span class="line">      digitalWrite(relayPin, HIGH);</span><br><span class="line">      Serial.println(<span class="string">"LED OPEN!"</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (incomedate == <span class="string">'L'</span>)</span><br><span class="line">    &#123;</span><br><span class="line">      digitalWrite(relayPin, LOW);</span><br><span class="line">      Serial.println(<span class="string">"LED CLOSE!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="Light"><a href="#Light" class="headerlink" title="Light"></a>Light</h1><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> D7 = <span class="number">13</span>; <span class="comment">//D7 pin</span></span><br><span class="line"><span class="keyword">int</span> state = <span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="comment">// put your setup code here, to run once:</span></span><br><span class="line">  Serial.begin(<span class="number">115200</span>);</span><br><span class="line">  pinMode(D7, OUTPUT); <span class="comment">//定义LED灯输入模式；</span></span><br><span class="line">  Serial.println(<span class="string">"v0.1.1"</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="comment">// put your main code here, to run repeatedly:</span></span><br><span class="line">  delay(<span class="number">1000</span>);</span><br><span class="line">  Serial.print(<span class="string">"toggle: "</span>);</span><br><span class="line">  Serial.println(state);</span><br><span class="line">  <span class="keyword">if</span> (state == <span class="number">0</span>) &#123;</span><br><span class="line">    state = <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> &#123;</span><br><span class="line">    state = <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (state == <span class="number">1</span>) &#123;</span><br><span class="line">    digitalWrite(D7, <span class="number">50</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    digitalWrite(D7, LOW);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="Keyboard"><a href="#Keyboard" class="headerlink" title="Keyboard"></a>Keyboard</h1><ul>
<li><a href="https://platformio.org/lib/show/891/Keyboard?utm_source=platformio&amp;utm_medium=piohome" target="_blank" rel="noopener">https://platformio.org/lib/show/891/Keyboard?utm_source=platformio&amp;utm_medium=piohome</a></li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="AiThinker-A9G"><a href="#AiThinker-A9G" class="headerlink" title="AiThinker A9G"></a>AiThinker A9G</h2><ul>
<li><a href="http://wiki.ai-thinker.com/gprs" target="_blank" rel="noopener">http://wiki.ai-thinker.com/gprs</a></li>
<li></li>
</ul>
]]></content>
      <categories>
        <category>soc</category>
      </categories>
      <tags>
        <tag>mcu</tag>
        <tag>arduino</tag>
      </tags>
  </entry>
  <entry>
    <title>Saas SpringCloud Greenwich.RC2</title>
    <url>/2019/01/20/Saas%20SpringCloud%20Greenwich.RC2/</url>
    <content><![CDATA[<h1 id="参考版本"><a href="#参考版本" class="headerlink" title="参考版本"></a>参考版本</h1><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.1.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"> <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">spring-cloud.version</span>&gt;</span>Greenwich.RC2<span class="tag">&lt;/<span class="name">spring-cloud.version</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line"> <span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring-cloud.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="遇到一些坑"><a href="#遇到一些坑" class="headerlink" title="遇到一些坑"></a>遇到一些坑</h1><ol>
<li><p>目前发现和 fastjson 版本有冲突，锁定版本为 1.2.47</p>
</li>
<li><p>springboot 和 springcloud版本和包名要锁死，具体配置依赖版本和名称可以去<a href="https://start.spring.io/" target="_blank" rel="noopener">https://start.spring.io/</a> 参考</p>
</li>
<li><p>Eureka 缺少一些关系依赖，原因不明，加上即可</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!--spring eureka 补丁依赖--&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;commons-configuration&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;commons-configuration&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;1.9&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;commons-lang&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;commons-lang&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;2.6&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h1 id="主要组件"><a href="#主要组件" class="headerlink" title="主要组件"></a>主要组件</h1><h2 id="springcloud-conf"><a href="#springcloud-conf" class="headerlink" title="springcloud-conf"></a>springcloud-conf</h2><p>分布式配置中心，不支持主动通知，配合 git 仓库使用，比较方便的集中式配置管理。 对标方案  zookeeper 和 apollo</p>
<h3 id="主服务搭建"><a href="#主服务搭建" class="headerlink" title="主服务搭建"></a>主服务搭建</h3><h4 id="依赖"><a href="#依赖" class="headerlink" title="依赖"></a>依赖</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-cloud-starter-config&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-cloud-config-server&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure>
<h4 id="注解"><a href="#注解" class="headerlink" title="注解"></a>注解</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@EnableConfigServer</span><br></pre></td></tr></table></figure>
<h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><p>bootstrap.properties</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">spring.application.name:slff-cloud-conf</span><br><span class="line">spring.cloud.config.server.git.uri:https://gitee.com/hangzhouyiru/slff-prop</span><br><span class="line">spring.cloud.config.server.git.username:jik1992</span><br><span class="line">spring.cloud.config.server.git.password:xxx</span><br></pre></td></tr></table></figure>
<h3 id="客户端挂载"><a href="#客户端挂载" class="headerlink" title="客户端挂载"></a>客户端挂载</h3><h4 id="依赖-1"><a href="#依赖-1" class="headerlink" title="依赖"></a>依赖</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-cloud-starter-config&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure>
<h4 id="注解-1"><a href="#注解-1" class="headerlink" title="注解"></a>注解</h4><h4 id="配置-1"><a href="#配置-1" class="headerlink" title="配置"></a>配置</h4><p>bootstrap.properties</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">spring.cloud.config.name=yiru-bill</span><br><span class="line">spring.cloud.config.profile=test</span><br><span class="line">spring.cloud.config.uri=http://47.98.52.80:8888/</span><br><span class="line">spring.cloud.config.label=master</span><br></pre></td></tr></table></figure>
<h2 id="springcloud-eureka"><a href="#springcloud-eureka" class="headerlink" title="springcloud-eureka"></a>springcloud-eureka</h2><p>注册中心，CAP 中强调 CP 两个点，强调数据的高可用，没有选举，每个分布式节点对等。</p>
<p>也有不少要注意的地方</p>
<h3 id="主服务搭建-1"><a href="#主服务搭建-1" class="headerlink" title="主服务搭建"></a>主服务搭建</h3><h4 id="依赖-2"><a href="#依赖-2" class="headerlink" title="依赖"></a>依赖</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-cloud-starter-netflix-eureka-client&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-cloud-starter-netflix-eureka-server&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure>
<h4 id="注解-2"><a href="#注解-2" class="headerlink" title="注解"></a>注解</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@EnableEurekaServer</span><br></pre></td></tr></table></figure>
<h4 id="配置-2"><a href="#配置-2" class="headerlink" title="配置"></a>配置</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">spring:</span><br><span class="line">  application:</span><br><span class="line">    name: slff-cloud-eureka</span><br><span class="line">  security:</span><br><span class="line">    user:</span><br><span class="line">      name: admin</span><br><span class="line">      password: xxx</span><br><span class="line"></span><br><span class="line">logging:</span><br><span class="line">  level:</span><br><span class="line">    org:</span><br><span class="line">      springframework:</span><br><span class="line">        security: INFO</span><br><span class="line">server:</span><br><span class="line">  port: 8001</span><br><span class="line"></span><br><span class="line">eureka:</span><br><span class="line">  instance:</span><br><span class="line">    preferIpAddress: true</span><br><span class="line">    hostname: 47.96.153.146</span><br><span class="line">  server:</span><br><span class="line">    enable-self-preservation: false</span><br><span class="line">  client:</span><br><span class="line">    serviceUrl:</span><br><span class="line">      defaultZone: http://admin:xxx@47.98.52.80:8761/eureka/</span><br><span class="line">    registerWithEureka: false</span><br><span class="line">    fetchRegistry: false</span><br></pre></td></tr></table></figure>
<h4 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h4><p>监听类</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@Component</span><br><span class="line">public class EurekaStateChangeListener &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  private static       Logger logger = LoggerFactory.getLogger(EurekaStateChangeListener.class);</span><br><span class="line">  private static final String COLON  = &quot;:&quot;;</span><br><span class="line"></span><br><span class="line">  @EventListener</span><br><span class="line">  public void listen(EurekaInstanceCanceledEvent eurekaInstanceCanceledEvent) &#123;</span><br><span class="line">    // 服务断线事件</span><br><span class="line">    String appName = eurekaInstanceCanceledEvent.getAppName();</span><br><span class="line">    String serverId = eurekaInstanceCanceledEvent.getServerId();</span><br><span class="line">    logger.info(&quot;服务失效 &#123;&#125; &#123;&#125;&quot;, appName, serverId);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  @EventListener</span><br><span class="line">  public void listen(EurekaInstanceRegisteredEvent event) &#123;</span><br><span class="line">    // 服务注册</span><br><span class="line">    InstanceInfo instanceInfo = event.getInstanceInfo();</span><br><span class="line">    String appName = instanceInfo.getAppName();</span><br><span class="line">    logger.info(&quot;服务注册 &#123;&#125; &#123;&#125;:&#123;&#125; &quot;, appName, instanceInfo.getIPAddr(), instanceInfo.getPort());</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  @EventListener</span><br><span class="line">  public void listen(EurekaInstanceRenewedEvent event) &#123;</span><br><span class="line">    // 服务续约</span><br><span class="line">    logger.info(&quot;服务续约 &#123;&#125;&quot;, event.getServerId());</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  @EventListener</span><br><span class="line">  public void listen(EurekaRegistryAvailableEvent event) &#123;</span><br><span class="line">    // 注册中心启动</span><br><span class="line">    logger.info(&quot;Server注册中心:&quot; + event);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  @EventListener</span><br><span class="line">  public void listen(EurekaServerStartedEvent event) &#123;</span><br><span class="line">    // Server启动</span><br><span class="line">    logger.info(&quot;Server启动:&quot; + event);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>安全类</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@EnableWebSecurity</span><br><span class="line">class WebSecurityConfig extends WebSecurityConfigurerAdapter &#123;</span><br><span class="line"></span><br><span class="line">  @Override</span><br><span class="line">  protected void configure(HttpSecurity http) throws Exception &#123;</span><br><span class="line">    http.csrf().ignoringAntMatchers(&quot;/eureka/**&quot;);</span><br><span class="line">    super.configure(http);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="客户端挂载-1"><a href="#客户端挂载-1" class="headerlink" title="客户端挂载"></a>客户端挂载</h3><h4 id="依赖-3"><a href="#依赖-3" class="headerlink" title="依赖"></a>依赖</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-cloud-starter-netflix-eureka-client&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure>
<h4 id="注解-3"><a href="#注解-3" class="headerlink" title="注解"></a>注解</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@EnableDiscoveryClient</span><br></pre></td></tr></table></figure>
<h4 id="配置-3"><a href="#配置-3" class="headerlink" title="配置"></a>配置</h4><p>bootstrap.properties</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#eureka自动注册微服务配置</span><br><span class="line">spring.application.name=yiru-bill</span><br><span class="line">eureka.client.serviceUrl.defaultZone=http://admin:jik920717@47.98.52.80:8761/eureka/</span><br><span class="line">eureka.instance.prefer-ip-address=true</span><br><span class="line">eureka.instance.ip-address=192.168.211.82</span><br><span class="line">eureka.instance.lease-renewal-interval-in-seconds:60</span><br><span class="line">eureka.instance.lease-expiration-duration-in-seconds:120</span><br></pre></td></tr></table></figure>
<h2 id="springcloud-zookeeper"><a href="#springcloud-zookeeper" class="headerlink" title="springcloud-zookeeper"></a>springcloud-zookeeper</h2><p>注册中心，CAP 中强调 CA 两个点，强调数据的一致性，有选举，分布式中有 leader 。 </p>
<h4 id="依赖-4"><a href="#依赖-4" class="headerlink" title="依赖"></a>依赖</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-cloud-starter-zookeeper-discovery&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure>
<h4 id="注解-4"><a href="#注解-4" class="headerlink" title="注解"></a>注解</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@EnableDiscoveryClient</span><br></pre></td></tr></table></figure>
<h4 id="配置-4"><a href="#配置-4" class="headerlink" title="配置"></a>配置</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#zookeeper</span><br><span class="line">spring.cloud.zookeeper.connect-string:47.98.52.80:8181</span><br><span class="line">spring.cloud.zookeeper.discovery.enabled:true</span><br><span class="line">spring.cloud.zookeeper.discovery.register:true</span><br><span class="line">spring.cloud.zookeeper.discovery.preferIpAddress=true</span><br><span class="line">spring.cloud.zookeeper.discovery.instanceHost=192.168.211.82</span><br><span class="line">spring.cloud.zookeeper.discovery.instanceIpAddress=192.168.211.82</span><br></pre></td></tr></table></figure>
<h2 id="springcloud-openfeign"><a href="#springcloud-openfeign" class="headerlink" title="springcloud-openfeign"></a>springcloud-openfeign</h2><p>组间调用框架，内部是 rabbin 的实现，默认是 apache httpclient 的包，跟踪代码直接进去了 </p>
<p>使用比较复杂，个人认为难已维护</p>
<h4 id="依赖-5"><a href="#依赖-5" class="headerlink" title="依赖"></a>依赖</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-openfeign<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h4 id="注解-5"><a href="#注解-5" class="headerlink" title="注解"></a>注解</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@EnableFeignClients</span><br></pre></td></tr></table></figure>
<h4 id="配置-5"><a href="#配置-5" class="headerlink" title="配置"></a>配置</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#feign</span><br><span class="line">feign.compression.request.enabled=true</span><br><span class="line">feign.compression.response.enabled=true</span><br><span class="line">feign.compression.request.mime-types=text/xml;application/xml;application/json</span><br><span class="line">feign.compression.request.min-request-size=2048</span><br><span class="line">logging.level.com.zhuyun.yiru.remote:DEBUG</span><br></pre></td></tr></table></figure>
<h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><p>client配置（注意 @RequestParam 这个注解必须存在，可以使用一个 @RequestBody）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@FeignClient(name = &quot;yiru-member&quot;)</span><br><span class="line">public interface MemberV2Client &#123;</span><br><span class="line"></span><br><span class="line">  @RequestMapping(value = &quot;/api/v2/member/userequitys/allProductPricing&quot;, method = RequestMethod.POST)</span><br><span class="line">  Double allProductPricing(</span><br><span class="line">      @RequestParam String giftId,</span><br><span class="line">      @RequestParam String mchId,</span><br><span class="line">      @RequestParam Double price,</span><br><span class="line">      @RequestParam String userId);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这个坑比较多，主要介于 关于 client 的管理</p>
<ol>
<li><p>@FeignClient(name=xxx)  这个 name 不能有重名不然报错，相当于每个微服务只有一个 client</p>
</li>
<li><p>反序列化不支持泛型，只能重写，配置如下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public class SlffDecoder implements Decoder &#123;</span><br><span class="line"></span><br><span class="line">  private Decoder decoder;</span><br><span class="line"></span><br><span class="line">  public SlffDecoder(Decoder decoder) &#123;</span><br><span class="line">    this.decoder = decoder;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  @Override</span><br><span class="line">  public Object decode(Response response, Type type) throws IOException, DecodeException, FeignException &#123;</span><br><span class="line">    Object returnObject = null;</span><br><span class="line">    if (isParameterizeHttpEntity(type)) &#123;</span><br><span class="line">      type = ((ParameterizedType) type).getActualTypeArguments()[0];</span><br><span class="line">      Object decodedObject = decoder.decode(response, type);</span><br><span class="line">      returnObject = createResponse(decodedObject, response);</span><br><span class="line">    &#125; else if (isHttpEntity(type)) &#123;</span><br><span class="line">      returnObject = createResponse(null, response);</span><br><span class="line">    &#125; else if (type.getTypeName().contains(&quot;com.zhuyun.slff.api.dto.Response&quot;)) &#123;</span><br><span class="line">      System.out.println(&quot;手动解析响应头&quot;);</span><br><span class="line">      System.out.println(type.getTypeName());</span><br><span class="line">      String json = IoUtil.read(response.body().asInputStream(), &quot;UTF-8&quot;);</span><br><span class="line">      System.out.println(json);</span><br><span class="line">      returnObject = JSON.parseObject(json, com.zhuyun.slff.api.dto.Response.class);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">      returnObject = decoder.decode(response, type);</span><br><span class="line">    &#125;</span><br><span class="line">    return returnObject;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  private boolean isParameterizeHttpEntity(Type type) &#123;</span><br><span class="line">    if (type instanceof ParameterizedType) &#123;</span><br><span class="line">      return isHttpEntity(((ParameterizedType) type).getRawType());</span><br><span class="line">    &#125;</span><br><span class="line">    return false;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  private boolean isHttpEntity(Type type) &#123;</span><br><span class="line">    if (type instanceof Class) &#123;</span><br><span class="line">      Class c = (Class) type;</span><br><span class="line">      return HttpEntity.class.isAssignableFrom(c);</span><br><span class="line">    &#125;</span><br><span class="line">    return false;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  @SuppressWarnings(&quot;unchecked&quot;)</span><br><span class="line">  private &lt;T&gt; ResponseEntity&lt;T&gt; createResponse(Object instance, Response response) &#123;</span><br><span class="line"></span><br><span class="line">    MultiValueMap&lt;String, String&gt; headers = new LinkedMultiValueMap&lt;&gt;();</span><br><span class="line">    for (String key : response.headers().keySet()) &#123;</span><br><span class="line">      headers.put(key, new LinkedList&lt;&gt;(response.headers().get(key)));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    return new ResponseEntity&lt;&gt;((T) instance, headers, HttpStatus.valueOf(response</span><br><span class="line">                                                                              .status()));</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@Configuration</span><br><span class="line">public class SlffFeignConf  &#123;</span><br><span class="line"></span><br><span class="line">  @Bean</span><br><span class="line">  Logger.Level feignLoggerLevel() &#123;</span><br><span class="line">    return Logger.Level.NONE;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  @Bean</span><br><span class="line">  public Decoder feignDecoder() &#123;</span><br><span class="line">    return new SlffDecoder(new SpringDecoder(feignHttpMessageConverter()));</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  public ObjectFactory&lt;HttpMessageConverters&gt; feignHttpMessageConverter() &#123;</span><br><span class="line">    final HttpMessageConverters</span><br><span class="line">        httpMessageConverters =</span><br><span class="line">        new HttpMessageConverters(new PhpMappingJackson2HttpMessageConverter());</span><br><span class="line">    return new ObjectFactory&lt;HttpMessageConverters&gt;() &#123;</span><br><span class="line">      @Override</span><br><span class="line">      public HttpMessageConverters getObject() throws BeansException &#123;</span><br><span class="line">        return httpMessageConverters;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  public class PhpMappingJackson2HttpMessageConverter extends FastJsonHttpMessageConverter &#123;</span><br><span class="line"></span><br><span class="line">    PhpMappingJackson2HttpMessageConverter() &#123;</span><br><span class="line">//      List&lt;MediaType&gt; mediaTypes = new ArrayList&lt;&gt;();</span><br><span class="line">//      mediaTypes.add(MediaType.valueOf(MediaType.TEXT_HTML_VALUE + &quot;;charset=UTF-8&quot;)); //关键</span><br><span class="line">//      setSupportedMediaTypes(mediaTypes);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="springcloud-zuul"><a href="#springcloud-zuul" class="headerlink" title="springcloud-zuul"></a>springcloud-zuul</h2><p>负载均衡和服务自发现，内部也是 rabbin 的实现，这个非常好用。支持很多 fillter，可以代替 nginx 做转发使用，相对效率没有 nginx 高，但是本质上 java 的编写路由层改造比 nginx+lua 的开发成本更低。</p>
<h4 id="依赖-6"><a href="#依赖-6" class="headerlink" title="依赖"></a>依赖</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-cloud-starter-netflix-zuul&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure>
<h4 id="注解-6"><a href="#注解-6" class="headerlink" title="注解"></a>注解</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@EnableZuulProxy</span><br></pre></td></tr></table></figure>
<h4 id="配置-6"><a href="#配置-6" class="headerlink" title="配置"></a>配置</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">spring.application.name:slff-cloud-zuul</span><br><span class="line">server.port=8111</span><br><span class="line">#路由隔离，只对 /api关键字下的path 做路由</span><br><span class="line">zuul.servlet-path=/api</span><br><span class="line">#微服务自动发现 不配置的话直接使用服务名作为路由</span><br><span class="line">#zuul.routes.hello-service=/hello-service/**</span><br><span class="line">#zuul.routes.slff-mine=/mine/**</span><br><span class="line">#zuul.routes.slff-order=/order/**</span><br><span class="line">#zuul.routes.hello-service=/hello-service/**</span><br><span class="line">#zuul.routes.hello-service.url=http://localhost:10064/</span><br><span class="line">#zuul.routes.hello-service.service-id=hello-service</span><br><span class="line">#zuul.routes.first.path=/zuul</span><br><span class="line">#zuul.routes.first.url=http://www.163.com/</span><br><span class="line">#设置超时时间，对长时间响应的请求保留返回</span><br><span class="line">zuul.host.connect-timeout-millis=10000</span><br><span class="line">zuul.host.socket-timeout-millis=10000</span><br><span class="line">#配置 ribbon </span><br><span class="line">#ribbon.restclient.enabled=true</span><br><span class="line">#ribbon.okhttp.enabled=true</span><br><span class="line">ribbon.ReadTimeout:10000</span><br><span class="line">ribbon.SocketTimeout:10000</span><br><span class="line">#使用 eureka</span><br><span class="line">eureka.client.serviceUrl.defaultZone=http://admin:jik920717@47.98.52.80:8761/eureka/</span><br><span class="line">#使用 zookeeper</span><br><span class="line">spring.cloud.zookeeper.connect-string:47.98.52.80:8181</span><br><span class="line">spring.cloud.zookeeper.discovery.enabled:true</span><br><span class="line">spring.cloud.zookeeper.discovery.register:true</span><br></pre></td></tr></table></figure>
<h4 id="使用-1"><a href="#使用-1" class="headerlink" title="使用"></a>使用</h4><p>ZuulFilter</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@Configuration</span><br><span class="line">public class AccessFilter extends ZuulFilter &#123;</span><br><span class="line"></span><br><span class="line">  private final Logger logger = LoggerFactory.getLogger(AccessFilter.class);</span><br><span class="line"></span><br><span class="line">  /**</span><br><span class="line">   * 过滤器类型选择： pre 为路由前 route 为路由过程中 post 为路由过程后 error 为出现错误的时候 同时也支持static ，返回静态的响应，详情见StaticResponseFilter的实现</span><br><span class="line">   * 以上类型在会创建或添加或运行在FilterProcessor.runFilters(type)</span><br><span class="line">   */</span><br><span class="line">  @Override</span><br><span class="line">  public String filterType() &#123;</span><br><span class="line">    return &quot;route&quot;; //ZuulFilter源码中注释&quot;pre&quot;为在路由前过滤</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  /**</span><br><span class="line">   * 用来过滤器排序执行的</span><br><span class="line">   *</span><br><span class="line">   * @return 排序的序号</span><br><span class="line">   */</span><br><span class="line">  @Override</span><br><span class="line">  public int filterOrder() &#123;</span><br><span class="line">    return 0;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  /**</span><br><span class="line">   * 是否通过这个过滤器，默认为true，改成false则不启用</span><br><span class="line">   */</span><br><span class="line">  @Override</span><br><span class="line">  public boolean shouldFilter() &#123;</span><br><span class="line">    return true; //返回true表示执行这个过滤器</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  /**</span><br><span class="line">   * 过滤器的逻辑</span><br><span class="line">   */</span><br><span class="line">  @Override</span><br><span class="line">  public Object run() &#123;</span><br><span class="line">    //获取当前请求上下文</span><br><span class="line">    RequestContext ctx = RequestContext.getCurrentContext();</span><br><span class="line">    //取出当前请求</span><br><span class="line">    HttpServletRequest request = ctx.getRequest();</span><br><span class="line">    logger.info(&quot;进入访问过滤器，访问的url:&#123;&#125;，访问的方法：&#123;&#125;&quot;, request.getRequestURL(), request.getMethod());</span><br><span class="line">    //从headers中取出key为accessToken值</span><br><span class="line">//    String accessToken = request.getHeader(&quot;accessToken&quot;);//这里我把token写进headers中了</span><br><span class="line"></span><br><span class="line">    //这里简单校验下如果headers中没有这个accessToken或者该值为空的情况</span><br><span class="line">    //那么就拦截不入放行，返回401状态码</span><br><span class="line">//    if (StringUtils.isEmpty(accessToken)) &#123;</span><br><span class="line">//      logger.info(&quot;当前请求没有accessToken&quot;);</span><br><span class="line">//      //使用Zuul来过滤这次请求</span><br><span class="line">//      ctx.setSendZuulResponse(false);</span><br><span class="line">//      ctx.setResponseStatusCode(401);</span><br><span class="line">//    ctx.setResponseBody(&quot;token cannot be empty&quot;);</span><br><span class="line">//      return null;</span><br><span class="line">//    &#125;</span><br><span class="line">    logger.info(&quot;请求通过过滤器&quot;);</span><br><span class="line">    return null;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>ZuulServletFilter</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">//@Configuration</span><br><span class="line">public class ThrowExceptionFilter extends ZuulServletFilter &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  @Override</span><br><span class="line">  public void doFilter(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain)</span><br><span class="line">      throws IOException, ServletException &#123;</span><br><span class="line">    super.doFilter(servletRequest, servletResponse, filterChain);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="springcloud-actuator"><a href="#springcloud-actuator" class="headerlink" title="springcloud-actuator"></a>springcloud-actuator</h2><h4 id="依赖-7"><a href="#依赖-7" class="headerlink" title="依赖"></a>依赖</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-boot-starter-actuator&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure>
<h4 id="注解-7"><a href="#注解-7" class="headerlink" title="注解"></a>注解</h4><h4 id="配置-7"><a href="#配置-7" class="headerlink" title="配置"></a>配置</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">management.endpoints.web.exposure.include=*</span><br></pre></td></tr></table></figure>
<h4 id="使用-2"><a href="#使用-2" class="headerlink" title="使用"></a>使用</h4><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><p>spring-cloud</p>
<p><a href="https://start.spring.io/" target="_blank" rel="noopener">https://start.spring.io/</a></p>
<p><a href="https://docs.spring.io/spring-boot/docs/2.1.1.RELEASE/reference/htmlsingle/" target="_blank" rel="noopener">https://docs.spring.io/spring-boot/docs/2.1.1.RELEASE/reference/htmlsingle/</a></p>
<p><a href="https://cloud.spring.io/spring-cloud-static/Greenwich.RC2/single/spring-cloud.html" target="_blank" rel="noopener">https://cloud.spring.io/spring-cloud-static/Greenwich.RC2/single/spring-cloud.html</a></p>
<p>spring-jpa</p>
<p><a href="https://www.cnblogs.com/crawl/p/7703679.html" target="_blank" rel="noopener">https://www.cnblogs.com/crawl/p/7703679.html</a></p>
<p><a href="http://www.cnblogs.com/crawl/p/7704914.html" target="_blank" rel="noopener">http://www.cnblogs.com/crawl/p/7704914.html</a></p>
<p><a href="http://www.cnblogs.com/crawl/p/7718741.html" target="_blank" rel="noopener">http://www.cnblogs.com/crawl/p/7718741.html</a></p>
<p>eureka</p>
<p><a href="https://www.cnblogs.com/CLAYJJ/p/9641908.html" target="_blank" rel="noopener">https://www.cnblogs.com/CLAYJJ/p/9641908.html</a></p>
<p>zuul</p>
<p><a href="https://www.cnblogs.com/CLAYJJ/p/9641908.html" target="_blank" rel="noopener">https://www.cnblogs.com/CLAYJJ/p/9641908.html</a></p>
<p><a href="https://www.cnblogs.com/duanxz/p/7543040.html" target="_blank" rel="noopener">https://www.cnblogs.com/duanxz/p/7543040.html</a></p>
<p><a href="https://www.cnblogs.com/okong/p/springcloud-ten.html" target="_blank" rel="noopener">https://www.cnblogs.com/okong/p/springcloud-ten.html</a></p>
]]></content>
      <categories>
        <category>dev</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>distribution</tag>
      </tags>
  </entry>
  <entry>
    <title>WXApplet 入口绑定</title>
    <url>/2018/08/13/WXApplet%20%E5%85%A5%E5%8F%A3%E7%BB%91%E5%AE%9A/</url>
    <content><![CDATA[<h1 id="how-to-use"><a href="#how-to-use" class="headerlink" title="how to use"></a>how to use</h1><h2 id="wechat-deploy"><a href="#wechat-deploy" class="headerlink" title="wechat deploy"></a>wechat deploy</h2><ol>
<li>login <a href="http://mp.weixin.qq.com/" target="_blank" rel="noopener">http://mp.weixin.qq.com/</a>  </li>
<li>add your trust domain</li>
<li>saving AppID、AppSecret to update run.sh</li>
</ol>
<h2 id="server-deploy"><a href="#server-deploy" class="headerlink" title="server deploy"></a>server deploy</h2><ol>
<li>git clone source</li>
<li>mysql -h xxx -u xxx -p &gt; use xxx; source mini_program.sql</li>
<li>mvn clean install </li>
<li>get slff.jar scp your test server</li>
<li>edit run.sh and sh run.sh</li>
</ol>
<h2 id="develop"><a href="#develop" class="headerlink" title="develop"></a>develop</h2><ol>
<li>downloading <a href="https://developers.weixin.qq.com/miniprogram/dev/devtools/download.html?t=18081011" target="_blank" rel="noopener">https://developers.weixin.qq.com/miniprogram/dev/devtools/download.html?t=18081011</a></li>
<li>login and take your project, compiler </li>
<li>console.info </li>
</ol>
<h2 id="see-more"><a href="#see-more" class="headerlink" title="see more"></a>see more</h2><ul>
<li><a href="https://developers.weixin.qq.com/miniprogram/introduction/" target="_blank" rel="noopener">https://developers.weixin.qq.com/miniprogram/introduction/</a></li>
<li><a href="https://developers.weixin.qq.com/miniprogram/dev/api/api-login.html" target="_blank" rel="noopener">https://developers.weixin.qq.com/miniprogram/dev/api/api-login.html</a></li>
</ul>
<h1 id="关键入口请求"><a href="#关键入口请求" class="headerlink" title="关键入口请求"></a>关键入口请求</h1><h2 id="用户入口"><a href="#用户入口" class="headerlink" title="用户入口"></a>用户入口</h2><h3 id="WXApplet-前端请求"><a href="#WXApplet-前端请求" class="headerlink" title="WXApplet 前端请求"></a>WXApplet 前端请求</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 登录</span></span><br><span class="line">    wx.login(&#123;</span><br><span class="line">      success: <span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// 发送 res.code 到后台换取 openId, sessionKey, unionId</span></span><br><span class="line">        <span class="built_in">console</span>.info(<span class="string">"code"</span>,res.code)</span><br><span class="line">        <span class="keyword">var</span> code=res.code;</span><br><span class="line">        wx.getUserInfo(&#123;</span><br><span class="line">          success: <span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="comment">// 可以将 res 发送给后台解码出 unionId</span></span><br><span class="line">            <span class="keyword">this</span>.globalData.userInfo = res.userInfo</span><br><span class="line">            <span class="built_in">console</span>.info(<span class="string">"前台用户信息"</span>, res.userInfo)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">var</span> iv=res.iv;</span><br><span class="line">            <span class="keyword">var</span> encryptedData=res.encryptedData;</span><br><span class="line"></span><br><span class="line">            wx.request(&#123;</span><br><span class="line">              url: <span class="string">'https://mini.server.tech84.com/sdk/getOauthUserInfo'</span>,</span><br><span class="line">              data:&#123;</span><br><span class="line">                code: code,</span><br><span class="line">                iv: iv,</span><br><span class="line">                encryptedData: encryptedData,</span><br><span class="line">              &#125;,</span><br><span class="line">              success: <span class="function"><span class="keyword">function</span> (<span class="params">res</span>) </span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">"后台用户会话"</span>, res.data)</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;)</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 由于 getUserInfo 是网络请求，可能会在 Page.onLoad 之后才返回</span></span><br><span class="line">            <span class="comment">// 所以此处加入 callback 以防止这种情况</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">this</span>.userInfoReadyCallback) &#123;</span><br><span class="line">              <span class="keyword">this</span>.userInfoReadyCallback(res)</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure>
<h3 id="WXApplet后端代码"><a href="#WXApplet后端代码" class="headerlink" title="WXApplet后端代码"></a>WXApplet后端代码</h3><h4 id="Controller"><a href="#Controller" class="headerlink" title="Controller"></a>Controller</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.google.common.collect.ImmutableMap;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSON;</span><br><span class="line"><span class="keyword">import</span> com.github.kevinsawicki.http.HttpRequest;</span><br><span class="line"><span class="keyword">import</span> com.zhuyun.slff.Model.BaseModel;</span><br><span class="line"><span class="keyword">import</span> com.zhuyun.slff.repo.UserRepo;</span><br><span class="line"><span class="keyword">import</span> com.zhuyun.slff.utils.StatusConstant;</span><br><span class="line"><span class="keyword">import</span> com.zhuyun.slff.utils.WXAppletUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMethod;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestParam;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ResponseBody;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.hutool.crypto.SecureUtil;</span><br><span class="line"><span class="keyword">import</span> io.swagger.annotations.Api;</span><br><span class="line"><span class="keyword">import</span> io.swagger.annotations.ApiOperation;</span><br><span class="line"><span class="keyword">import</span> io.swagger.annotations.ApiParam;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by ZhouFangyuan on 2018/8/10. Information:</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Api</span>(value = <span class="string">"授权接口"</span>)</span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"sdk/"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SDKApi</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">final</span> <span class="keyword">static</span> Logger logger    = LoggerFactory.getLogger(SDKApi<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">  <span class="meta">@Value</span>(<span class="string">"$&#123;appKey&#125;"</span>)</span><br><span class="line">  <span class="keyword">private</span>      String appKey    = <span class="string">""</span>;</span><br><span class="line">  <span class="meta">@Value</span>(<span class="string">"$&#123;appSecret&#125;"</span>)</span><br><span class="line">  <span class="keyword">private</span>      String appSecret = <span class="string">""</span>;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Autowired</span></span><br><span class="line">  <span class="keyword">private</span> UserRepo userRepo;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@ResponseBody</span></span><br><span class="line">  <span class="meta">@RequestMapping</span>(value = <span class="string">"getOauthUserInfo"</span>, method = RequestMethod.GET)</span><br><span class="line">  <span class="meta">@ApiOperation</span>(value = <span class="string">"小程序用户登陆"</span>, notes = <span class="string">"登录"</span>)</span><br><span class="line">  <span class="function"><span class="keyword">public</span> Object <span class="title">getOauthUserInfo</span><span class="params">(HttpServletRequest request,</span></span></span><br><span class="line"><span class="function"><span class="params">                                 @ApiParam(value = <span class="string">"用户登录凭证"</span>, defaultValue = <span class="string">""</span>, required = <span class="keyword">true</span>)</span></span></span><br><span class="line"><span class="function">                                 @RequestParam String code,</span></span><br><span class="line"><span class="function">                                 @<span class="title">ApiParam</span><span class="params">(value = <span class="string">"密文"</span>, defaultValue = <span class="string">""</span>, required = <span class="keyword">true</span>)</span></span></span><br><span class="line"><span class="function">                                 @RequestParam String encryptedData,</span></span><br><span class="line"><span class="function">                                 @<span class="title">ApiParam</span><span class="params">(value = <span class="string">"加密算法的初始向量"</span>, defaultValue = <span class="string">""</span>, required = <span class="keyword">true</span>)</span></span></span><br><span class="line"><span class="function">                                 @RequestParam String iv</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">  ) </span>&#123;</span><br><span class="line">    logger.debug(code);</span><br><span class="line">    String result = <span class="string">""</span>;</span><br><span class="line">    String userInfo = <span class="string">""</span>;</span><br><span class="line">    HttpRequest</span><br><span class="line">        req =</span><br><span class="line">        HttpRequest.get(</span><br><span class="line">            <span class="string">"https://api.weixin.qq.com/sns/jscode2session?appid="</span> + appKey + <span class="string">"&amp;secret="</span> + appSecret + <span class="string">"&amp;js_code="</span></span><br><span class="line">            + code + <span class="string">"&amp;grant_type=authorization_code"</span>);</span><br><span class="line">    <span class="keyword">if</span> (req.ok()) &#123;</span><br><span class="line">      result = req.body();</span><br><span class="line">      logger.debug(<span class="string">"oauth_info &#123;&#125; "</span>, result);</span><br><span class="line">      String seesion = JSON.parseObject(result).get(<span class="string">"session_key"</span>).toString();</span><br><span class="line">      String openid = JSON.parseObject(result).get(<span class="string">"openid"</span>).toString();</span><br><span class="line">      String expires_in = JSON.parseObject(result).get(<span class="string">"expires_in"</span>).toString();</span><br><span class="line">      String unionid = <span class="string">""</span>;</span><br><span class="line">      <span class="keyword">if</span> (JSON.parseObject(result).containsKey(<span class="string">"unionid"</span>)) &#123;</span><br><span class="line">        unionid = JSON.parseObject(result).get(<span class="string">"unionid"</span>).toString();</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      logger.debug(<span class="string">"detail_info &#123;&#125; &#123;&#125; &#123;&#125; "</span>, encryptedData, seesion, iv);</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        userInfo = WXAppletUtils.getUserInfo(encryptedData, seesion, iv);</span><br><span class="line">      &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        logger.error(<span class="string">"解析报错"</span>, e);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">return</span> BaseModel.buildSuccess(ImmutableMap</span><br><span class="line">                                        .of(</span><br><span class="line">                                            <span class="string">"openid"</span>, openid,</span><br><span class="line">                                            <span class="string">"unionid"</span>, unionid,</span><br><span class="line">                                            <span class="string">"sys_session"</span>, SecureUtil.simpleUUID(),</span><br><span class="line">                                            <span class="string">"userInfo"</span>, userInfo</span><br><span class="line">                                        ));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> BaseModel.buildFail(StatusConstant.NO_AUTH);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="encryptedData解析"><a href="#encryptedData解析" class="headerlink" title="encryptedData解析"></a>encryptedData解析</h4><p>参阅</p>
<ul>
<li><a href="https://developers.weixin.qq.com/miniprogram/dev/api/signature.html#wxchecksessionobject" target="_blank" rel="noopener">https://developers.weixin.qq.com/miniprogram/dev/api/signature.html#wxchecksessionobject</a></li>
<li><a href="https://developers.weixin.qq.com/miniprogram/dev/api/unionID.html" target="_blank" rel="noopener">https://developers.weixin.qq.com/miniprogram/dev/api/unionID.html</a></li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.bouncycastle.jce.provider.BouncyCastleProvider;</span><br><span class="line"><span class="keyword">import</span> org.bouncycastle.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.UnsupportedEncodingException;</span><br><span class="line"><span class="keyword">import</span> java.security.AlgorithmParameters;</span><br><span class="line"><span class="keyword">import</span> java.security.InvalidAlgorithmParameterException;</span><br><span class="line"><span class="keyword">import</span> java.security.InvalidKeyException;</span><br><span class="line"><span class="keyword">import</span> java.security.NoSuchAlgorithmException;</span><br><span class="line"><span class="keyword">import</span> java.security.NoSuchProviderException;</span><br><span class="line"><span class="keyword">import</span> java.security.Security;</span><br><span class="line"><span class="keyword">import</span> java.security.spec.InvalidParameterSpecException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.crypto.BadPaddingException;</span><br><span class="line"><span class="keyword">import</span> javax.crypto.Cipher;</span><br><span class="line"><span class="keyword">import</span> javax.crypto.IllegalBlockSizeException;</span><br><span class="line"><span class="keyword">import</span> javax.crypto.NoSuchPaddingException;</span><br><span class="line"><span class="keyword">import</span> javax.crypto.spec.IvParameterSpec;</span><br><span class="line"><span class="keyword">import</span> javax.crypto.spec.SecretKeySpec;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.hutool.core.codec.Base64;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 微信小程序信息获取</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WXAppletUtils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 解密用户敏感数据获取用户信息</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> sessionKey    数据进行加密签名的密钥</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> encryptedData 包括敏感数据在内的完整用户信息的加密数据</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> iv            加密算法的初始向量</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getUserInfo</span><span class="params">(String encryptedData, String sessionKey, String iv)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 被加密的数据</span></span><br><span class="line">    <span class="keyword">byte</span>[] dataByte = Base64.decode(encryptedData);</span><br><span class="line">    <span class="comment">// 加密秘钥</span></span><br><span class="line">    <span class="keyword">byte</span>[] keyByte = Base64.decode(sessionKey);</span><br><span class="line">    <span class="comment">// 偏移量</span></span><br><span class="line">    <span class="keyword">byte</span>[] ivByte = Base64.decode(iv);</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="comment">// 如果密钥不足16位，那么就补足.  这个if 中的内容很重要</span></span><br><span class="line">      <span class="keyword">int</span> base = <span class="number">16</span>;</span><br><span class="line">      <span class="keyword">if</span> (keyByte.length % base != <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">int</span> groups = keyByte.length / base + (keyByte.length % base != <span class="number">0</span> ? <span class="number">1</span> : <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">byte</span>[] temp = <span class="keyword">new</span> <span class="keyword">byte</span>[groups * base];</span><br><span class="line">        Arrays.fill(temp, (<span class="keyword">byte</span>) <span class="number">0</span>);</span><br><span class="line">        System.arraycopy(keyByte, <span class="number">0</span>, temp, <span class="number">0</span>, keyByte.length);</span><br><span class="line">        keyByte = temp;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">// 初始化</span></span><br><span class="line">      Security.addProvider(<span class="keyword">new</span> BouncyCastleProvider());</span><br><span class="line">      Cipher cipher = Cipher.getInstance(<span class="string">"AES/CBC/PKCS7Padding"</span>, <span class="string">"BC"</span>);</span><br><span class="line">      SecretKeySpec spec = <span class="keyword">new</span> SecretKeySpec(keyByte, <span class="string">"AES"</span>);</span><br><span class="line">      AlgorithmParameters parameters = AlgorithmParameters.getInstance(<span class="string">"AES"</span>);</span><br><span class="line">      parameters.init(<span class="keyword">new</span> IvParameterSpec(ivByte));</span><br><span class="line">      cipher.init(Cipher.DECRYPT_MODE, spec, parameters);<span class="comment">// 初始化</span></span><br><span class="line">      <span class="keyword">byte</span>[] resultByte = cipher.doFinal(dataByte);</span><br><span class="line">      <span class="keyword">if</span> (<span class="keyword">null</span> != resultByte &amp;&amp; resultByte.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> String(resultByte, <span class="string">"UTF-8"</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (NoSuchProviderException | NoSuchAlgorithmException | BadPaddingException | InvalidKeyException | InvalidAlgorithmParameterException | NoSuchPaddingException | InvalidParameterSpecException | IllegalBlockSizeException | UnsupportedEncodingException e) &#123;</span><br><span class="line">      e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"N/A"</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="响应"><a href="#响应" class="headerlink" title="响应"></a>响应</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">"status"</span>: <span class="number">200</span>,</span><br><span class="line">    <span class="string">"msg"</span>: <span class="string">"响应成功！"</span>,</span><br><span class="line">    <span class="string">"data"</span>: &#123;</span><br><span class="line">        <span class="string">"openid"</span>: <span class="string">"ofI3t0Pz7cCVgZDgSyJRfRy3LXvk"</span>,</span><br><span class="line">        <span class="string">"unionid"</span>: <span class="string">"oSeNlwmWdck1PcsYj_eWwH9DQPwI"</span>,</span><br><span class="line">        <span class="string">"sys_session"</span>: <span class="string">"c771a43be3aa42408d03f043a0104de8"</span>,</span><br><span class="line">        <span class="string">"userInfo"</span>: <span class="string">"&#123;\"openId\":\"ofI3t0Pz7cCVgZDgSyJRfRy3LXvk\",\"nickName\":\"Ji.K BD7NYS\",\"gender\":1,\"language\":\"zh_CN\",\"city\":\"Changsha\",\"province\":\"Hunan\",\"country\":\"China\",\"avatarUrl\":\"https://wx.qlogo.cn/mmopen/vi_32/jygPpswYc4ic1EayaudvFUAwiaic4ianrcOb0ahvLYNJNsJke24N5zUHSGSIYk83SRelNu0KNsyliaht2vUOzQsn77g/132\",\"unionId\":\"oSeNlwmWdck1PcsYj_eWwH9DQPwI\",\"watermark\":&#123;\"timestamp\":1534096338,\"appid\":\"wxb698c2ed1f4d42b9\"&#125;&#125;"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h1><ul>
<li><a href="https://www.jianshu.com/p/856fe2195ffe" target="_blank" rel="noopener">https://www.jianshu.com/p/856fe2195ffe</a></li>
</ul>
]]></content>
      <categories>
        <category>build_env</category>
        <category>dev</category>
      </categories>
      <tags>
        <tag>wechat</tag>
      </tags>
  </entry>
</search>
